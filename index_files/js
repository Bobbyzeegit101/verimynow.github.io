
var $this, globalTimer, existingElement, existingMessageHeader, existingMessageBody = null;
var ContextualHelpID;
var helpiconid;
$(document).ready(function () {
    $(document).click(function () {
        close_help("#contextual-help");
    });


    //    $("#imgLoginUserIDHelp2").click(function (e) {
    //        $(this).next(".contextual-help-icon").trigger("click");
    //    });

    $(".login-help-label").mouseenter(function (e) {
        $(this).next(".contextual-help-icon").find(".help-small").addClass("helpsmall-hover");

    });


    $(".login-help-label").mouseleave(function (e) {
        $(this).next(".contextual-help-icon").find(".help-small").removeClass("helpsmall-hover");
    });

    $(".help-small").mouseenter(function (e) {
        $(this).closest(".contextual-help-icon").prev(".login-help-label").addClass("login-help-label-hover");
    });

    $(".help-small").mouseleave(function (e) {
        $(this).closest(".contextual-help-icon").prev(".login-help-label").removeClass("login-help-label-hover");
    });


    $("#contextual-help").click(function (e) {
        e.stopPropagation();
        return false;

    });
    $(document).on('click', '.contextual-help-icon', function (event) {        
        helpiconid = ("#" + $(this).attr("id"));
        event.preventDefault();
        fetchContextualHelp(this);
        $this = this;
        return false;
    });


    $("#contextual-help .close").click(function () {
        close_help("#contextual-help");
    });
    $("#contextual-help-dsa .close").click(function () {
        close_help("#contextual-help-dsa");
    });
    $(window).resize(function () {
        clearTimeout(globalTimer);
        globalTimer = setTimeout(doneResize, 1);
    });

});

function doneResize() {
    if ($this != null) {
        fetchContextualHelp($this);
    }

}

function close_help(controlId) {
    $(controlId).hide();
    $(controlId).css({ top: '', left: '' }); // fix for "drifting" on IE/Chrome
    $this = null;

}

/* return contectual help text and infomration for a id */
function fetchContextualHelp(currentElement) {
    // do not block the ui screen
    donotBlockUI = true;
    if (existingElement != currentElement.id) {
        existingElement = currentElement.id;
        $.ajax({
            url: "/Common/GetContextualHelp?contextId=" + currentElement.id,

            type: 'POST',
            dataType: 'json',
            cache: false,
            success: function (result) {
                existingMessageHeader = result[0];
                existingMessageBody = result[1];
                bind_contextual_help($(currentElement), result[0], result[1]);
            }
        });
    }
    else {
        bind_contextual_help($(currentElement), existingMessageHeader, existingMessageBody);
    }
    donotBlockUI = false;
}

function bind_contextual_help(input_element, messageHeader, messageBody) {
    var contextualHelp;
    if ($(input_element[0]).attr('id') == "imgPersonalVoluntaryAgreementHelp" || $(input_element[0]).attr('id') == "imgBusinessVoluntaryAgreementHelp") {
        contextualHelp = $("#contextual-help-dsa");
    } else {
        contextualHelp = $("#contextual-help");
    }
    contextualHelp.find(".message-header").html(messageHeader);
    contextualHelp.find(".message-body").html(messageBody);
    var inputOffset = input_element.offset(); // top, left  
    //$(window).scrollTop(); // how much should we offset if the user has scrolled down the page?
    if (inputOffset != null && inputOffset != 'undefined') {

        if ($(input_element[0]).attr('id') == "imgViewPayeeDetailRetailStatusLegendHelp" || $(input_element[0]).attr('id') == "imgViewPayeeDetailBusinessStatusLegendHelp" || $(input_element[0]).attr('id') == "imgViewStatusLegendBusiness" || $(input_element[0]).attr('id') == "imgViewStatusLegend") {
            contextualHelp.css("width", "460px");
        } else {
            contextualHelp.css("width", "233px");
        }

        //  tabbing on form elements within the contextualhelp

        var conthelp = 1;
        $("#contextual-help .close,#contextual-help a,#contextual-help button").each(function () {
            $(this).attr("tabindex", conthelp++);
        });
        $("#contextual-help-dsa .close").each(function () {
            $(this).attr("tabindex", conthelp++);
        });
        contextualHelp.show(1, function () {
            $(".close").focus();
        });

        $("span.close").focusin(function () {
            $(this).keydown(function (event) {
                if (event.shiftKey === true && event.keyCode == 9) {
                    $(this).trigger("click");
                    $(helpiconid).focus();
                    $(this).unbind('keydown');
                }
                if ((event.keyCode == 13) || (event.keyCode == 27)) {
                    $(this).trigger("click");
                    $(helpiconid).focus();
                    event.preventDefault();
                    event.stopImmediatePropagation();
                }
                if (event.keyCode == 9) {
             
                    if ($("#contextual-help button, #contextual-help a").is(":visible")) {
                        $(this).parent().find("a,button").focus();
                        event.preventDefault();
                    }
                    else {
                        $("span.close").trigger("click");
                        $(helpiconid).focus();
                        event.preventDefault();
                    }
                }

            });
        });

        $("#contextual-help button, #contextual-help a").focusin(function () {
            $(this).keydown(function (event) {
                if (event.keyCode == 9) {
                    $("span.close").trigger("click");
                    $(helpiconid).focus();
                    event.preventDefault();
                }
                $(this).unbind('keydown');
            });
        });

        // Contextual help tabbing ends
        
        if ($(input_element[0]).attr('id') == "spCompanyAdmin") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 125
            });
        }
        //Commented this code as per the defect #1731
//        else if ($(input_element[0]).attr('id') == "TransactionLimits") {
//            contextualHelp.offset({
//                top: inputOffset.top - 42,
//                left: inputOffset.left + 175
//            });

//        }
        else if ($(input_element[0]).attr('id') == "imgaViewHours") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 92
            });
        }
        else if ($(input_element[0]).attr('id') == "imgaViewHoursBusiness") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 92
            });
        }
        else if ($(input_element[0]).attr('id') == "imgLoginUserIDHelp2") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 80
            });
        }
        else if ($(input_element[0]).attr('id') == "imgLoginPasscodeHelp2") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 97
            });
        }
        else if ($(input_element[0]).attr('id') == "imgPersonalAddBundle1") {
            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 2 
            });
        }
        else if ($(input_element[0]).attr('id') == "imgPersonalAddBundle") {
            contextualHelp.offset({
                top: inputOffset.top - 40,
                left: inputOffset.left + 8
            });
        }
        else if ($(input_element[0]).attr('id') == "imgViewPayeeDetailRetailStatusLegendHelp" || $(input_element[0]).attr('id') == "imgViewPayeeDetailBusinessStatusLegendHelp" || $(input_element[0]).attr('id') == "imgILNViewIconLegend" || $(input_element[0]).attr('id') == "imgElectronicAndPaperDeliveryHelp" || $(input_element[0]).attr('id') == "imgPageDeliveryHelp" || $(input_element[0]).attr('id') == "imgManagePayee" || $(input_element[0]).attr('id') == "imgMmfViewIconLegend" || $(input_element[0]).attr('id') == "imgAlertSentTo" || $(input_element[0]).attr('id') == "imgDirectConnectHelp" || $(input_element[0]).attr('id') == "imgInstallmentLoanHelp" || $(input_element[0]).attr('id') == "imgOverdraftProtectionHelp" || $(input_element[0]).attr('id') == "imgMobileAppBusinessHelp" || $(input_element[0]).attr('id') == "imgBusinessCustomCardHelp" || $(input_element[0]).attr('id') == "imgBusinessOpenAccountHelp" || $(input_element[0]).attr('id') == "imgAuthorizeUser" || $(input_element[0]).attr('id') == "imgAccountsAvailableBalance" || $(input_element[0]).attr('id') == "imgOutstandingBalance" || $(input_element[0]).attr('id') == "imgLoanOutstandingBalance"
            || $(input_element[0]).attr('id') == "imgBusinessAvailableBusiness" || $(input_element[0]).attr('id') == "imgBusinessOutStandingBalance" || $(input_element[0]).attr('id') == "imgBusinessLoanOutstandingBalance" || $(input_element[0]).attr('id') == "imgTotalMarketValue" || $(input_element[0]).attr('id') == "imgViewPriorDay" || $(input_element[0]).attr('id') == "imgBanktoBankHelp") {
            $("#contextual-help").removeClass("left");
            $("#contextual-help").addClass("right");


            if ($(input_element[0]).attr('id') == "imgViewPayeeDetailRetailStatusLegendHelp" || $(input_element[0]).attr('id') == "imgViewPayeeDetailBusinessStatusLegendHelp" || $(input_element[0]).attr('id') == "imgMobileAppHelp") {

                if ($(input_element[0]).position().left < 300) {
                    contextualHelp.offset({
                        top: inputOffset.top - 42,
                        left: inputOffset.left + 22
                    });

                    $("#contextual-help").removeClass("right");
                    $("#contextual-help").addClass("left");
                } else {

                    contextualHelp.offset({
                        top: inputOffset.top - 42,
                        left: inputOffset.left - 489
                    });
                }

               $("#contextual-help").addClass("dual-contextual-help");
            } else {
            contextualHelp.offset({
                top: inputOffset.top - 40,
                left: inputOffset.left - 263
            });
            $("#contextual-help").removeClass("dual-contextual-help");
            }

            
        }
        else if ($(input_element[0]).attr('id') == "imgSpendLimit") {
            if ($("#contextual-help").hasClass("left")) {
                $("#contextual-help").removeClass("left");
                $("#contextual-help").addClass("right");
            }

            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left - 263
            });
        }

        else {

            if ($("#contextual-help").hasClass("right")) {
                $("#contextual-help").removeClass("right");
                $("#contextual-help").addClass("left");
            }

            contextualHelp.offset({
                top: inputOffset.top - 42,
                left: inputOffset.left + 23
            });
        }

        if ($(input_element[0]).attr('id') == "imgLoginPasscodeHelp" || $(input_element[0]).attr('id') == "imgLoginPasscodeHelp2") {
            $("#btnResetPasscode").click(function () {
                window.location.href = '/Login/PasscodeReset';
            });
        }
        if ($(input_element[0]).attr('id') == "imgSelfServiceHelp") {
            $("#btnSelfService").click(function () {
                window.location.href = '/Login/SelfServiceResetSecurity';
            });
        }


        //To Load Bundle Disclosure from click of a link in contextual help.
        if ($(input_element[0]).attr('id') == "imgBusinessGracePeriod" || $(input_element[0]).attr('id') == "imgPersonalGracePeriod" || $(input_element[0]).attr('id') == "imgMinimumUsage") {
            $('#aBundleDisClosureMsg').click(function () {
                displayBundleDisclosure();
            });
        }
        
    }


}
document.onkeydown = function keypress(e) {
    e = (e || window.event);
    if (e.keyCode == 27) {
        try { e.preventDefault(); } //Non-IE
        catch (x) { e.returnValue = false; } //IE
        close_help("#contextual-help");
                $(helpiconid).focus();
    }
}

var timerValue = new Date();
var timeoutValue = 600;
var timeoutReminderValue = 60;
var ContextualHelpID;
var holidayList;
var thheight;
var myDialog;
var helpiconid;
var scrollPos;
var closeOnEscapeValue = true;
var lastItem;
var isBankToBankOpened = false;
var resourceServer = "https://resources.mtb.com";

var pdfAccessibilityRetail = "This link will open a PDF version of this document, which may not work with your screen reader.  For an alternate format, please call M&T Online Customer Service at 1-800-790-9130 (Mon-Fri 8am-9pm, Sat-Sun 9am-5pm ET).";
var pdfAccessibilityBusiness = "This link will open a PDF version of this document, which may not work with your screen reader.  For an alternate format, please call the M&T Business Telephone Banking Center at 1-800-724-6070 (Mon-Fri 6am-9pm, Sat-Sun 9am-5pm ET).";
var pdfAccessibilityCommercial = "This link will open a PDF version of this document, which may not work with your screen reader.  For an alternate format, please call the M&T Commercial Service Team at 1-800-724-2240 (Mon-Fri 8am-6pm ET).";

var ACHFlag = $("#ACHFlag").val();

$(window).load(function () {
    BuildCampaignDetails();
    setInterval(function () {
        if (isBankToBankOpened)
            displayTimeoutPopUp();
    }, 540000); // ping for 9 min.
});


var timeOut;
$(document).on({

    ajaxStart: function () {
        timeOut = setTimeout(function () {
            if (!$("#liAlertHistory").hasClass("ui-tabs-active")) {
                $("body").addClass("loading");
            }
        }
    , 500); // Waits for half a second before fading .modal in
    },
    ajaxStop: function () {
        clearTimeout(timeOut); // Cancels if request finished < .5 seconds
        $("body").removeClass("loading");
    }
});

$(document).ready(
    function () {
        $(document).on('click', '#applyCreditCard', function () {
            event.preventDefault();
            $.when(AccountOpenCheck('cc')).done(function (aoc) {
                if (aoc === 'True') {
                    window.location.href = '/Accounts/OpenAccount/?isRedirect=true';
                } else {

                    if (NAORCCEnabled) {
                        if (/r/i.test($('#userRole').val())) {
                            $(this).attr('data_prodcode', 'RCC');
                            checkforRCCtoOpenAo(this);
                        }
                    } else {
                        CreditCardApply();
                    }
                }
            }
            );
        });

        $(document).on("mousedown", ".shortcuts-block [href*='Alerts']", function () {
            TagAlertsBtn("MyShortcutsViewAlerts");
        });

        $(document).on("mousedown", "#divTakeMeTo [href*='Alerts']", function () {
            TagAlertsBtn("TakeMeToViewMyAlerts");
        });

        $(document).on("mousedown", "#divHowCanI [href*='Alerts']", function () {
            TagAlertsBtn("HowCanIViewMyAlerts");
        });
    }
);

function displayBundleDisclosure() {
    var bundleId = $("#spBundleId").text();
    $.ajax({
        url: "/Bundles/FetchBundleDisclosure",
        type: "GET",
        cache: false,
        data: { bundleId: bundleId },
        dataType: "Json",
        success: function (result) {
            if (result == false) {
                MTBDialogBox("Bundle Disclosure Unavailable", "divNotification", "", "", "");
                $('#divNotification .event-level-message').html(' Your bundle disclosure is currently unavailable.');
                $('.ui-dialog-buttonpane').remove();
            }
            else {
                MTBOpenWindow("/Bundles/DisplayPdf", 1);
            }
        }
    });
}

function moveFocus(i, n) {
    //	maxIndx = $(".ui-datepicker-calendar a").last().index(".ui-datepicker-calendar a");
    //	movetoindx = (i+n);
    var maxIndx = $(".ui-datepicker-calendar a").last().index(".ui-datepicker-calendar a");
    var movetoindx = (i + n);
    if (movetoindx > -1 && movetoindx < (maxIndx + 1)) {
        $(".ui-datepicker-calendar a:eq(" + (movetoindx) + ")").focus();
    }

    if (movetoindx < 0) {
        //next month
        if ($(".ui-datepicker-prev").length > 0) {
            $(".ui-datepicker-prev").trigger("click");
            $(".ui-datepicker-calendar a").last().focus();
        }
    }

    if (movetoindx > maxIndx) {
        //next month
        if ($(".ui-datepicker-next").length > 0) {
            $(".ui-datepicker-next").trigger("click");
            $(".ui-datepicker-calendar a:eq(0)").focus();
        }
    }
}


$(document).ready(function () {

    $(document).on('click', "#lnkMTGInfo,#btnMyMortgageInfo,#lnkMyMortgageInfo", function () {
        $(document).scrollTop(0);
        var target = "LD";
        GetMortgageSsoSamlUrl(target, '');
        MortgageInfoAnalytics();
    });

    var noAccess = $("#NoAccess").val();
    if (noAccess == "NOACCESS") {
        $("#mMenu li a,#lnkMessageCount,#lnkhelpTab,#lnkSiteMap,#NoAccessText").hide();
        $("#UserType_NoAccess").click(function (e) {
            window.location.href = "#";
            e.preventDefault();
            return;
        });
    }

    /*As part of IM806376 we implemented the below function(SetIEDropDownListOverRide()) to add space in the securityQuestionDropDown Specific to IE Browser*/
    function SetIEDropDownListOverRide() {
        if (((/*@cc_on!@*/false) || (document.documentMode)) || (!(document.documentMode) && window.StyleMedia)) {
            return "true";
        }
        else {
            return "false";
        }
    }
    if (SetIEDropDownListOverRide() == "true") {
        $('[id^="ddlSecurityQuestion"] option[value=""]').css("font-size", "2em");
    }

    $(document).on('click', '#lnkPrintConfirmationScreen', function () {
        window.print();
    });

    $("#lnkPrintVersion,#lnkAgreementPrintVersion").click(function () {
        var urlPath = this.id == "lnkPrintVersion" ? resourceServerExternal + "/Documents/html/ESign.htm" : resourceServerExternal + "/Documents/html/DSA.htm"; //var urlPath = this.id == "lnkPrintVersion" ? "/Views/ESign.htm" : "/Views/DSA.htm";
        MTBOpenWindow(urlPath, 4); //MTBOpenWindow(resourceServer + urlPath, 4);
    });
    $("#lnkPrintForm,#lnkPrintForm2").click(function () {
        window.print();
    });
    if ($(".cs-sendmsg").length == 0) {
        if (($('[id^="ddlAccount"] option[value=""]').text() == "Select" && $('[id^="ddlAccount"] option').length == 2)) {
            $('[id^="ddlAccount"] option:first').remove();
            $('[id^="ddlAccount"]').val($('[id^="ddlAccount"] option')[0].value).trigger("change");
        }
    }
    SetWCAGTagsForDynamicContents();

    //Script to hide empty H2 tags in help section
    $("#lnkhelpTab").click(function () {


        $('.help-content h2').filter(function () {
            //for IE8 browser
            if ($.browser.msie && $.browser.version < 9) {
                if ($(this).text() == '') {
                    return $(this).text('');
                }
            }
                //for all other browser
            else {
                return $.trim($(this).text()) === '';
            }
        }).hide();
    });

    if ($("#timer").hasClass('time-out')) {
        $("#timer").countdown({
            until: timeoutValue,
            onTick: timeoutReminder
        });
    }
    //Function added below code for Firfox and Safari back button redirection
    function DisableBackButton() {
        window.history.forward()
    }

    $("#btnHeaderLogOut").click(function (event) {

        //Added below code for Firfox and Safari back button redirection

        DisableBackButton();
        window.onload = DisableBackButton;
        window.onpageshow = function (evt) { if (evt.persisted) DisableBackButton() }
        window.onunload = function () { void (0) }

        var currentLocaton = GetCurrentPage();
        if ($('#UserType').val() == "C") {
            var dialog = MTBDialogBox("Log Out of Commercial eStatements", "divCommercialLogout", "", "CONTINUE", "LOG OUT", null, function (dialogResult) {
                if (dialogResult) {
                    $(dialog).dialog("close");
                    window.location.href = 'https://commercialservices.mandtbank.com/CSN/csnproduct.cfm';
                }
            });
            $("#btnNoCancel").hide();
            $("#btnYesCancel").attr("id", "btnYes");
        }
        else {
            if (currentLocaton == "Payments:PayBill" && $('#divStep3').is(":visible")) {
                $(window).unbind("beforeunload");
                MTBDialogBox("Are You Sure?", "divDialogPayeeLeavePageConfirm", '', "Yes, leave this page", "No, stay on this page", '', function (dialogResult) {
                    if (!dialogResult) {

                        bindBeforeUnloadPayments();
                    }

                    else {
                        window.location.href = '/Login/LogOff';
                    }

                });
                $("#btnYesCancel").append("<span style='vertical-align:-3px;' class='primary-arrow'></span>");
            }

            else if (currentLocaton == "Transfers:AccountAndLoanPayments" && $('#divStep2').is(":visible")) {
                $(window).unbind("beforeunload");
                MTBDialogBox("Are You Sure?", "divDialogPayeeLeavePageConfirm", '', "Yes, leave this page", "No, stay on this page", '', function (dialogResult) {
                    if (!dialogResult) {

                        bindBeforeUnloadTransfers();
                    }

                    else {
                        window.location.href = '/Login/LogOff';
                    }

                });
                $("#btnYesCancel").append("<span style='vertical-align:-3px;' class='primary-arrow'></span>");
            }
            else {
                window.location.href = '/Login/LogOff';
            }

        }
    });

    $("#btnLoginButton").click(function (event) {
        if ($('#UserType').val() == "C") {
            window.location.href = 'https://commercialservices.mandtbank.com/CSN/csnproduct.cfm';
        }
        else {
            window.location.href = '/Login/Index';
        }
    });


    $("#lnkhelpTab").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 32) {
                event.keyCode = 13;
            }
            if (event.keyCode == 13) {
                event.preventDefault();
                $(this).mousedown();
            }
        });
        // $(this).unbind('focusin');
    });

    //Calculator close on Escape key 
    $(document).on('keydown', function (event) {
        if (event.keyCode != undefined && event.keyCode == 27) {
            $('#spCalcClose').trigger('click');
        }
    });

    //To close MegaMenu on Escape Key
    $("div.mMenu_sub_menu").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode != undefined && event.keyCode == 27) {
                $("div.mMenu_sub_menu:visible").hide();
            }
        });
    });


    BuildCampaignDetails();
    $("[id^='dp']").blur(function () {
        if ($(this).val().length > 7) {
            var dateParts = $(this).val().split('/');
            var year = dateParts[2];
            if (year.length == 2) {
                year = '20' + year;
                $(this).val(dateParts[0].toString() + '/' + dateParts[1].toString() + '/' + year);
            }
        }
    });

    $("input").focusin(function () {
        if ($(this).hasClass('hasDatepicker')) {
            $(this).attr("placeholder", "");

        }
    });
    $("input").focusout(function () {
        if ($(this).hasClass('hasDatepicker')) {
            $(this).attr("placeholder", "MM/DD/YYYY");
        }
    });
    // Global Exception handling for Ajax Requests.
    $(document).ajaxError(function (event, response) {
        if (response.status == 401) {
            window.location.href = "/Login/Index";
        }
        //window.location.href = "/Information/Unavailable";
    });

    // to focus the first error field and to set the scroll position at page-level / form-level message
    function PrimaryValidationFocus() {
        if ($('.input-validation-error').is(":visible") || $('.error input').is(":visible")) {
            $('.input-validation-error:visible,.error input:visible').first().focus();
        }

        if ($(".form-level-message").is(":visible")) {
            var scrollPos = $(".form-level-message").offset().top - 50;
            $(this.window).scrollTop(scrollPos);
        }

        if ($(".page-level-message").is(":visible")) {
            // var scrollPos1 = $(".page-level-message").offset().top;
            $(window).scrollTop(0);
        }
    }

    $(document).on("click", "input[type=button] ,input[type=submit], button[type=button],button[type=submit]", function () {
        PrimaryValidationFocus();
    });



    //$(".module-gradient ul li a,#divTile ul li a ").on('click', function (e) {
    $(document).on("click", ".module-gradient ul li a,#divTile ul li a", function (e) {
        var target = $(this).attr('target');
        if ($(this).attr('href') == "/Products/FinanceWorks") {
            $.ajax({
                url: "/Accounts/IsFinanceWorkEnrolled",
                type: "GET",
                cache: false,
                async: false,
                success: function (result) {
                    if (result.toLowerCase() == "true") {
                        $.ajax({
                            url: "/Services/GenerateSamlUrl",
                            type: "POST",
                            async: false,
                            success: function (resulturl) {
                                MTBOpenWindow(resulturl, 3);

                            }
                        });
                    }
                }
            });
        }
        if (target != "_self" && target != undefined) {
            e.preventDefault();
            var windowtype = target.split(',');
            MTBOpenWindow($(this).attr('href'), parseInt(windowtype[1]));
        }

    });
    $(document).on("click", ".add-shortcut,.edit-link,#lnkMyShortCut", function () {
        MTBLightBox("", "divLightBoxMyShortcuts", "523");
        /*me*/
        var lpos;
        var tpos;
        if ($("#divModuleBlock").offset() !== undefined) {
            lpos = (Number(/[0-9]+/.exec($("#divModuleBlock").css("width"))) + Number(/[0-9]+/.exec($("#divModuleBlock").offset().left))) - Number(525);
            tpos = Number(/[0-9]+/.exec($("#divModuleBlock").offset().top)) + Number(40);
        } else {
            lpos = '25%';
            tpos = '25%';
        }
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog").css("left", lpos);
        $(".ui-dialog").css("top", tpos);
        /*me*/
        var loggedinUserRole = $("#userRole").val();

        $.ajax({
            url: '/CustomerService/ConfigureMyShortcuts',
            data: { userRole: loggedinUserRole },
            type: "GET",
            contentType: "application/json; charset=utf-8",
            datatype: "Json",
            cache: false,
            success: function (data) {
                $("#divLightBoxMyShortcuts").addClass("show");
                $(".shortcut-list,.shortcut-list-items").selectable();
                $(".edit-shortcuts-panel").html(data);
                $(".edit-shortcuts-panel").css("width", "488px");
                $("#btnRight").addClass("move-right").attr("disabled", true);
                $("#btnLeft").addClass("move-left").attr("disabled", true);
                $('.shortcut-scroller').jScrollPane(
                {
                    showArrows: true,
                    verticalArrowPositions: 'after',
                    horizontalArrowPositions: 'after',
                    verticalDragMinWidth: 9,
                    verticalDragMaxWidth: 9,
                    verticalDragMinHeight: 25,
                    autoReinitialise: true,
                    hijackInternalLinks: true

                }

            );

            },
            complete: function () {

                lastItem = $(".shortcut-list li:last").attr("tabindex");

                $("#btnRight,#btnLeft,button").each(function () {
                    ++lastItem;
                    $(this).attr("tabindex", lastItem++);
                });
            },
            error: function () {
            }
        });



        $(document).on("click", ".shortcut-list li", function (item) {
            lastItem = $(".shortcut-list li:last").attr("tabindex");
            $(".jspArrow").each(function () {
                ++lastItem;
                $(this).attr("tabindex", lastItem++);
            });

            if ($(item.target).hasClass("li-selected")) {
                $(item.target).removeClass("li-selected");
            }
            else {
                if ($('.li-selected').size() <= 10) {
                    $(item.target).addClass("li-selected");
                    $("#btnRight").addClass("move-right-enabled").attr("disabled", false);
                    var totalCount = ($(".shortcut-list-items li").length + $('.shortcut-list li.li-selected').size());
                    if (totalCount > 10) {
                        $(item.target).removeClass("li-selected");
                        if ($(".shortcut-list li").hasClass("li-selected")) {
                            $("#btnRight").addClass("move-right-enabled").attr("disabled", false);
                        } else {
                            $("#btnRight").removeClass("move-right-enabled").attr("disabled", true);
                        }
                        item.stopImmediatePropagation();
                    }
                }
            }
            if ($(".shortcut-list-items li").hasClass("li-selected")) {
                $(".shortcut-list-items li").removeClass("li-selected");
                $("#btnLeft").removeClass("move-left-enabled").attr("disabled", true);
            }
            if ($('.li-selected').size() == 0) {
                $("#btnRight").removeClass("move-right-enabled").attr("disabled", true);
            }
            item.stopImmediatePropagation();
        });

        $(document).on("click", ".shortcut-list-items li", function (item) {
            if ($(".shortcut-list li").hasClass("li-selected")) {
                $(".shortcut-list li").removeClass("li-selected");
                $("#btnRight").removeClass("move-right-enabled").attr("disabled", true);
            }

            $("#btnLeft").addClass("move-left-enabled").attr("disabled", false);
            if ($(item.target).hasClass("li-selected")) {
                $(item.target).removeClass("li-selected");
            }
            else {
                if ($('.li-selected').size() <= 10) {
                    $(item.target).addClass("li-selected");
                }
                else {
                    return false;
                }
            }
            if ($('.li-selected').size() == 0) {
                $("#btnLeft").removeClass("move-left-enabled").attr("disabled", true);
            }
            item.stopImmediatePropagation();
        });

        $(document).on("click", ".move-right-enabled,.move-left-enabled", function (item) {
            var targetItem = ".shortcut-list-items";
            var sourceIterator = ".shortcut-list-items li";
            if ($(item.target).hasClass("move-right-enabled")) {
                sourceIterator = ".shortcut-list li";
            }
            $(sourceIterator).each(function (index, element) {
                var key = element.id.split(',');
                if ($(element).hasClass("li-selected")) {
                    $(element).removeClass("li-selected");
                    if ($(item.target).hasClass("move-left")) {
                        // the items should be moved exactly back to the same position from where they were picked. 
                        $('#' + key[1]).append($(element));
                        var elems = $('#' + key[1]).children('li').remove();
                        elems.sort(function (a, b) {
                            return parseInt(a.id) > parseInt(b.id);
                        });
                        $('#' + key[1]).append(elems);
                        $("#btnLeft").removeClass("move-left-enabled").attr("disabled", true);
                    } else {
                        $(targetItem).append($(element));
                        $("#btnRight").removeClass("move-right-enabled").attr("disabled", true);
                    }
                }
                $(".shortcut-list-items li:last").focus();
                $(".shortcut-list-items li:last").keydown(function (event) {
                    if (event.keyCode == 9) {
                        event.preventDefault();
                        $(".ui-dialog").find("#btnShortcutsSubmit").focus();
                    }
                });

            });
        });

        $(document).on("click", "#btnShortcutsCancel", function (e) {
            MTBDialogBox("Are you sure?", "divDialogCancelChanges", "", null, null, null, function (dialogResult) {
                if (dialogResult) {
                    closeParent();
                } else {
                    $("#divDialogCancelChanges").prev().show();
                }
            });

            e.stopImmediatePropagation();
            var analyticsTag = GetPageNameTag();
            var analyticsChannel = GetChannel();

            s.linkTrackVars = 'pageName,channel,eVar39,eVar27,eVar41,eVar53,prop30,prop41,Event67';
            s.pageName = analyticsTag;
            s.channel = analyticsChannel;
            s.eVar39 = analyticsChannel;
            s.eVar27 = analyticsTag;
            s.eVar41 = "OLB";
            s.prop41 = "OLB";
            s.eVar53 = 'CancelChanges';
            s.prop30 = analyticsTag;
            s.events = "event67";
            s.linkTrackEvents = "event67";

            //s.tl has a callback and we should be using it
            s.tl(this, 'o', analyticsTag, null, null);
            s.manageVars('clearVars', s.linkTrackEvents, 1);
        });


        $(document).on("click", "#btnShortcutsSubmit", function () {
            var selectedLinks = [];
            $(".shortcut-list-items li").each(function (index, element) {
                var selectedItem = {};
                selectedItem.ItemId = element.id.split(',')[0];
                selectedItem.ItemName = element.innerText;
                selectedLinks.push(selectedItem);

            });
            if ($(".shortcut-list-items li").length == 0) {
                var item = {};
                item.ItemId = "";
                item.ItemName = "";
                selectedLinks.push(item);
            }

            var jsonData = JSON.stringify(selectedLinks);
            $.ajax({
                url: '/CustomerService/SaveMyShortcuts',
                data: '{ selectedShortcuts:' + jsonData + '}',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: "Json",
                cache: false,
                success: function () {
                    $("#divLightBoxMyShortcuts").dialog("close");
                    var currentLocation = GetCurrentPage();
                    var pageNameTemp = currentLocation.substring(currentLocation.indexOf(":") + 1);
                    $.ajax({
                        url: '/CustomerService/GetCustomizedLinks',
                        type: "GET",
                        data: { headerText: 'MyShortcuts', pageName: pageNameTemp, userRole: loggedinUserRole },
                        contentType: "application/json; charset=utf-8",
                        datatype: "Json",
                        cache: false,
                        success: function (htmlData) {
                            $(".shortcuts-block").html(htmlData);
                        },
                        error: function () {
                        }
                    });
                },
                error: function () {
                    $("#divLightBoxMyShortcuts").dialog("close");
                }
            });

            var analyticsTag = GetPageNameTag();
            var analyticsChannel = GetChannel();

            s.linkTrackVars = 'pageName,channel,eVar39,eVar27,eVar41,eVar53,prop30,prop41,Event67';
            s.pageName = analyticsTag;
            s.channel = analyticsChannel;
            s.eVar39 = analyticsChannel;
            s.eVar27 = analyticsTag;
            s.eVar41 = "OLB";
            s.prop41 = "OLB";
            s.eVar53 = 'SaveChanges';
            s.prop30 = analyticsTag;
            s.events = "event67";
            s.linkTrackEvents = "event67";

            //s.tl has a callback and we should be using it
            s.tl(this, 'o', analyticsTag, null, null);
            s.manageVars('clearVars', s.linkTrackEvents, 1);
        });
    });
    $('[id^=\"btnRight\"]').click(function () {
        $(this).prev('select').find('option:selected').appendTo('#isselect_code');
    });
    $('[id^=\"btnLeft\"]').click(function () {
        $(this).next('select').find('option:selected').appendTo('#canselect_code');
        $("#canselect_code").html($('#canselect_code option').sort(function (x, y) {
            return $(x).val() < $(y).val() ? -1 : 1;
        }));
        $("#canselect_code").get(0).selectedIndex = 0;
    });
    //placeholder();
    // To load Bank to Bank transfers pop up window
    $("#lnkBankToBank, #BanktoBankTransfers, #imgBankToBank").click(function () {
        isBankToBankOpened = true;
        window.location.href = "/Marketing/B2BInformation";
    });

    if (ACHFlag) {
        $(document).on("click", "#lnkAchAndwire,#imgAchAndwire, .shortcuts-block a:contains('M&T BizPay')", function () {
            var status = "";
            var popUrl = "https://9472-demo.btbanking.com/ui/PAYMENTS/smbManagePayments"
            $.ajax({
                url: "/Payments/IsEnrolledToACH",
                type: "GET",
                cache: false,
                async: false,
                success: function (result) {
                    status = result.toLowerCase();
                }
            });
            if (status == "true") {
                var state = "";
                $.ajax({
                    url: "/Payments/AchSingleSignOn",
                    type: "GET",
                    cache: false,
                    async: false,
                    success: function (result) {
                        state = result;
                    }
                });
                if (state != "") {
                    MTBOpenWindow(state, 4);
                }
                else {
                    window.location.href = "/services/MTB-BizPay"
                }
            } else {
                window.location.href = "/services/MTB-BizPay"
            }
        });
    }

    else {
        $("#lnkAchAndwire,#imgAchAndwire").click(function () {
            var status = "";
            var popUrl = "https://www.mtb.com/olb-cashplus";
            $.ajax({
                url: "/Transfers/ACHandWire",
                type: "GET",
                cache: false,
                async: false,
                success: function (result) {
                    status = result.toLowerCase();
                }
            });
            if (status == "true") {
                MTBOpenWindow(popUrl, 4);
            } else {
                window.location.href = "/Transfers/DenyTransfers";
            }
        });
    }

    //to prevent cut copy paste functionality
    $('#ReEnterPasscode').bind('cut copy paste', function (e) {
        e.preventDefault();
    });
    WrapContentBox();
    if (jQuery.fn.uniform) {
        $("input:not(.js-block-uniform)").uniform();
        $("select:not(.js-block-uniform)").uniform();
    }

    $(document).on("click", "#spViewMoreChoices", function () {
        $("#Choicestable").css("display", "block");
        $("#divViewMoreChoice").css("display", "none");
        $("#divModuleBlock").removeClass("small-gray-area-1").addClass("large-gray-area");
    });
    $(document).on("click", "#spViewLessChoices", function () {
        $("#Choicestable").css("display", "none");
        $("#divViewMoreChoice").css("display", "block");
        $("#divModuleBlock").removeClass("small-gray-area-1").addClass("large-gray-area");
    });


    $("#spViewMoreChoices").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger("click");
                $(".view-less-choice-link a#spViewLessChoices").focus();
            }
        });
    });

    $("#spViewLessChoices").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger("click");
                $("a#spViewMoreChoices").focus();
            }
        });
    });


    // event hook up for calculator control
    $(document).on("click", "#imgCalculator", function () {
        $("#divCalculator").removeClass("hide").draggable();
        $(".calculator-keyentry").show();
        $("#inlineCalc").calculator();
        var linkOffset = $("#imgCalculator").offset();
        $("#divCalculator").offset({ left: linkOffset.left + 2, top: linkOffset.top + 8 });
        $("#divCalculator").attr('aria-hidden', 'false');
        $("#spCalcClose").focus();
        $('#spCalcClose')[0].tabIndex = 0;
    });
    $(document).on("click", ".date-picker-close", function () {
        //$(this).parent().parent().hide();
        $(this).parent().hide();
    });
    $("#btnHoganInquiryLogin").click(function () {
        window.location.href = '/Enrollment/Cancel';
    });
    $(document).click(function () {
        $("#ui-datepicker-div").hide();
    });
    $(document).on('click', '.ui-datepicker-header', function (event) {
        event.preventDefault();
        return false;
    });

    $("#spCalcClose").click(function (event) {
        event.preventDefault();
        event.stopPropagation();
        $("button[data-keystroke='_C']").trigger('click');
        $("#divCalculator").addClass("hide");
        $(".calculator-keyentry").hide();
        $("#divCalculator").attr('aria-hidden', 'true');
        $("#imgCalculator").focus();
    });

    $(document).on("click", "div.button-section > button[type='button'],div.button-section >  button[type='submit']", function () {
        $("#divCalculator").addClass("hide");
        $(".calculator-keyentry").hide();
    });
    $(document).on("click", "#btnDialogCancel", function () {
        $(this).parents("div:first").dialog("close");
    });
    $("#lnkForm").click(function () {
        MTBOpenWindow("/Enrollment/EnrollmentPrintForm", 2);
    });

    $('#btnServices').click(function () {
        window.location.href = '/Services/ServicesHome';
    });
    $('#btnMyBundles').click(function () {
        window.location.href = '/Bundles/MyBundles';
    });
    $('#btnAccount').click(function () {
        window.location.href = '/Accounts/AccountSummary';
    });

    $("#lnkPersonal").click(function () {
        MTBOpenWindow("https://www.mtb.com/olb-guide", 1);
    });
    $(document).on("click", "#lnkWilmington", function () {
        MTBOpenWindow("//wilmingtonfunds.com", 4);
    });
    $(document).on("click", "#lnkAdobe", function () {
        MTBOpenWindow("https://www.mtb.com/adobe", 4);
    });
    $(document).on("click", "#lnkElectronic", function () {
        MTBOpenWindow("https://www.mtb.com/check21", 4);
    });
    $("#lnkBusiness").click(function () {
        MTBOpenWindow("https://www.mtb.com/olb-guide-biz", 1);
    });
    $('#aDownload').click(function () {
        MTBOpenWindow("https://www.adobe.com", 4);
    });
    $("#lnkApplicationHelp").click(function () {
        MTBOpenWindow("http://www.mtb.com/viewsummaryofchanges", 4);
    });
    $('#btnPayAndTransferHome').click(function () {
        window.location.href = '/Transfers/PaymentsAndTransfersHome';
    });
    $('#btnOpenCheckingOrSaving').click(function () {
        MTBOpenWindow('http://www.mtb.com/banking', 4);
    });
    $('.footer-nav a, .security-icons a,.footer-app-nav a,.footer-app-comm a').click(function (event) {
        switch (event.target.id) {
            case "lnkPrivacy":
                MTBOpenWindow("//www.mtb.com/privacy", 4);
                break;
            case "lnkSecurity":
                MTBOpenWindow("//www.mtb.com/olbsecurity", 4);
                break;
            case "lnkCommercialSecurity":
                MTBOpenWindow("//www.mtb.com/olb-security-tips", 4);
                break;
            case "lnkAgreement":
                MTBOpenWindow(resourceServerExternal + "/Documents/html/DSA.htm", 3);  //MTBOpenWindow(resourceServer + "/Views/DSA.htm", 3);
                break;

            case "lnkAccessibility":
                MTBOpenWindow("https://mtb.com/olb-accessibility", 4);
                break;

            case "lnkCommercialAgreement":
                MTBOpenWindow(resourceServerExternal + "/Documents/html/DSA.htm", 3);  //MTBOpenWindow(resourceServer + "/Views/DSA.htm", 3);
                break;
            case "lnkFdic":
                MTBOpenWindow("//www.mtb.com/fdic", 4);
                $(this).target = "_blank";
                break;
            case "lnkHousing":
                MTBOpenWindow("//www.mtb.com/equalhousinglender", 4);
                break;
            case "lnkEntrust":
                MTBOpenWindow("https://www.mtb.com/olb-entrust", 2);
                break;
                // case "lnkSiteMap":
                // window.location.href = "/CustomerService/SiteMap";
                // break;
            case "lnkMtbRetail":
                MTBOpenWindow("https://www.mtb.com/olb-personalsite", 4);
                break;
            case "lnkMtbBusiness":
                MTBOpenWindow("https://www.mtb.com/olb-businesssite", 4);
                break;
            case "lnkMtbCommercial":
                MTBOpenWindow("https://www.mtb.com/olb-commercialsite", 4);
                break;
            case "lnkDigitalAgreement":
                MTBOpenWindow(resourceServerExternal + "/Documents/html/DSA.htm", 2);  //MTBOpenWindow(resourceServer + "/Views/DSA.htm", 2);
                break;
            case "lnkESignAgreement":
                MTBOpenWindow(resourceServerExternal + "/Documents/html/ESign.htm", 2);  //MTBOpenWindow(resourceServer + "/Views/ESign.htm", 2);
                break;

        }
    });

    // Open any link with an ext-link-4 class in a new size 4 window. 
    $(".ext-link-4").click(function (e) {
        MTBOpenWindow(this.href, 4);
        e.preventDefault();
    });
    $(".ext-link-2").click(function (e) {
        MTBOpenWindow(this.href, 2);
        e.preventDefault();
    });
    /*--------------------- Start of Tabbing -------------------------*/
    var header = 1;           //Header
    var intro = 100;           //IntroArea
    var contentbox = 300;      //FormHeader
    var table = 1000;          //DataTables
    var buttonsec = 5000;      //Button section
    var disclaimer = 7000;     //Disclaimer
    var moduleblock = 8000;    //Module-Block
    var footer = 15000;        //Footer
    var helptab = 25000;       //HelpTab



    //Header  
    $("#divHeader,.main-navigation").ready(function () {
        $("area,a,.utilityMenu li button,.main-navigation a").each(function () {
            $(this).attr("tabindex", header++);
        });
        $(".open-table-disabled").attr("tabindex", -1);
    });

    //IntroArea
    $("div.intro-area").ready(function () {
        $("#divIntroBoxLayout a ,div.intro-area .contextual-help-icon,div .intro-area-link a,.legend-link a, #divIntroBoxLayout a,#divIntroBoxLayout button,div.intro-block a,div.intro-block div.selector select,div.intro-block button,div.intro-block span.contextual-help-icon,#divIntroBoxLayout SELECT,.intro-area button").each(function () {
            $(this).attr("tabindex", intro++);
        });
        $("span#imgPaymentViewIconLegendRetail, span#imgViewPayeeDetailRetailStatusLegendHelp").attr("tabindex", "-1");
    });

    //Campaign Manager
    $("#divIntroCampaign").ajaxComplete(function () {
        $(".surface-links #lnkReturnTransferActivity").attr("tabindex", intro++);
        $(".surface-links a").attr("tabindex", intro++),
        $("img.ad-campaign-manager,span.ad-campaign-manager").each(function () {
            $(this).attr("tabindex", intro++);
        });
    });

    //Disabling tabindex for HelpTab
    $("div.helpTab").ready(function () {
        $("div.helpTab a").each(function () {
            $(this).attr("tabindex", "-1");
        });
    });

    //Content
    $(".contentbox").ready(function () {
        //KB INTERACTIONS WITH CALENDARS
        $(".ui-datepicker-trigger").click(function () { $(".ui-datepicker-calendar .ui-state-highlight").focus() });

        //up is 38, 39, 40, 37
        $(document).on("keyup", ".ui-datepicker-calendar a", function (e) {
            var calactiveindx = $(".ui-datepicker-calendar a:focus").index(".ui-datepicker-calendar a")
            switch (e.keyCode) {
                case 38:
                    //console.log("up");
                    moveFocus(calactiveindx, -7);
                    break;

                case 39:
                    moveFocus(calactiveindx, 1);
                    break;

                case 40:
                    moveFocus(calactiveindx, 7);
                    break;

                case 37:
                    moveFocus(calactiveindx, -1);
                    break;
            }
        });

        $(".ui-datepicker-trigger").click(function () { $(".ui-datepicker-calendar .ui-state-highlight").focus() });

        $(".contentbox input,.contentbox textarea,.contentbox div.enroll-now a.enroll-button,.contentbox a,.contentbox select,.contentbox span.contextual-help-icon,.contentbox span.open-table,.contentbox span.ui-datepicker-trigger,.contentbox button,.contentbox span.close-table,table.dataTable span.mobile-legend,table.dataTable span.favorite-selected,table.dataTable span.favorite-unselected,div.table-title-area span.close-table,div.table-title-area span.contextual-help-icon,table select,table.dataTable button,.left-posted-table-area .table-buttons,table.dataTable input,table.dataTable a,table.dataTable span.contextual-help-icon,table.dataTable span.open-table,table.dataTable span.edit,table.dataTable span.mail,table.dataTable span.search,table.dataTable span.approve,table.dataTable span.square-close,table.dataTable span.delete,table.dataTable .sorting_desc,table.dataTable .sorting_asc,table.dataTable span.table-buttons,table.dataTable select,table.dataTable th,#btnUpdate,.posted-header select,.table-title-area a,.close-table,.open-table,.contentbox .event-level-message a,.market-page-graphic button,.work-area button,.work-area a,.contentbox .payment-section span.contextual-help-icon,.contentbox .payment-section button, .contentbox .callout-close").each(function () {
            $(this).attr("tabindex", contentbox++);
        });
    });

    //Dynamic Content
    $(".contentbox").ajaxComplete(function () {

        $(".contentbox input,.contentbox textarea,.contentbox span[id^='img'],.contentbox a,.contentbox select,.contentbox .remove,.contentbox span.contextual-help-icon,.contentbox span.open-table,.contentbox span.ui-datepicker-trigger,.contentbox button,.contentbox th,.contentbox span.close-table,table.dataTable span.mobile-legend,table.dataTable span.favorite-selected,table.dataTable span.favorite-unselected,div.table-title-area span.close-table,div.table-title-area span.contextual-help-icon,table select,table.dataTable button,.left-posted-table-area .table-buttons,table.dataTable input,table.dataTable a,table.dataTable span.contextual-help-icon,table.dataTable span.open-table,table.dataTable span.edit,table.dataTable span.mail,table.dataTable span.search,table.dataTable span.approve,table.dataTable span.square-close,table.dataTable span.delete,table.dataTable .sorting_desc,table.dataTable .sorting_asc,table.dataTable span.table-buttons,table.dataTable select,table.dataTable th,#btnUpdate,.posted-header select,.table-title-area a,.close-table,.open-table,.contentbox .event-level-message a,.market-page-graphic button,.work-area button,.work-area a,.contentbox .payment-section span.contextual-help-icon,.contentbox .payment-section button, .contentbox .callout-close").each(function () {
            $(this).attr("tabindex", contentbox++);
        });
        $(".table-title-area #imgMmfViewIconLegend span.help-small, span#imgILNViewIconLegend").attr("tabindex", "-1");
    });

    //DataTables
    $("table").ajaxComplete(function () {
        $("table.dataTable span.mobile-legend,table.dataTable span.favorite-selected,table.dataTable span.favorite-unselected,div.table-title-area span.close-table,.contentbox div.small-table-title-area a,div.table-title-area span.contextual-help-icon,table select,table.dataTable button,.left-posted-table-area a, .left-posted-table-area .table-buttons,.right-posted-table-area input, .right-posted-table-area .ui-datepicker-trigger, table.dataTable input,table.dataTable a,table.dataTable span.contextual-help-icon,table.dataTable span.open-table,table.dataTable span.edit,table.dataTable span.mail,table.dataTable span.search,table.dataTable span.approve,table.dataTable span.square-close,table.dataTable span.delete,table.dataTable .sorting_desc,table.dataTable .sorting_asc,table.dataTable span.table-buttons,table.dataTable select,table.dataTable th,#btnUpdate,#btnRetailCardUpdate,.posted-header select,.table-title-area a,.close-table,.open-table").each(function () {
            $(this).attr("tabindex", table++);
            $("table.dataTable thead th.sorting_disabled, .open-table-disabled").each(function () {
                $(this).attr("tabindex", "-1");
            });
            $("td a span.close-table").parent("a").attr("tabindex", "-1");
            $("td a span.open-table").parent("a").attr("tabindex", "-1");
        });


        $("table .contextual-help-icon").html("<img src='../../Assets/images/img_trans.gif' alt='View Help'/>");
        $("table#tblPayBill .contextual-help-icon").html("<img src='../../Assets/images/img_trans.gif' alt='View Help for Recent Payments'/>");
        $("table .payee-details #imgPayBillFrequency").html("<img src='../../Assets/images/img_trans.gif' class='help-small' alt='View Help for Frequency'/>");
        $("table .payee-details #PayBillDeliverBy").html("<img src='../../Assets/images/img_trans.gif' class='help-small' alt='View Help for Deliver By'/>");
        $("table .payee-details #PayBillWithDraw").html("<img src='../../Assets/images/img_trans.gif' class='help-small' alt='View Help for Withdraw On'/>");
        var imageValue = $("#imgAmounttblScheduled img").attr("alt");
        var imageValueTransfer = $("#imgTransferAmounttblScheduled img").attr("alt");
        if (imageValue == "View Help" || imageValueTransfer == "View Help") {
            $("#imgAmounttblScheduled img").removeAttr("");
            $("#imgAmounttblScheduled img").attr("alt", imageValue + " for Amount");
            $("#imgTransferAmounttblScheduled img").removeAttr("");
            $("#imgTransferAmounttblScheduled img").attr("alt", imageValueTransfer + " for Amount");
        }

        AlterDeliverySettingTableTabIndex();
    });
    //---Alter tabindex for devivery setting table in Update delivery setting screen

    function AlterDeliverySettingTableTabIndex() {
        var StartTabIndex = $("table#tblDeliverySettings tbody tr:eq(0)").find('td:eq(0)').find('a:eq(0)').attr('tabindex');

        if (StartTabIndex != null && StartTabIndex != 'undefined') {

            $("table#tblDeliverySettings tbody tr").each(function () {

                var TDChildCount = $(this).children('td:eq(0)').children('a').length;

                for (var i = 0; i < TDChildCount; i++) {

                    $(this).children('td').each(function () {

                        //-------------------------
                        if ($(this).has('a')) {
                            $(this).children('a:eq(' + i + ')').attr('tabindex', StartTabIndex);
                            StartTabIndex++;
                        }
                        //-----------------
                        if ($(this).has('span.radio-linear')) {
                            //--------------
                            $(this).children('span.radio-linear:eq(' + i + ')').children('div').each(function () {
                                $(this).find('span div span input').attr('tabindex', StartTabIndex);
                                StartTabIndex++;
                            });
                            //------------------
                        };
                        //--------------------
                    });
                    //-------------------

                }// end for loop

            });
            //----------
        }


    }
    //Divlinks
    //    $("#divLinks").ajaxComplete(function () {
    //        $("#divLinks a,#divLinks span.open-table").each(function () {
    //            $(this).attr("tabindex", divlink++);
    //        });
    //    });
    //Button section - Dynamic
    $("div.button-section").ajaxComplete(function () {
        $("div.button-section button.button-lrg-pri-arr,div.button-section button.button-med-pri-arr,div.button-section button.button-sm-pri-arr,div.button-section button.button-sm-pri,#TrxMonSecurityAnswer,#trxResendVerificationSent,#btnSubmitOTP").each(function () {
            $(this).attr("tabindex", buttonsec++);
        });
        $("div.button-section button.button-lrg-sec-arr,div.button-section button.button-med-sec-arr,div.button-section button.button-sm-sec-arr,div.button-section button.button-lrg-sec,#TrxMonSecurityAnswer,#trxResendVerificationSent,#btnSubmitOTP").each(function () {
            $(this).attr("tabindex", buttonsec++);
        });
    });

    //Button section
    $("div.button-section").ready(function () {
        $("div.button-section button.button-lrg-pri-arr,div.button-section button.button-med-pri-arr,div.button-section button.button-sm-pri-arr,div.button-section button.button-sm-pri").each(function () {
            $(this).attr("tabindex", buttonsec++);
        });
        $("div.button-section button.button-lrg-sec-arr,div.button-section button.button-med-sec-arr,div.button-section button.button-sm-sec-arr,div.button-section button.button-lrg-sec").each(function () {
            $(this).attr("tabindex", buttonsec++);
        });
    });

    //Disclaimer
    $(".disclaimer").ready(function () {
        $(".disclaimer a,.disclaimer .contextual-help-icon").each(function () {
            $(this).attr("tabindex", disclaimer++);
        });
    });





    //Module-Block
    $(".module-gradient,.module-block").ajaxComplete(function () {
        $(".module-gradient a, .module-gradient button,.module-block button,.module-block img.ad-campaign-manager,.module-block span.ad-campaign-manager,.module-block a,.module-block span.contextual-help-icon").each(function () {
            $(this).attr("tabindex", moduleblock++);
        });
        //$("divAccountSummaryRightAd.olb-ad,.view-more-choice-link span,.view-less-choice-link span,#divViewMoreChoice #spViewMoreChoices .open-table").attr("tabindex", "-1");
    });

    $(".module-gradient,.module-block").ready(function () {
        $(".module-gradient a, .module-gradient button,.module-block button,.module-block img.ad-campaign-manager,.module-block span.ad-campaign-manager,.module-block a,.module-block span.open-table,.module-block span.contextual-help-icon").each(function () {
            $(this).attr("tabindex", moduleblock++);
        });
        $(".view-more-choice-link").each(function () { $(this).find(".open-table").removeAttr('tabindex').attr('tabindex', '-1'); });
        $(".view-less-choice-link").each(function () { $(this).find(".close-table").removeAttr('tabindex').attr('tabindex', '-1'); });
        //$("#divAccountSummaryRightAd .olb-ad,.view-more-choice-link span,.view-less-choice-link span,#divViewMoreChoice #spViewMoreChoices .open-table").attr("tabindex", "-1");
    });

    //Footer
    $(".footer").ready(function () {
        $(".footer a").each(function () {
            $(this).attr("tabindex", footer++);
        });
    });

    //TabIndex for HelpTab 
    $("div.helpTab").ready(function () {
        $("div.helpTab a").each(function () {
            $(this).attr("tabindex", helptab++);
        });
    });

    var helptabContent = 24000;
    //Tabbing for HelpTab Content
    $("#help").each(function () {
        // $("form").unwrap("<div class ='contentbox'></div>");
        $(this).ajaxComplete(function () {
            $(this).find("#results input,#results button,#results a,#results dt.inactive-result,#results dt.active-result").each(function () {
                $(this).attr("tabindex", helptabContent++);
            });

            var helptabLeft = 30000;
            $(".help-left").ready(function () {
                $("div.help-left a").each(function () {
                    $(this).removeAttr("tabindex").attr("tabindex", helptabLeft++);
                });
            });
        });
    });

    var helptabHeader = 27000;
    $(".help-header").ready(function () {
        $("div.help-header input,div.help-header button,div.help-header a").attr("tabindex", helptabHeader++);
    });







    /*--------------------- End of Tabbing -------------------------*/

    $(document).on('click', '#btnTimeLogOut', function () {
        window.location.href = '/Information/LogOut';
    });
    $(document).on('click', '#btnStayOnline', function () {
        $("#timer").countdown({ until: +10 });
    });

    $(document).on('click', '#lnkPaymyMortgage', function () {
        $.ajax({
            url: "/Common/HasCheckingAccount",
            type: "POST",
            async: false,
            success: function (result) {
                if (!result) {
                    window.location.href = "/Payments/Enrollment?hasMtgWithNoChckAct=true";
                }
                else {
                    var Target = "MAP";
                    GetMortgageSsoSamlUrl(Target, "");
                }
                var TagName = "OLB:PaymentsAndTransfers:MegaMenu:PayYourM&TMortgage";
                MortgageInfoAnalytics(TagName);
            }
        });
    });
    // Selector to initialize the MegaMenu
    //$("div.main-navigation:first").accessibleMegaMenu({
    /* prefix for generated unique id attributes, which are required 
    to indicate aria-owns, aria-controls and aria-labelledby */
    //  uuidPrefix: "accessible-megamenu",

    /* css class used to define the megamenu styling */
    //menuClass: "mMenu",

    /* css class for a top-level navigation item in the megamenu */
    //topNavItemClass: "nav-item",

    /* css class for a megamenu panel */
    //panelClass: "mMenu_sub_menu",

    /* css class for a group of items within a megamenu panel */
    //panelGroupClass: "subMenu",

    /* css class for the hover state */
    //hoverClass: "hover",

    /* css class for the focus state */
    //focusClass: "focus",

    /* css class for the open state */
    //openClass: "open"
    //});

    if (document.referrer.toString().toUpperCase() != window.location.href.toString().toUpperCase()) {
        if (isInURLPathname(['Zelle', 'ZelleInformation'])) {
            TagZellePageName(getURLPathnameArray());
        }
        else if (isInURLPathname(['CardSelfService'])) {
            TagCSSPageName(urlPathname[2]);
        }
        else {
            TagPageName();//Tag the page name only if it is not a post back.
        }
    }

    //Mortage SSO link in mege menu

});

// returns the parts of the URL Pathname as an array
function getURLPathnameArray() {
    return window.location.pathname.split('/');
}


function isInURLPathname(itemsToCheckFor) {
    urlPathname = getURLPathnameArray();
    var isMatch = false;
    itemsToCheckFor.some(function (value) {
        if (urlPathname.indexOf(value) != -1) {
            return isMatch = true;
        }
    });
    return isMatch;
}

// returns the parts of the URL Pathname as an array
function getURLPathnameArray() {
    return window.location.pathname.split('/');
}


function isInURLPathname(itemsToCheckFor) {
    urlPathname = getURLPathnameArray();
    var isMatch = false;
    itemsToCheckFor.some(function (value) {
        if (urlPathname.indexOf(value) != -1) {
            return isMatch = true;
        }
    });
    return isMatch;
}


//Prevent multiple submissions of form on multiple clicks of Submit button.
function PreventMultipleFormSubmissions() {
    $("form").on("submit", function () {
        if (this.btnExport == undefined) {
            if ($('form').valid()) {
                $(this).submit(function () {
                    return false;
                });
                return true;
            } else {
                return false;
            }
        }
    });
}

//Unbind click event from Submit button.
function UnbindSubmitClick(buttonControl) {
    $(buttonControl).addClass("wait");
    $(buttonControl).unbind("click");
}

//Bind click event on Submit button.
function BindSubmitClick(buttonControl) {
    $(buttonControl).removeClass("wait");
    $(buttonControl).bind("click");
}

function openTrxMonitoringLightBox(result, analyticsTag, continueToSpinAfterSubmit) {
	if (typeof result === "string") {
		$("#TrxMonitoring").html("");
		$("#TrxMonitoring").prepend(result);
        MTBLightBox("Security Confirmation", "TrxMonitoring", 500);
        trxContinueToSpinAfterSubmit = !!continueToSpinAfterSubmit;

		if (result.indexOf('id="trxMonitoringOtpSelection"') > -1 && initializeLightBoxForOTP) {
			initializeLightBoxForOTP(analyticsTag);
		}
	} else if (result && typeof result === "object" && result.RedirectTo && typeof result.RedirectTo === "string") {
		window.location.href = result.RedirectTo;
	}
}

function reIndexTrxMonitoringLightBox() {  
        setTimeout(function () {
            $('#btnLBCancel').attr('tabindex', '0');
            $('#btnLBCheckAnswers').attr('tabindex', '0');
            $('#btnOTPUICCancel').attr('tabindex', '0');
            $('#btnOTPResendCode').attr('tabindex', '0');
            $('#btnSubmitOTP').attr('tabindex', '0');
            $('#btnLBOTPCancel').attr('tabindex', '0');
            $('#btnSendOTPtoEmail').attr('tabindex', '0');
            $('.ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-icon-only.ui-dialog-titlebar-close').attr('tabindex', '0');
        }, 0);
    
}
// function to open up a Light box with given controld and dialog header text
function MTBLightBox(titleText, controlId, divWidth) {
    var myDialog = $("#" + controlId).dialog({
        autoOpen: true,
        //width: "809",
        focus: function () {
            $("#" + controlId).parent().find("button").blur();
        },
        create: function () {
            $("[aria-describedby=" + controlId + "]").find('.ui-dialog-titlebar-close').on('keydown', function (ev) {
                if (ev.keyCode === $.ui.keyCode.ENTER) {
                    $("#" + controlId).dialog('close');
                    ev.preventDefault();
                }
            });

            //remove auto-generated labelledby as it is the wrong description for the dialog
            if (controlId == "divLightBoxPriorDay") {
                $('[aria-describedby="' + controlId + '"]').attr('aria-labelledby', 'lnkViewPriorDay');
                $('.ui-dialog-titlebar-close, .ui-datepicker-trigger').attr('tabindex', '0');
            }
        },
        width: divWidth,
        height: "487",
        modal: true,
        title: titleText,
        maxHeight: 487,
        draggable: true,
        resizable: false,
        position: ("left", "middle"),
        //Close fn -To reset text for screen reader after pop up close
        close: function() {
            if (controlId == "divLightBoxMyShortcuts" || controlId == "divLightBoxPriorDay") {
                $("#divLightBoxMyShortcuts .ui-widget-content, #divLightBoxPriorDay .ui-widget-content").html('');
            }
        }

    });
    $(".ui-dialog-title").parent().removeClass("ui-widget-header").addClass("light-box");
    myDialog.parent().find('.ui-dialog-titlebar').show();
    // Dirty fix for WCAG Tab issue on Buttons.
    if (typeof controlId === 'string' && controlId.toUpperCase() === 'TRXMONITORING') {
        reIndexTrxMonitoringLightBox(controlId);
    }
}


function MTBFavDialogBox(titleText, controlId, buttonNoText, divWidth) {

    divWidth = (divWidth == undefined || divWidth == '') ? "450" : divWidth;

    var myDialog = $("#" + controlId).dialog({

        autoopen: true,
        width: divWidth,
        height: "186",
        modal: true,
        title: titleText,
        maxHeight: 400,
        draggable: true,
        resizable: true,
        postion: ['left', "middle"],

        buttons: [
            {
                text: buttonNoText,
                id: "btnFavYesCancel",
                "class": 'bold-medium-gradient button-med-pri-arr',
                click: function () {
                    $(this).dialog("close");
                }
            }
        ]
    });
    myDialog.parent().find('.ui-dialog-titlebar').show();
    return myDialog;

}

// function to open up a Dialog box with given controld ,dialog header text and url
function MTBDialogBox(titleText, controlId, url, buttonYesText, buttonNoText, divWidth, callback) {
    buttonYesText = (buttonYesText == undefined) ? "Yes, cancel" : buttonYesText;
    buttonNoText = (buttonNoText == undefined) ? "No, don't cancel" : buttonNoText;
    divWidth = (divWidth == undefined || divWidth == '') ? "450" : divWidth;
    if (controlId == "divDialogBankToBank") {
        $("#" + controlId).html(' <p style="padding-bottom: 10px;">  A $3 transfer fee will apply for each transfer made from your M&amp;T account to an account at another financial institution. No transfer fee applies when you make a transfer from another financial institution to your M&T account.</p> <ul> <li>To make a transfer, both accounts must be titled in your name <li>Transfers to business accounts are not permitted </li> </ul> <p> Do you wish to continue to Bank to Bank transfers? </p>')
    }

    else if (controlId == "divBeyondNineMinForRsa") {
        $("#" + controlId).html('<p>Your Online Banking session has been inactive for 9 minutes. For your security, we will automatically log you out in 1 minute.</p>')
    }
    else if (controlId == "divBeyondNineMin" && $('#UserType').val() != "C") {
        $("#" + controlId).html('<p>Your Online Banking session has been inactive for 9 minutes. For your security, we will automatically log you out in 1 minute. Click Stay Online to continue your session.</p>')
    }
    else if (controlId == "divBeyondNineMin" && $('#UserType').val() == "C") {
        $("#" + controlId).html('<p>Your Commercial eStatements session has been inactive for 9 minutes. For your security, we will automatically log you out in 1 minute. Click Stay Online to continue your session.</p>')
    }
    else if (controlId == "divCommercialLogout") {
        $("#" + controlId).html('<p>You are logging out of Commercial eStatements and will return to the Commercial Services Single Sign-On Main Menu.</p>')
    }




    var myDialog = $("#" + controlId).dialog({
        focus: function () {
            $("#" + controlId).parent().find("button").blur();
            $("#" + controlId).parent().find(".button-med-pri-arr").focus();
        },
        autoopen: true,
        width: divWidth,
        closeOnEscape: closeOnEscapeValue,
        //To close timeout dialog on Escape Key
        create: function () {
            $(this).closest('.ui-dialog').on('keydown', function (ev) {
                if (!closeOnEscapeValue && ev.keyCode === $.ui.keyCode.ESCAPE) {
                    $("#" + controlId).dialog('close');
                    extendTimer();
                    $("#divDialogBankToBank .ui-widget-content, #divBeyondNineMinForRsa .ui-widget-content,#divBeyondNineMin .ui-widget-content,#divCommercialLogout .ui-widget-content").html('');

                }

            });
            $("[aria-describedby=" + controlId + "]").find('.ui-dialog-titlebar-close').on('keydown', function (ev) {
                if (ev.keyCode === $.ui.keyCode.ENTER) {
                    $("#" + controlId).dialog('close');
                    ev.preventDefault();
                }
            });
        },
        //Close fn -To reset text for screen reader after pop up close
        close: function () {
            if (controlId == "divDialogBankToBank" || controlId == "divBeyondNineMinForRsa") {
                //$(".ui-widget-content").html('');
                $("[aria-describedby='" + controlId + "']").html(" ");
            }
        },

        height: "186",
        modal: true,
        title: titleText,
        maxHeight: 400,
        draggable: true,
        resizable: true,
        postion: ['left', "middle"],

        buttons: [
            {
                text: buttonYesText,
                id: "btnYesCancel",
                "class": 'bold-medium-gradient button-med-pri-arr',
                click: function () {
                    if (controlId != 'divVerificationSent') {
                        $(this).dialog("close");
                    }

                    if (url == "" && callback != undefined) {
                        callback(true);
                    } else if (url != "") {
                        window.location.href = url;
                    } else {
                        window.location.href = window.location.href;
                    }

                }
            },
            {
                text: buttonNoText,
                id: "btnNoCancel",
                "class": 'bold-light-gradient button-med-sec-arr',
                click: function () {
                    if (url == "" && callback != undefined) {
                        callback(false);
                    }
                    $(this).dialog("close");
                }
            }
        ]
    });
    myDialog.parent().find('.ui-dialog-titlebar').show();
    return myDialog;

}




// function to open up a dialog box with given controld and dialog header text
function MTBPopUpBox(controlId) {
    $("#" + controlId).dialog({
        autoOpen: true,
        width: "420",
        height: "186",
        modal: false,
        maxHeight: 400,
        draggable: true,
        resizable: false,
        position: ("left", "middle")
    });
}

// function to open up a window with given url and window type
function MTBOpenWindow(url, windowType) {
    var href;
    if (typeof (url) == 'string')
        href = url;
    else
        href = url.href;
    var name = encodeURI("name" + href);
    name = name.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '-');
    //window.focus(); //date:2/9/2016 changed to prevent opening window in the background. 
    window.open(href, name, GetWindowType(windowType));
}

// function to open up a window with given url and pdf type
function MTBOpenPdf(url, pdfType) {
    var href;
    if (typeof (url) == 'string')
        href = url;
    else
        href = url.href;
    window.focus();
    var name = encodeURI("name" + href);
    name = name.replace(/[^a-z0-9\s]/gi, '').replace(/[_\s]/g, '-');
    window.open(GetPDFWindowType(href, pdfType), name);
}

// function to open up a datepicker with given control id,minimum date and maximum date
// function to identify weekends and federal holidays
function holidayAndWeekends(date) {
    var noWeekend = $.datepicker.noWeekends(date);
    if (noWeekend[0]) {
        return nationalDays(date);
    } else {
        return noWeekend;
    }
}

function nationalDays(date) {
    // var dmy = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();
    var dmy = (('0' + (date.getMonth() + 1)).slice(-2)) + "/" + (('0' + date.getDate()).slice(-2)) + "/" + date.getFullYear();
    if ($.inArray(dmy, holidayList) < 0) {
        return [true];

    } else {
        return [false];
    }
}
function isMMDDYYYY(dateString) {

    if (!/^\d{2}\/\d{2}\/\d{4}$/.test(dateString))
        return false;
    // Parse the date parts to integers
    var parts = dateString.split("/");
    var day = parseInt(parts[1], 10);
    var month = parseInt(parts[0], 10);
    var year = parseInt(parts[2], 10);
    // Check the ranges of month and year
    if (year < 1000 || year > 3000 || month == 0 || month > 12)
        return false;

    var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    // Adjust for leap years
    if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))
        monthLength[1] = 29;
    // Check the range of the day
    return day > 0 && day <= monthLength[month - 1];
}
function DayDiff(first, second) {
    return (second - first) / (1000 * 60 * 60 * 24);
}

function ToMMDDYYYY(string) {
    var d = new Date(string);
    var month = (d.getMonth() + 1).toString();
    month = month.length > 1 ? month : '0' + month;
    var date = (d.getDate()).toString();
    date = date.length > 1 ? date : '0' + date;
    return month + '/' + date + '/' + d.getFullYear();
}


function MTBDatePicker(controlId, minimmumDate, maximumDate, singlecalendar, weekEndDisable, holidays, isTodaySelectable) {

    var $controlId = $('[id^="' + controlId + '"]');
    var numberofmonths = singlecalendar ? 1 : 2;

    //    if (isControlIdStartsWith == true) {
    //        $controlId = $('[id^="' + controlId + '"]');
    //    }
    holidayList = holidays;
    if (weekEndDisable == undefined) {
        weekEndDisable = false;
    }
    $controlId.datepicker(
        {

            beforeShowDay: function (date) {
                var selectable = true;
                var currentDate = new Date();
                if (date.getDate() == currentDate.getDate() && date.getMonth() == currentDate.getMonth() && isTodaySelectable != undefined && !isTodaySelectable) {
                    selectable = false;
                }
                if (selectable && weekEndDisable) {
                    var noWeekend = $.datepicker.noWeekends(date);
                    if (noWeekend[0]) {
                        selectable = nationalDays(date);
                    } else {
                        selectable = noWeekend;
                    }
                }
                return [selectable, '', false];

            },
            showOn: 'button',
            buttonImageOnly: true,
            numberOfMonths: numberofmonths,
            inline: true,
            dateFormat: 'mm/dd/yy',
            showOtherMonths: false,
            selectOtherMonths: true,
            dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            minDate: minimmumDate,
            maxDate: +maximumDate,
            beforeShow: function (input, inst) {
                inst.dpDiv.addClass('year-section');
                inst.dpDiv.css({ marginTop: '-9px', marginLeft: '7px' });
                if (isTodaySelectable != undefined) {
                    $.ajax({
                        url: "/payments/ValidateScheduledTime",
                        type: "GET",
                        cache: false,
                        success: function (result) {
                            var isValid = 'true' == result.toLowerCase() ? true : false;
                            MTBDatePicker("txtSchedleFor", 0, 365, false, true, federalHolidays, isValid);
                            if (!isValid) {
                                var date = new Date();
                                var month = (date.getMonth() + 1) < 10 ? "0" + (date.getMonth() + 1) : (date.getMonth() + 1);
                                $controlId.val(month + '/' + (date.getDate() + 1) + '/' + date.getFullYear());
                            }
                        }
                    });
                }

            },
            onClose: function (dateText, inst) {
                inst.dpDiv.addClass('year-section');
            },
            complete: function () {
                $('.ui-datepicker').datepicker('hide');
            }
        }).mask("99/99/9999", { placeholder: " ", pattern: "date" });

}



//Function to show or hide the intro area content based on the wizard steps
function ShowStep(currentStep, totalSteps) {
    for (var i = 1; i <= totalSteps; i++) {
        $("#Step" + i + "Intro").hide();
    }
    $("#Step" + currentStep + "Intro").show();
}

//Function to show or hide the wizard content based on the wizard steps
function ShowWizardStep(currentStep, totalstep) {

    $(".workflow-bar li").removeClass("selected");
    $(".workflow-bar li").removeAttr("title");
    $(".workflow-bar li div").addClass("circle-default");
    $(".workflow-bar li div").removeClass("circle-selected");
    $(".workflow-bar span").removeClass("selected-span");
    $(".workflow-bar span").removeClass("last-span-selected");
    $('.workflow-bar li>span.__wcag-visually-hidden').remove();

    for (var index = 1; index <= totalstep; index++) {
        $("#Step" + index).hide();
        $("#Step" + index + "Buttons").hide();
        $("#Step" + currentStep).show();
        $("#Step" + currentStep + "Buttons").show();
        if (currentStep == index) {
            $(".workflow-bar li").eq(index - 1).addClass("selected");
            $(".workflow-bar li").eq(index - 1).attr("title", "The current step is:");
            $(".workflow-bar li div[id='id_" + index + "']").removeClass("circle-default");
            $(".workflow-bar li div[id='id_" + index + "']").addClass("circle-selected");
            $('.workflow-bar li').eq(index - 1).prepend("<span class='__wcag-visually-hidden'>The current step is:</span>");
            $('.workflow-bar li').eq(index - 1).find('span:not(.__wcag-visually-hidden)').addClass("selected-span");

            if (currentStep != 1) {
                $(".workflow-bar span").eq(currentStep - 2).addClass("last-span-selected");
            }
        }
    }
    $("ol.workflow-bar").find("li.selected").addClass("selected");
    BuildCampaignDetails();
}

function ChangeStep(view, tag) {
    // callback
    $.ajax({
        url: '/Common/SetIntroAreaValues',
        type: 'GET',
        cache: true,
        data: { viewName: view },
        success: function (result) {
            $("#divIntroBoxLayout").html(result);
            //$("#divIntroCampaign").replaceWith(''); // Because there were 2 divIntroCampaign rendered.
            //tag page only if additional parameter wasn’t specified
            if (tag === undefined) TagPageName();
        },
        complete: function () {
            $("#divIntroBoxLayout:first").replaceWith($("#divIntroBoxLayout:last").html());
            SetWCAGTagsForIntroArea();
        },
        async: false
    });
    return true;

}

function VerifyNumberKeyNoDecimal(event) {

    // Allow:dot, backspace, delete, tab, escape, and enter
    if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }

}
function VerifyNumberKey(event) {

    // Allow:dot, backspace, delete, tab, escape, and enter
    if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 190 || event.keyCode == 110 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }

}
function VerifyNumberKeyWithSpace(event) {
    // Allow:dot, backspace, delete, tab, escape, and enter
    if (event.keyCode == 46 || event.keyCode == 32 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }

}
//TGLBHK1 start


function ValidKeyCode(event) {
    // Backspace, tab, enter, end, home, left, right,decimal(.)in number part, decimal(.) in alphabet
    // We don't support the del key in Opera because del == . == 46.
    var controlKeys = [8, 9, 13, 35, 36, 37, 39, 46, 110, 190];
    // IE doesn't support indexOf
    var isControlKey = controlKeys.join(",").match(new RegExp(event.which));
    if (isControlKey == null) {
        isControlKey = false;
    }
    // Some browsers just don't raise events for control keys. Easy.
    // e.g. Safari backspace.
    if ((!event.which || // Control keys in most browsers. e.g. Firefox tab is 0
      (48 <= event.which && event.which <= 57) || // Always 1 through 9
      (96 <= event.which && event.which <= 105) || // Always 1 through 9 from number section 
      (48 == event.which && $(this).attr("value")) || // No 0 first digit
      (96 == event.which && $(this).attr("value")) || // No 0 first digit from number section
      isControlKey)) { // Opera assigns values for control keys.//Shiftkey+ is prevented
        return true;
    } else {
        event.preventDefault();
        return false;

    }
}

function ValidateAmountField(event, value) {

    if (ValidKeyCode(event)) {
        var splitfield = value.split(".");
        var dots = splitfield.length;
        if (dots > 1) {
            return false;
        } else {

            if (splitfield[0].length > 8 && (!(event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: Ctrl+C
                (event.keyCode == 67 && event.ctrlKey === true) ||
                // Allow: Ctrl+V
                (event.keyCode == 86 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)))) {
                event.preventDefault();
            }
                // Allow:dot, backspace, delete, tab, escape, and enter
            else if (event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: Ctrl+C
                (event.keyCode == 67 && event.ctrlKey === true) ||
                // Allow: Ctrl+V
                (event.keyCode == 86 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            } else {
                // Ensure that it is a number and stop the keypress
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
            // Allow:dot, backspace, delete, tab, escape, and enter
            if (event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: Ctrl+C
                (event.keyCode == 67 && event.ctrlKey === true) ||
                // Allow: Ctrl+V
                (event.keyCode == 86 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            } else {
                // Ensure that it is a number and stop the keypress
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();

                }
            }

        }
    }

}
//TGLBHK1 end

// To Suppress Single key special characters
function SpecialCharAmountField(event, valueLength) {
    //alert(event.keyCode);
    if ((event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
        (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
        (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
        (event.keyCode >= 35 && event.keyCode <= 39)) {
        return;
    }
    if (event.keyCode == 106 || event.keyCode == 107 || event.keyCode == 109 || event.keyCode == 111 || (event.keyCode > 185 && event.keyCode < 190) || (event.keyCode > 190 && event.keyCode < 193) || (event.keyCode > 218 && event.keyCode < 223) || (event.keyCode > 64 && event.keyCode < 91) || event.keyCode == 32) {
        event.preventDefault();
    }
}


function VerifyAmountField(event, valueLength) {

    if (valueLength > 8 && (!(event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)))) {

        event.preventDefault();
    }


        // Allow:dot, backspace, delete, tab, escape, and enter
    else if (event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }
    // Allow:dot, backspace, delete, tab, escape, and enter
    if (event.keyCode == 190 || event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || event.keyCode == 110 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey && (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }



}
function VerifyAlphaNumericWithNoSpace(event) {
    // Allow:dot, backspace, delete, tab, escape, and enter
    if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 65 || event.keyCode > 90) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
        else if ((event.keyCode < 65 || event.keyCode > 90) && event.shiftKey === true) {
            event.preventDefault();
        }
    }
}

function VerifyAlphaNumericWithSpace(event) {
    // Allow:dot,space, backspace, delete, tab, escape, and enter
    if (event.keyCode == 46 || event.keyCode == 32 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
        // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
        // let it happen, don't do anything
        return;
    }
    else {
        if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 65 || event.keyCode > 90) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
        else if ((event.keyCode < 65 || event.keyCode > 90) && event.shiftKey === true) {
            event.preventDefault();
        }
    }
}

//This function is used to convert the numbers into string type by adding comma after every three digits.
function AppendCommasToNumber(inputNumber) {
    return inputNumber.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// This function is used to format the currency number cells. 
// if the currency is in negative then it will set the text to red.
function FormatAmountCells(nRow, data, cellArrayIndex) {
    for (var i = 0; i < cellArrayIndex.length; i++) {
        if (parseFloat(data[cellArrayIndex[i]]) >= 0) {
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).html('$' + AppendCommasToNumber(parseFloat(data[cellArrayIndex[i]]).toFixed(2)));
        }
        if (parseFloat(data[cellArrayIndex[i]]) < 0) {
            var value = data[cellArrayIndex[i]].toString().replace(/-/g, '');
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).html('&ndash;$' + AppendCommasToNumber(parseFloat(value).toFixed(2)));
            if (data[4] == "Pending") {
                $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow);
            } else {
                $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).addClass("negative-balance");
            }
        } if (parseFloat(data[cellArrayIndex[i]]) == "") {
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow);
        }
    }
}
function FormatRate(nRow, data, cellArrayIndex) {
    for (var i = 0; i < cellArrayIndex.length; i++) {
        if (parseFloat(data[cellArrayIndex[i]]) >= 0) {
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).html(AppendCommasToNumber(parseFloat(data[cellArrayIndex[i]]).toFixed(2)) + '%');
        }
        if (parseFloat(data[cellArrayIndex[i]]) < 0) {
            var value = data[cellArrayIndex[i]].toString().replace(/-/g, '');
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).html('&ndash;' + AppendCommasToNumber(parseFloat(value).toFixed(2)) + '%');
            if (data[4] == "Pending") {
                $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow);
            } else {
                $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).css("color", "#c30");
            }
        } if (parseFloat(data[cellArrayIndex[i]]) == "") {
            $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow);
        }
    }
}
function FormatDate(data) {
    var m = data.split('/');
    var d = new Date(parseInt(m[2]), parseInt(m[0]) - 1, parseInt(m[1]));
    DateString = ('0' + (d.getMonth() + 1)).slice(-2) + '/'
             + ('0' + d.getDate()).slice(-2) + '/'
             + d.getFullYear();
    return DateString;

}
function FormatDateCells(nRow, data, cellArrayIndex) {
    for (var i = 0; i < cellArrayIndex.length; i++) {

        $('td:nth-child(' + parseInt(cellArrayIndex[i] + 1) + ')', nRow).html(FormatDate(data[cellArrayIndex[i]]));

    }
}
function FormatDateMMDDYYYY(data) {
    var m = data.split('/');
    var d = new Date(parseInt(m[2]), parseInt(m[0]) - 1, parseInt(m[1]));
    var postedDate = ('0' + (d.getMonth() + 1)).slice(-2) + '/' + ('0' + d.getDate()).slice(-2) + '/' + d.getFullYear();
    return postedDate;
}
//This function is used to get tyes of window and features
function GetWindowType(windowTypeNumber) {
    var features = "";
    switch (windowTypeNumber) {
        case 1:
            features = "top=0,left=0,width=450,height=500,resizable=yes,menubar=yes,directories=no,location=no,status=yes,toolbar=no,scrollbars=yes,titlebar=yes";
            break;
        case 2:
            features = "top=0,left=0,width=850,height=600,resizable=yes,menubar=yes,directories=no,location=no,status=yes,toolbar=no,scrollbars=yes,titlebar=yes";
            break;
        case 3:
            features = "top=0,left=0,width=1010,height=650,resizable=yes,directories=yes,location=no,status=yes,menubar=yes,toolbar=no,scrollbars=yes,titlebar=yes";
            break;
        case 4:
            features = "top=0,left=0,width=1010,height=650,resizable=yes,menubar=yes,toolbar=yes,directories=no,location=yes,status=no,scrollbars=yes,titlebar=yes";
            break;
        case 5:
            features = "top=0,left=0,width=500,height=775,resizable=yes,menubar=no,toolbar=yes,directories=no,location=yes,status=no,scrollbars=yes,titlebar=yes";
            break;
    }
    return features;
}


function converter(string) {
    var d = new Date(string);
    var months = ["January", "February", "March",
    "April", "May", "June",
    "July", "August", "September",
    "October", "November", "December"
    ];
    var date = d.getDate();
    if (date < 10) {
        date = "0" + date;
    }
    return months[d.getMonth()] + ' ' + date + ', ' + d.getFullYear();
}


// For getting external links from xml file
function GetExternalLink(linkCategory, linkId) {
    var externalLink = "";
    $.ajax({
        url: '/Common/GetExternalLink',
        type: 'GET',
        data: { linkCategory: linkCategory, linkId: linkId },
        success: function (result) {
            externalLink = result;
        },
        async: false
    });
    return externalLink;
}

function Checkbox_to_RadioButton(box, myEvent) {
    if (myEvent == "enter") {
        var $box = $(box);
        if ($box.attr('checked'))
            $box.attr('checked', false);
        else
            $box.attr('checked', true);
    }
    $('input:checkbox[name=' + box.name + ']').each(function () {
        if (this != box)
            $(this).attr('checked', false);
    });
}

$('a').focusin(function () {
    $(this).keydown(function (event) {
        if (event.keyCode == 13) {
            $(this).trigger('click');
        }
    });
    //$(this).unbind('click');
});

//To Close Caluclator on ESC Key
$('#imgCalculator').keydown(function (event) {
    if (event.keyCode !== 9) {
        event.preventDefault();
        event.stopPropagation();
    }

    if (event.keyCode === 27) {
        $("#spCalcClose").trigger('click');
        $(this).focus();
    }

    if (event.keyCode === 13) {
        $('#imgCalculator').click();
        $("#spCalcClose").focus();
    }
});

$(document).ajaxStop(function () {
    if ($(".view-more-choice-link .open-table").is(":visible")) {
        $(".view-more-choice-link .open-table").removeAttr('tabindex').attr('tabindex', '-1');
    }
    if ($(".view-less-choice-link .close-table").is(":visible")) {
        $(".view-less-choice-link .close-table").removeAttr('tabindex').attr('tabindex', '-1');
    }
});

$(document).ajaxComplete(function () {
    var tbltfoot;
    var tblId;



    $("#divLightBoxMyShortcuts .shortcut-list li:first").focus();
    $(".shortcut-list li,.shortcut-list-items li").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger('click');
            }
        });
    });



    if ($('.input-validation-error').is(":visible") || $('.error input').is(":visible")) {
        $('.input-validation-error:visible,.error input:visible').first().focus();
    }

    if ($(".form-level-message").is(":visible")) {
        var scrollPos = $(".form-level-message").offset().top - 50;
        $(this.window).scrollTop(scrollPos);
    }

    if ($(".page-level-message").is(":visible")) {
        // var scrollPos1 = $(".page-level-message").offset().top;
        $(window).scrollTop(0);
    }

    $(".dataTables_wrapper *").removeAttr("role");
    $(".dataTables_wrapper").removeAttr("role");

    $(".dataTable").each(function () {
        $("tbody tr td:first").attr("scope", "row");
        tblId = "#" + $(this).attr("id");
        tbltfoot = $(tblId).find("tfoot");
        $(tbltfoot).insertAfter(tblId + "> tbody");
        $("th").attr("scope", "col");
    });

    // $("#timer").countdown('option', { until: 600 });  // reset the session timer.
    $("a,span.contextual-help-icon,a.edit,.edit,.delete,.remove,.mail,.mobile,.approve,.reject,.square-close,.search,.ui-datepicker-trigger,table .favorite-unselected,table .favorite-selected,dt.inactive-result,.help-content a,#help-search,#img30DaysReport,#img60DaysReport,#img90DaysReport,[id^=img]").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger('click');
                $(this).focus();
                event.stopImmediatePropagation();
            }
        });

    });

    $(".ad-campaign-manager").click(function () {
        var url = $(this).attr("href");
        if (url != "" && url != undefined)
            window.location = url;
    });

    $('.ad-campaign-manager').focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger('click');
            }
        });
    });
    var disclaimer = 7000;     //Disclaimer
    $(".disclaimer a,.disclaimer .contextual-help-icon").each(function () {
        $(this).attr("tabindex", disclaimer++);
    });

    $("span.close-table,span.open-table").focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger('click');
                event.stopImmediatePropagation();
            }
        })
    });



});


//To Trigger Events on keypress Enter
$(window).load(function () {

    $('a').focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                $(this).trigger('click');
            }
        });
    });

    $('button').focusin(function () {
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                $(this).trigger('click');
            }
        });
    });



    $("span.contextual-help-icon,span.open-table,span.close-table,span .ui-datepicker-trigger,.edit,.delete,table.dataTable span.approve,table.dataTable span.square-close,span.search,span.mail,span.favorite-selected,span.mobile-legend,table.dataTable th,.posted-header select").focusin(function () {
        $('TH').unbind('click.sorting');
        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                $(this).trigger('click');
                $(this).focus();
                event.stopImmediatePropagation();
            }
        });
    });

    $("button,span.contextual-help-icon,span.open-table,span.close-table,span.ui-datepicker-trigger,.edit,.delete,table.dataTable span.approve,table.dataTable span.square-close,span.search,span.mail,span.favorite-selected,span.mobile-legend,table.dataTable th,.posted-header select").focusout(function () {
        $(this).unbind('keydown');
    });

    $("input[type='radio']").focusin(function () {
        $(this).keydown(function (e) {
            if (e.keyCode == 13) {
                e.stopPropagation();
            }
        });
    });




});


function ellipsis(text, n, direction) {
    if (text.length > n)
        return direction == "right" ? text.substring(0, n) + "..." : "..." + text.substring(text.length - n, text.length);
    else
        return text;
}


//function to format the amount field to $nnn,nnn,nnn.nn format

function FormatAmount(amount) {
    return amount.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
}

function FormatAmountField(id, formatAfetrLength) {
    id = '#' + id;
    var amountValue = $(id).val();
    if (amountValue == '.') {
        $(id).val('0.00');
    }
    if (isNaN(amountValue)) {
        return false;
    }
    // EX: 123456789. When user enters a dot and tabs out.
    if (amountValue.indexOf(".") >= 0 && GetDecimalCount(amountValue) == 0) {
        if (!isNaN(Math.floor(amountValue))) {
            $(id).val(Math.floor(amountValue));
            this.focus();
            this.blur();
            amountValue = $(id).val();
        }
    }

    // The below condition executes when user enters numbers. The condition doesnt execute when user enters alphabets, special charecters.
    amountValue = parseFloat(amountValue) + '';
    var wholeNumber = (Math.floor(amountValue));
    if (amountValue != '' && !isNaN(Math.floor(amountValue)) && wholeNumber.toString().length < (formatAfetrLength != undefined ? formatAfetrLength : 7)) {
        if (GetDecimalCount(amountValue) <= 2) {
            $(id).val(parseFloat($(id).val()).toFixed(2));
        }
    }
    return true;
}

//Returns the number of decimal digits
function GetDecimalCount(value) {
    if (Math.floor(value) !== value && value.toString().split(".").length > 1) {
        return value.toString().split(".")[1].length;
    }
    return 0;
}


function placeholder() {
    var textColor = '#777777'; //custom color

    $('[placeholder]').each(function () {
        $(this).attr('tooltip', $(this).attr('placeholder')); //buffer

        if ($(this).val() === '' || $(this).val() === $(this).attr('placeholder')) {
            $(this).css('color', textColor).css('font-style', 'italic');
            $(this).val($(this).attr('placeholder')); //IE8 compatibility
        }

        $(this).attr('placeholder', ''); //disable default behavior

        $(this).on('focus', function () {
            if ($(this).val() === $(this).attr('tooltip')) {
                $(this).val('');
            }
        });

        $(this).on('keydown', function () {
            $(this).css('font-style', 'normal').css('color', '#000');
        });

        $(this).on('blur', function () {
            if ($(this).val() === '') {
                $(this).val($(this).attr('tooltip')).css('color', textColor).css('font-style', 'italic');
            }
        });
    });
}

function initiateBankToBankTransfer() {
    $.ajax({
        url: "/Transfers/VerifyTransfersEligiblity",
        type: "GET",
        cache: false,
        dataType: "Json",
        success: function (result) {
            if ('true' == result.toLowerCase()) {
                //Commenting the code for dialog box as there is no Fee for B2B transfer as per the latesr requirement.
                //MTBDialogBox("Bank to Bank Transfers", "divDialogBankToBank", '', "Yes, continue", "No, don’t continue", '', function (dialogResult) {
                //    if (dialogResult) {
                // setTimeout(function () { extendTimer(); }, 480000); // renew local session for 8 min.
                window.focus();
                window.open('/Transfers/BankToBank', 'BankToBank', 'toolbar,resizable,scrollbars,width=850,height=600');

                //    }
                //});
            }
            else {
                window.location.href = "/Common/CardAuthenticate";
            }
        }
    });
}

function optionSort(a, b) {
    alert(a); alert(b);
    return $(a).val() > $(b).val();
}

//script for implementing gradient background for table header for ie8
$(document).ajaxComplete(function (ele, responseStatus, item) {

    $('table.dataTable thead tr').each(function () {
        var thheight = $(this).height();
        if (thheight > 30) {
            $(this).parent().parent().addClass("grad48");
        } else {
            $(this).parent().parent().addClass("grad30");
        }
    });
    // reset timer
    if (item.url.indexOf("/GetSessionTimerAlert") == -1) // do not reset the counter if the session time out check is done from server.
        $("#timer").countdown('option', { until: timeoutValue });

    $("table.dataTable th").focusin(function () {

        $(this).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                $(this).trigger('click');
                $(this).focus();
                event.stopImmediatePropagation();
            }
        });
    });
});


/*pdf type display starts here*/
function GetPDFWindowType(url, pdfTypeNumber) {

    var features = "";

    switch (pdfTypeNumber) {
        case 1:
            features = url + "#pagemode=none";
            break;
        case 2:
            features = url + "#pagemode=bookmarks";
            break;
    }
    return features;
}
/*pdf type display ends here*/

function timeoutReminder(periods) {

    var timerSeconds = $.countdown.periodsToSeconds(periods);
    if (timerSeconds === timeoutReminderValue) {
        closeOnEscapeValue = false;
        displayTimeoutPopUp();
    }
    else if (timerSeconds === 0) {
        window.location.href = '/Information/AutomaticLogOutMessage';
    }

}
// function to check the server session timeout
function displayTimeoutPopUp() {
    var currentLocaton = GetCurrentPage();
    if (currentLocaton == "Login:SecurityQuestionSetupWizard" || currentLocaton == "Login:SecurityQuestion" || currentLocaton == "Login:SecurityQuestionSetup" || (currentLocaton == "CustomerService:MyProfileEdit" && $("#ProfileContext").val() == "SecurityQuestion")) {
        myDialog = MTBDialogBox("Timeout Message", "divBeyondNineMinForRsa", "", "OK", "", null, function (dialogResult) {
            if (dialogResult) {
                $(myDialog).dialog("close");
            }
        });
        $("#btnNoCancel").hide();
    } else {
        $.ajax({
            url: "/Common/GetSessionTimerAlert",
            type: "GET",
            cache: false,
            success: function (result) {
                if (result.showPopUp && myDialog == null) {
                    //

                    if ((currentLocaton == "Payments:PayBill" && $('#divStep3').is(":visible")) || (currentLocaton == "Transfers:AccountAndLoanPayments" && $('#divStep2').is(":visible"))) {
                        $(window).unbind("beforeunload");
                    }

                    myDialog = MTBDialogBox("Timeout Message", "divBeyondNineMin", "", "STAY ONLINE", "LOG OUT", null, function (dialogResult) {
                        if (dialogResult) {
                            $(myDialog).dialog("close");
                            extendTimer();
                            $("#divBeyondNineMin .ui-widget-content").html('');

                            myDialog = null;
                            if (currentLocaton == "Payments:PayBill" && $('#divStep3').is(":visible")) {
                                bindBeforeUnloadPayments();


                            } else if (currentLocaton == "Transfers:AccountAndLoanPayments" && $('#divStep2').is(":visible")) {
                                bindBeforeUnloadTransfers();
                            }
                        } else {
                            if ($("#UserType").val() == "C") {
                                window.location.href = "https://commercialservices.mandtbank.com/CSN/csnproduct.cfm";
                            } else {
                                window.location.href = '/Information/LogOut';
                            }
                        }
                        closeOnEscapeValue = true;
                    });
                    TagTimeOutReminder(); //For analytics
                    //reRenderPFMPage(currentLocaton);//For Restoring PFM WidgetSession
                }
            }
        });
    }
}



function extendTimer() {

    $.ajax({
        url: "/Information/KeepAlive",
        type: "GET",
        cache: false,
        success: function () {
            $("#timer").countdown('option', { until: timeoutValue });
        }
    });
}


/* CAMPAIGN MANAGER DISPLAY START  */
function BuildCampaignDetails(divId) {

    divId = (divId == undefined) ? '#divIntroCampaign' : "#" + divId;
    $(divId).hide();
    // Get the current URL
    var pathName = window.location.pathname.split('/');
    if (pathName.length >= 3) {
        // Get the controller name from URL
        var controllerName = pathName[1];
        // Get the step id. Ex:1
        var workFlowName = $("ol.workflow-bar li.selected span:not(.__wcag-visually-hidden)").text();
        // Context name is wither action name or action name concatenated with the step id.
        var contextName = workFlowName == '' || workFlowName == undefined ? pathName[2] : pathName[2] + ":STEP" + workFlowName;

        // Campaigns must be hidden if contexts are not present in RM.
        if ((workFlowName == '' || workFlowName == undefined) || !CheckCampaignVisibility(controllerName, contextName)) {
            // Ad type is Top Horizontal and Class name is ad-campaign-manager
            DisplayCampaign(controllerName, contextName, 'TopHorizontal', 'divIntroCampaign', 'ad-campaign-manager');
        }
        else {
            $("#divIntroBoxLayout").removeClass("left-intro").addClass("intro-area");
            $(divId).hide();
        }
    }
}

function CheckCampaignVisibility(controllerName, contextName) {
    var hideCampaign = false;

    switch (controllerName) {
        case "Payments":
            {
                if (contextName.toLowerCase() == "cancelpayment:step2") {
                    if ($(".workflow-bar li").length == 4) hideCampaign = true;
                }
                else {
                    var paymentsEligible = new Array("addapayee:step3", "editapayee:step3", "editpayment:step3", "paybill:step1", "paybill:step4",
                                        "cancelpayment:step3", "approve:step2", "reject:step2");
                    if ($.inArray(contextName.toLowerCase(), paymentsEligible) < 0) hideCampaign = true;
                }
                break;
            }
        case "Transfers":
            {
                if (contextName.toLowerCase() == "cancel:step2") {
                    if ($(".workflow-bar li").length == 4) hideCampaign = true;
                }
                else {
                    var transfersEligble = new Array("approve:step2", "reject:step2", "accountandloanpayments:step3", "cancel:step3",
                                       "edit:step3", "balance:step3", "mmfscheduletransaction:step4");
                    if ($.inArray(contextName.toLowerCase(), transfersEligble) < 0) hideCampaign = true;
                }
                break;
            }
        case "ExternalAccountLoan":
            {
                var externalLoanPaymentElig = new Array("installmentloanactivity", "editloan:step3", "cancelloan:step2", "makeloanpayment:step1");
                if ($.inArray(contextName.toLowerCase(), externalLoanPaymentElig) < 0) hideCampaign = true;
                break;
            }
    }
    return hideCampaign;
}

function DisplayCampaign(pageName, context, adType, divId, imagehtmlAttributes, callBackFunction) {
    if (!$.contains(divId, "#")) divId = "#" + divId;
    var result;
    // Div not present. Hence no need to display Ads. 
    if ($(divId).length == 0) {
        $("#divIntroBoxLayout").removeClass("left-intro").addClass("intro-area");
    }
    else {
        $.ajax({
            url: "/Campaign/GetCampaignAd?pageName=" + pageName + "&context=" + context + "&adType=" + adType + "&imagehtmlAttributes=" + imagehtmlAttributes,
            type: "GET",
            cache: false,
            success: function (data) {
                result = data;
                if (adType != "TextAd") {
                    if (data.isSuccess) {
                        $("#divIntroBoxLayout").removeClass("intro-area").addClass("left-intro");
                        $(divId).html('').html(data.content).show();
                        $(".ad-campaign-manager").css("background", "0 0");
                        $(divId).append("<input id='hidCampaignGuid' type='hidden' value='" + data.campaignGuid + "'/>");
                        $(divId).append("<input id='hidWebPageId' type='hidden' value='" + data.webPageId + "'/>");
                    }
                    else {
                        //Display default ad
                        $("#divIntroBoxLayout").removeClass("intro-area").addClass("left-intro");
                        $(divId).html('').append("<span class='ad-campaign-manager'><img  src='../../Assets/images/img_trans.gif' Alt='Learn more about M&T products and services, get tips on using online banking and advice on how to manage your money.' /></span>").show();
                    }
                }
            },
            complete: function () {
                if (callBackFunction != "" && callBackFunction != undefined) callBackFunction(result);
            }
        });
    }
}

$(document).ready(function () {
    $(document).on("click", ".ad-campaign-manager", function () {
        var cgnGuid = $('#hidCampaignGuid').val();
        var pid = $('#hidWebPageId').val();
        if (cgnGuid != null) {
            $.ajax({
                url: "/Campaign/LogAdInteraction",
                data: {
                    campaignGuid: cgnGuid,
                    webPageId: pid
                },
                type: "POST",
                cache: false,
                success: function (data) {
                    //vinod:Need to revisit
                },
                complete: function () {
                    //vinod:Need to revisit
                }
            });
        }
    });
});

/* CAMPAIGN MANAGER DISPLAY END  */



function SetDynamicContentTabIndex() {
    var contentbox = 400;
    $(".contentbox").ajaxComplete(function () {
        $(".contentbox input,.contentbox textarea,.contentbox span[id^='img'],.contentbox a[id^='ui-id'],.contentbox a,.contentbox select,.contentbox .remove,.contentbox span.contextual-help-icon,.contentbox span.open-table,.contentbox span.ui-datepicker-trigger,.contentbox button,.contentbox th,.contentbox span.close-table,table.dataTable span.mobile-legend,table.dataTable span.favorite-selected,table.dataTable span.favorite-unselected,div.table-title-area span.close-table,div.table-title-area span.contextual-help-icon,table select,table.dataTable button,.left-posted-table-area .table-buttons,table.dataTable input,table.dataTable a,table.dataTable span.contextual-help-icon,table.dataTable span.open-table,table.dataTable span.edit,table.dataTable span.mail,table.dataTable span.search,table.dataTable span.approve,table.dataTable span.square-close,table.dataTable span.delete,table.dataTable .sorting_desc,table.dataTable .sorting_asc,table.dataTable span.table-buttons,table.dataTable select,table.dataTable th,#btnUpdate,.posted-header select,.table-title-area a,.close-table,.open-table,.contentbox .event-level-message a").each(function () {
            $(this).attr("tabindex", contentbox++);
        });
        $("table.dataTable thead th, .open-table-disabled").each(function () {
            $(this).attr("tabindex", "-1");
        });
    });
}
function WrapContentBox() {
    if ($("#main form").parent().hasClass('contentbox')) {
        return false;
    } else {
        $("#main form:not(.js-no-contentbox)").wrap("<div class='contentbox'></div>");
    }
}

function Wraptabletileview() {
    if (!($(".table-view").parent().hasClass('contentbox') || $(".tile-view").parent().hasClass('contentbox'))) {
        $(".table-view,.tile-view").wrap("<div class='contentbox'></div>");
    }
}

function ApplyEllipses(colNumber, nRow, link) {
    var $tdcell = $('td:eq(' + colNumber + ')', nRow);
    var $wordArray = $tdcell.text().split(" ");
    var bRequiresEllipses = false;
    for (var i = 0; i < $wordArray.length; i++) {
        if ($wordArray[i].length > 17) {
            bRequiresEllipses = true;
            break;
        }
    }
    if (bRequiresEllipses) {
        if (link) {
            $tdcell.html("<a class='hyperlink'>" + ellipsis($tdcell.text(), 17, "right") + "</a>");
        }
        else {
            $tdcell.text(ellipsis($tdcell.text(), 17, "right"));
        }
    }
}

/************************* WCAG Compliance Tags - Start **********************/

//SetSet the WCAG Compliance tags for screen reader to read Wizards steps and dynamic contents.
function SetWCAGTagsForDynamicContents() {
    //ARIA tags for generic Wizard steps contents and common messages.
    $(".form-level-message,#divStep1,#divStep2, #divStep3, #divStep4, #divStep5, #divStep6, .button-section").attr("role", "alert");
    $(".form-level-message,#divStep1,#divStep2, #divStep3, #divStep4, #divStep5, #divStep6, .button-section").attr("aria-live", "assertive");
    //$(".form-level-message, #divStep1, #divStep2, #divStep3, #divStep4, #divStep5, #divStep6, .button-section").attr("aria-relevant", "all");
    //ARIA tags for 'Add a Payee' Wizard steps contents.
    $("#formPayee #tabAddPayee ul a, #formPayee #divBrowse, #formPayee #divAddPayee, #formPayee .review-form").attr("role", "alert");
    $("#formPayee #tabAddPayee ul a, #formPayee #divBrowse, #formPayee #divAddPayee, #formPayee .review-form").attr("aria-live", "assertive");
    $("#formPayee #tabAddPayee ul a, #formPayee #divBrowse, #formPayee #divAddPayee, #formPayee .review-form").attr("aria-relevant", "all");
    //ARIA tags for 'Services - Credit Score' related view messages.
    $("#divFormHeaderCRSCR").attr("role", "alert");
    $("#divFormHeaderCRSCR").attr("aria-live", "assertive");
    $("#divFormHeaderCRSCR").attr("aria-relevant", "all");
    //ARIA tags for 'Money Market Funds Transactions and Activity' view messages.
    $("#lblTradeDate, #spTradeDate, #lblSettlementDate, #spSettlementDate, #lblDividendDate, #spDividendDate").attr("role", "alert");
    $("#lblTradeDate, #spTradeDate, #lblSettlementDate, #spSettlementDate, #lblDividendDate, #spDividendDate").attr("aria-live", "assertive");
    $("#lblTradeDate, #spTradeDate, #lblSettlementDate, #spSettlementDate, #lblDividendDate, #spDividendDate").attr("aria-relevant", "all");
    //ARIA tags for page level messages.
    $(".page-level-message").attr("role", "alert");
    $(".page-level-message").attr("aria-live", "assertive");
    $(".page-level-message").attr("aria-relevant", "all");
    //ARIA tags for Zelle related pages
    $("#divSendMoneyStep1, #divSendMoneyReview, #divZelleMarketingInfo, #divZelleDSAContent").attr("role", "alert");
    $("#divSendMoneyStep1, #divSendMoneyReview, #divZelleMarketingInfo, #divZelleDSAContent").attr("aria-live", "assertive");
    $("#divSendMoneyStep1, #divSendMoneyReview, #divZelleMarketingInfo, #divZelleDSAContent").attr("aria-relevant", "all");
}

//Set the WCAG Compliance tags for screen reader to read dynamic contents in Intro Area.
function SetWCAGTagsForIntroArea() {
    //ARIA tags for Intro area.
    $("#divIntroBoxLayout").attr("role", "alert");
    $("#divIntroBoxLayout").attr("aria-live", "assertive");
    $("#divIntroBoxLayout").attr("aria-relevant", "all");
    $("#divIntroBoxLayout").attr("aria-labelledby", "hdr1 hdr2 hdr3 hdr4 hdr5");
}

/************************* WCAG Compliance Tags - End ***********************/
function ShowDepSlip(accountIndex, postingMonth, postingDay, postingYear, credit, CPCSSeq) {

    $.ajax({
        url: '/Accounts/ShowDepSlip',
        data: { accountIndex: accountIndex, postingMonth: postingMonth, postingDay: postingDay, postingYear: postingYear, amount: credit, CPCSSeq: CPCSSeq },
        type: 'POST',
        success: function (result) {
            $("div#ViewDepSlips").remove();
            $("#divCV").html(result);
            if (result != "") {
                MTBLightBox("Deposit Images", "ViewDepSlips", "660");
            } else {
                MTBLightBox("Cleared Check Image", "divClearedChecksError", "660");
            }

            $("#btnSaveAllDepSlipImages").ready(function () {
                $("#btnSaveAllDepSlipImages").data("accountIndex", accountIndex);
                $("#btnSaveAllDepSlipImages").data("postingMonth", postingMonth);
                $("#btnSaveAllDepSlipImages").data("postingDay", postingDay);
                $("#btnSaveAllDepSlipImages").data("postingYear", postingYear);
                $("#btnSaveAllDepSlipImages").data("depAmount", credit);
                $("#btnSaveAllDepSlipImages").data("CPCSSeq", CPCSSeq);
            });
        },
    });
}

function ShowCheckImage(checkNumber, accountIndex, amount, checkDate) {

    var aIndex = accountIndex;
    if (accountIndex == null) {
        //accountKey = $('#ddlAccountNames').val();
        //accntProductIndex = accountKey.split(',');
        aIndex = $('#ddlAccountNames').val().split(',')[0]; //accntProductIndex[0];
    }

    tabindx = Number($("[tabindex]").attr("tabindex"));

    $("#divViewCheck #btnSaveImage").attr("tabindex", ++tabindx);

    var user = $('#UserType').val();
    $.ajax({
        url: '/Accounts/ShowCheckImage',
        data: { CheckNumber: checkNumber, accountIndex: aIndex, userType: user, amount: amount, checkDate: checkDate },
        type: 'POST',

        success: function (result) {
            $("#divCV").html(result);
            if (result != "") {
                MTBLightBox("Check " + checkNumber, "ViewChecks", "660");
                //MTBLightBox("Check " + checkNumber, "divViewCheck", "660");                    
            } else {
                MTBLightBox("Cleared Check Image", "divClearedChecksError", "660");
            }
        },
    });
}

$(document).on('click', "#btnSaveImage", function () {
    MTBOpenWindow("/Accounts/ClearedChecksPDF/", 2);
});

$(document).on('click', "#btnSaveAllDepSlipImages", function () {
    MTBOpenWindow("/Accounts/DepositSlipSaveAllImages?" +
        "accountIndex=" + $("#btnSaveAllDepSlipImages").data("accountIndex") +
        "&postingMonth=" + $("#btnSaveAllDepSlipImages").data("postingMonth") +
        "&postingDay=" + $("#btnSaveAllDepSlipImages").data("postingDay") +
        "&postingYear=" + $("#btnSaveAllDepSlipImages").data("postingYear") +
        "&depAmount=" + $("#btnSaveAllDepSlipImages").data("depAmount") +
        "&CPCSSeq=" + $("#btnSaveAllDepSlipImages").data("CPCSSeq"), 2);
});

function addsubtxtforradioLabel(x, t) {
    /*
    x = for attr for label
    t =  Sub text to add
    */
    try {
        lbl = String($("label[for='" + x + "']").text()).split(",");
        $("label[for='" + x + "']").html("<b>" + lbl[0] + "</b>" + ", " + lbl[1]);
    } catch (e) {

    }
    $("label[for='" + x + "']").append("<span class='subtxtforadioLabel'>" + t + "</span>");
}

function GetCurrentPage() {
    var urlPathArray = window.location.pathname.split('/'); //Splitting the url to get the controller and action
    var currentPage = urlPathArray[1] + ":" + urlPathArray[2];
    return currentPage;
}

function bindBeforeUnloadPayments() {

    $(window).bind("beforeunload", function (e) {
        if ($.browser.chrome) {
            return "You have not yet scheduled your payment(s). If you leave this page, your payment details will be lost.";
        }
        else
            return "You have not yet scheduled your payment(s). If you leave this page, your payment details will be lost. Are you sure you want to leave this page?";

    });
}

function bindBeforeUnloadTransfers() {

    $(window).bind("beforeunload", function (e) {
        if ($.browser.chrome) {
            return "You have not yet scheduled your transfer(s). If you leave this page, your transfer details will be lost.";
        }
        else
            return "You have not yet scheduled your transfer(s). If you leave this page, your transfer details will be lost. Are you sure you want to leave this page?";

    });

}

function AddPrintIcon(classname) {
    if (classname == 'success-large') {
        $(".form-level-message:eq(0) > div.event-level-message:eq(0)").append('<a id="lnkPrintConfirmationScreen" href="#" style="float: right;"><span class="printer"></span>Print</a>');
    }
}

//Dialog box for retail users with more than one mortgage account/PAI users 

function MTBMortgageDialogBox(titleText, controlId, callback) {
    buttonYesText = "CONTINUE";
    buttonNoText = "CANCEL";
    divWidth = "450";

    var myDialog = $("#" + controlId).dialog({
        focus: function () {
            $("#" + controlId).parent().find("button").blur();
            $("#" + controlId).parent().find(".button-med-pri-arr").focus();
        },
        autoopen: true,
        width: divWidth,
        closeOnEscape: closeOnEscapeValue,
        //To close timeout dialog on Escape Key
        create: function () {
            $(this).closest('.ui-dialog').on('keydown', function (ev) {
                if (!closeOnEscapeValue && ev.keyCode === $.ui.keyCode.ESCAPE) {
                    $("#" + controlId).dialog('close');
                    extendTimer();
                    $("#divMortgageLoginInfo .ui-widget-content").html('');
                }

            });
        },
        //Close fn -To reset text for screen reader after pop up close
        close: function () {
            if (controlId == "divDialogBankToBank" || controlId == "divBeyondNineMinForRsa") {
                $("[aria-describedby='" + controlId + "']").html(" ");
            }
        },
        height: "186",
        modal: true,
        title: titleText,
        maxHeight: 400,
        draggable: true,
        resizable: true,
        postion: ['left', "middle"],
        buttons: [
            {
                text: buttonYesText,
                id: "btnYesCancel",
                "class": 'bold-medium-gradient button-med-pri-arr',
                click: function () {
                    var hasNoError = true;
                    $("#SSN").removeClass("input-validation-error");
                    $("#spSsnError,#spAccountError").text("");
                    $("[id^=rbntAcct_]").parent().parent().removeClass('error');

                    if ($("#SSN").is(":visible") && $("#SSN").val() == "") {
                        $("#spSsnError").text("Please enter your Social Security number.");
                        $("#spSsnError").addClass("field-validation-error");
                        $("#SSN").addClass("input-validation-error");
                        hasNoError = false;
                    }
                    if ($("#SSN").is(":visible") && $("#SSN").val() != "" && (!/^([0-9.]{4})$/.test($("#SSN").val()))) {
                        $("#spSsnError").text("Please enter the last 4 digits of your Social Security number.");
                        $("#spSsnError").addClass("field-validation-error");
                        $("#SSN").addClass("input-validation-error");
                        hasNoError = false;
                    }
                    if ($("#divMgtRadioList").is(":visible") && ($('[id^=rbntAcct]:checked').attr('id')) == undefined) {
                        $("#spAccountError").text("Please select an account to continue.");
                        $("#spAccountError").addClass("field-validation-error");
                        $("[id^=rbntAcct]").parent().parent().addClass('error');
                        hasNoError = false;
                    }
                    if (hasNoError) {
                        $("#spSsnError,#spAccountError").text("");
                        $("#SSN").removeClass("input-validation-error");
                        $(this).dialog("close");
                    }
                    callback(hasNoError);
                }
            },
            {
                text: buttonNoText,
                id: "btnNoCancel",
                "class": 'bold-light-gradient button-med-sec-arr',
                click: function () {
                    callback(false);
                    $(this).dialog("close");
                }

            }
        ]
    });
    return myDialog;
}

$(document).on("change", '[id^=rbntAcct_]', function (e) {
    $("[id^=rbntAcct_]").parent().removeClass('checked');
    $("[id^=rbntAcct_]").parent().parent().removeClass('error');
    $("#" + this.id + ':checked').parent().addClass('checked');
});


function GetMortgageSsoSamlUrl(target, actIndex) {
    $.ajax({
        url: "/Common/HasMultipleMortgageAccounts",
        type: "POST",
        async: false,
        data: { actIndex: actIndex },
        success: function (result) {
            if (result.toString().indexOf("last four digit") != -1 || result.toString().indexOf("Please select the Mortgage account")!=-1) {
                $("#divMortgageLoginInfo").html(result);
                $(document).on("keydown", "#SSN", function (e) {
                    VerifyNumberKey(e);
                });

                MTBMortgageDialogBox("View My Mortgage Info", "divMortgageLoginInfo", function (dialogResult) {
                    if (dialogResult) {
                        var accountIndex = actIndex;
                        if (actIndex == '' || actIndex == undefined) {
                            var id = $('[id^=rbntAcct_]:checked').attr("id");
                            accountIndex = $("#" + id).val();
                        }
                        var ssn = $("#SSN").val();
                        $.ajax({
                            url: "/Common/GenerateMortgageSamlUrl",
                            type: "POST",
                            async: false,
                            data: { target: target, accountIndex: accountIndex, ssn: ssn },
                            success: function (url) {
                                MTBOpenWindow(url);
                            }
                        });
                    }
                });
                $('#btnYesCancel').append('<span class="primary-arrow"></span>');
            }
            else {
                $(document).on("keydown", "#SSN", function (e) {
                    VerifyNumberKey(e);
                });
                var accountIndex = actIndex;
                if (actIndex == '' || actIndex == undefined) {
                    var id = $('[id^=rbntAcct_]:checked').attr("id");
                    accountIndex = $("#" + id).val();
                }
                var ssn = $("#SSN").val();
                $.ajax({
                    url: "/Common/GenerateMortgageSamlUrl",
                    type: "POST",
                    async: false,
                    data: { target: target, accountIndex: accountIndex, ssn: ssn },
                    success: function (url) {
                        MTBOpenWindow(url);
                    }
                });
            }
        }
    });
}

//Preventing special character for Security Questions
$.fn.preventSpecialChar = function (options) {

    function checkChar(value, prevValue) {
        var temp = '';

        for (var i = 0; i < value.length; i++) {
            var str = value.substr(0, i) +
                    value.substr(i + value.length - prevValue.length);

            if (str === prevValue) temp =
                    value.substr(i, value.length - prevValue.length);
        }

        return temp;
    }

    function isValidChar(c) {
        return new RegExp(options.regex).test(c);
    }

    function isValidString(str) {
        for (var i = 0; i < str.length; i++)
            if (!isValidChar(str.substr(i, 1))) return false;

        return true;
    }

    $(this).filter('input,textarea').on('input', function () {
        var val = this.value,
                lastVal = $(this).data('lastVal');

        var insertedChar = checkChar(val, lastVal);

        var removedChar = checkChar(lastVal, val);

        var pastedChar = insertedChar.length > 1 || (!insertedChar && !removedChar);

        if (pastedChar) {
            if (!isValidString(val)) this.value = lastVal;
        }
        else if (!removedChar) {
            if (!isValidChar(insertedChar)) this.value = lastVal;
        }

        $(this).data('lastVal', this.value);
    }).on('focus', function () {
        $(this).data('lastVal', this.value);
    });

    return this;
}

//check link for RCC if so then open to AO
function checkforRCCtoOpenAo(element) { //NAORCCEnabled is a feature flag reference created on load
    try {
        NAORCCEnabled
    } catch (err) {
        NAORCCEnabled = false;
    }

    if (NAORCCEnabled) {
        pcode = $(element).attr("data_prodcode");
        if (/rcc/i.test(pcode)) {
            MTBOpenWindow("/Accounts/AccountOpening?pcode=" + pcode, 4);
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}

function ConnectToAccountOpening(ele) {
    $.ajax({
        url: "/Common/ConnectToAccountOpening",
        type: "POST",
        cache: false,
        data: { prodCode: String($(ele).attr("data_prodcode")) },
        dataType: "Json",
        success: function (result) {
            if (result.isGood) {
                $("form.js-connectToAo").attr("action", result.sibmiturl);
                $("form.js-connectToAo input#MyToken").val(result.MyToken);
                $("form.js-connectToAo input#ProductCode").val(result.ProductCode);
                $("form.js-connectToAo").submit();
                setTimeout(function () { $("form.js-connectToAo input#MyToken").val(""); }, 1000);
            }
        }
    });
}

function ApplyCreditCardLimitIncrease() {
    $.ajax({
        url: "/Accounts/CreditCardApply",
        type: "post",
        cache: false,
        data: { limit: true },
        success: function (applyCreditCardLimitIncrease) {
            MTBOpenWindow(applyCreditCardLimitIncrease, 4);
        }
    });
}

function CreditCardApply() {
    $.ajax({
        url: "/Accounts/CreditCardApply",
        type: "post",
        cache: false,
        success: function (creditcardapply) {
            MTBOpenWindow(creditcardapply, 2);
        }
    });
}

function GetEventLevelMessage(msgtext, msgtype, obj) { //0 = error, 1= info, 2= success
    Message = {};
    $(obj).html("");
    Message["MessageText"] = msgtext;
    Message["MessageType"] = msgtype;
    $.ajax({
        url: '/Alerts/GetEventLevelMessage',
        type: 'POST',
        data: Message,
        success: function (result) {
            $(obj).html(result);

        },
        complete: function () {
            switch (msgtype) {
                case 0:
                    $(obj).addClass("gradient-error");
                    break;
                case 1:
                    $(obj).addClass("gradient-info");
                    break;
                case 2:
                    $(obj).addClass("gradient-success");
                    break;
            }
        }
    });
}

function AccountOpenCheck(accountType) {

    return $.ajax({
        url: '/Accounts/AccountOpeningResult',
        type: 'post',
        data: { accountType: accountType },
        success: function (result) {
            return result;
        },
        error: function () {
            return false;
        }

    });

}

function EnforceKey(evt, regex) {
    var theEvent = evt || window.event;
    var key = theEvent.keyCode || theEvent.which;

    //for firefox    
    var exclusions = [8, 9, 13]; /*Add exceptions here */
    if (exclusions.indexOf(key) > -1) { return; }

    key = String.fromCharCode(key);
    if (!regex.test(key)) {
        theEvent.returnValue = false;
        if (theEvent.preventDefault) theEvent.preventDefault();
    }
}
/*************************Web Analytics Start*****************************************/
var APPID = "OLB";
var List = [];

$(document).ready(function () {
    //Tag the tab clicks using id
    $(".ui-tabs li>a").click(function (event) {
        var tabName;
        var isAddAPayeePage = GetCurrentPage() == "Payments:AddAPayee" ? true : false;
        if (isAddAPayeePage) {
            GetTagList();
        }
        if (List != undefined && List.length == 0) {
            if (isAddAPayeePage) {
                AddTagList(this.id);
            }
            tabName = $(this).text();
            if (!$(this).hasClass('no_tag_pl')) {
                TagTabClick(tabName);
            }
        }
        else if ($.inArray(this.id, List) == -1) {
            if (isAddAPayeePage) {
                AddTagList(this.id);
            }
            tabName = $(this).text();
            if (!$(this).hasClass('no_tag_pl')) {
                TagTabClick(tabName);
            }
        }
    });

    //Tag the tabs using id in dynamically generated code
    $(document).on("click", ".ui-tabs li>a", function () {
        var tabName = $(this).text();
        if (!$(this).hasClass('no_tag')) {
            TagTabClick(tabName);
        }
    });

    //Tag the table/tile views
    $(".view-option a").click(function (event) {
        var viewName = $(this).text();
        TagView(viewName);

    });

    //Tag the prior day balances light box
    $(document).on("click", "#lnkViewPriorDay", function () {
        var linkName = $(this).text();
        TagLightBox(GetPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(linkName));
    });

    //Tag the new agreement light box
    $(document).on("click", "#lnkNewAgreement", function () {
        var linkName = $(this).text();
        TagLightBox(GetPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(linkName));
    });

    //Tag the P2p(Zelle) Add a Recipient light box
    $(document).on("click", "#hrefAddRecipient", function () {
        var linkName = $(this).text();
        TagLightBox("OLB:Payments:Zelle:SendMoney:Step1:" + RemoveNewLinesAndWhiteSpaces(linkName) + "LightBox");
    });

    //Tag the P2p(Zelle) Request Money Add a Recipient light box
    $(document).on("click", "#hrefRequestMoneyAddRecipient", function () {
        var linkName = $(this).text();
        var analyticsTag = "OLB:Payments:Zelle:RequestMoney:Step1:" + RemoveNewLinesAndWhiteSpaces(linkName) + "LightBox";
        s.linkTrackVars = "eVar27,eVar36,prop36,eVar41,prop41,events,channel";
        s.linkTrackEvents = s.events = "event63";
        s.pageName = analyticsTag;
        s.eVar27 = analyticsTag;
        s.eVar36 = s.prop36 = analyticsTag;
        s.eVar41 = s.prop41 = APPID;
        s.channel = GetChannel();
        s.tl(this, "o", analyticsTag);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    });

    //Tag the P2p(Zelle) Block or Unblock light box
    $(document).on("click", "#lnkManageSettingsBlockUnblock", function () {
        TagLightBox("OLB:CustomerService:Zelle:ManageSettings:BlockUnblockLightbox");
    });


    //Tag the enroll mobile deposit light box
    $(document).on("click", "#btnEnrollMobileDeposit", function () {
        var tabName = $(this).text();
        TagLightBox("OLB:MobileDeposit:MarketingPage:EnrollmentLightBox");
    });

    //Tag the enroll mobile deposit light box
    $(document).on("click", "#btnEnrollNowLightBox", function () {
        TagLightBox("OLB:MobileDeposit:MarketingPage:EnrollmentLightBox");
    });

    //Tag the enroll mobile deposit light box
    $(document).on("click", "#btnEnrollNow", function () {
        TagLightBox("OLB:MobileDeposit:MarketingPage:EnrollmentLightBox");
    });

    //Tag the Go Electronic Checkbox when checked of the e-statement Light Box
    $(document).on("change", ".js-analytics-checkbox", function () {
        if ($(".js-analytics-checkbox").is(':checked')) {
            TagGoElectronicCheckbox("OLB:Campaign:LoginIntercept:EstatementEnrollment");
        }
    });
    //Tag AccountSummary button of confirmation model 
    $(document).on("click", ".js-analytics-account-confirm", function () {
        TagAccountbtn("OLB:Campaign:LoginIntercept:EstatementEnrollment:Confirmation");
    });
    //Tag updatedelivery button of confirmation model
    $(document).on("click", ".js-analytics-update-confirm", function () {
        TagUpdatebtn("OLB:Campaign:LoginIntercept:EstatementEnrollment:Confirmation");
    });
    //Tag AccountSummary button of Success model 
    $(document).on("click", ".js-analytics-account-success", function () {
        TagAccountbtn("OLB:Campaign:LoginIntercept:EstatementEnrollment:SuccessLightBox");
    });
    //Tag updatedelivery button of Success model
    $(document).on("click", ".js-analytics-update-success", function () {
        TagUpdatebtn("OLB:Campaign:LoginIntercept:EstatementEnrollment:SuccessLightBox");
    });

    //Tag the Save and continue button of the e-statement Light Box 
    $(document).on("click", ".js-saveEstatmentsSettings", function () {
        if ($("#chkboxagreement").is(':checked')) {
            TagDSACheckBox("OLB:Estatement:Enrollment:LightBox");
        }
        SaveandContinueButtonAnalytics("OLB:Campaign:LoginIntercept:EstatementEnrollment");
    });

    //Tag the AccountSummarybutton button of the e-statement Error Light Box
    $(document).on("click", ".js-analytics-account-error", function () {
        TagAccountBtnErr("OLB:Estatement:Enrollment:Error");
    });

    //Tag the Remindmelater button of the e-statement Light Box
    $(document).on("click", ".js-analytics", function () {
        TagRemindMeLater("OLB:Campaign:LoginIntercept:EstatementEnrollment");
    });

    //Tag the Account Summary  button of the e-statement Light Box
    $(document).on("click", "#close-two", function () {
        TagLightBox("OLB:Campaign:LoginIntercept:EstatementEnrollmentConfirmation");
    });

    //Tag the close button of the e-statement Light Box  
    $(document).on("click", ".btnCloseModel", function () {
        TagCloseLightBox("OLB:Campaign:LoginIntercept:EstatementEnrollment");
    });
    $(document).on("click", "#btnCloseModelConfirm", function () {
        TagCloseLightBox("OLB:Campaign:LoginIntercept:EstatementEnrollment:Confirmation");
    });
    $(document).on("click", "#btnCloseModelSuccess", function () {
        TagCloseLightBox("OLB:Campaign:LoginIntercept:EstatementEnrollment:SuccessLightBox");
    });

    $(document).on("click", "#js-analytics-close", function () {
        TagCloseErrorLightBox("OLB:Estatement:Enrollment:Error");
    });

    //Tag PDF Check View
    $(document).on("click", "#checkImage", function () {
        TagPDFView(GetPageNameTag() + ":ClearedChecksPDF");
    });

    //Tag the statement pdf view
    $(document).on("click", ".lnkPdfView", function () {
        TagPDFView(GetPageNameTag() + ":PDF");
    });

    $(document).on("click", ".tbl-pdf a", function () {
        TagPDFViewStatements("OLB:Statements:StatementsAndNotices:EstatementInserts");
    });

    //Tag the bundle disclosure pdf view
    $(document).on("click", "#aBundleDisClosure", function () {
        TagPDFView(GetPageNameTag() + ":Disclosure");
    });

    //Tag the bundle user guide pdf view
    $(document).on("click", "#aUserGuide", function () {
        TagPDFView(GetPageNameTag() + ":UserGuide");
    });

    $(document).on("click", "#aViewYourRecommendation,#btnCancel,#aViewYourRecommendation1", function () {
        //$('#aViewYourRecommendation,#btnCancel,#aViewYourRecommendation1').click(function () {
        if (GetCurrentPage() == "Login:CustomerIdentification") {
            var analyticsTag = GetPageNameTag() + ":CancelLightbox";
            TagLightBox(analyticsTag);
        }
        else {
            analyticsTag = GetPageNameTag() + ":ViewRecommendation";
            TagNasLinks(analyticsTag);
        }
    });

    $(document).on("click", "#btnLaunch,#btnLaunchNeedsAssessment1,#aNasLaunch,#btnCloseLaunch,#btnLauchBundle", function () {
        //$('#btnLaunch,#btnLaunchNeedsAssessment1,#aNasLaunch').click(function () {
        var analyticsTag = GetPageNameTag();
        analyticsTag += $("#HasNaf").val() == "True" ? ":updateneedsassessment" : ":launchneedsassessment";
        TagNasLinks(analyticsTag);
    });


    $(document).on("click", "#lnkreasses", function () {
        TagNasLinks(GetPageNameTag() + ":reassessyourneeds");
    });

    $(document).on("click", "#btnContinueOnlineBanking", function () {
        var isCustInfo = $('#rbtnCustInfoNo').attr('checked') == "checked" ? "NameDOBIncorrect" : ($('#rbtnCustAddressNo').attr('checked') == "checked" ? "AddressEmployerIncorrect" : null);
        if (isCustInfo != null) {
            var analyticsTag = GetPageNameTag() + ":" + isCustInfo;
            TagKycRadioInfo(analyticsTag);
        }
        else if ($('#ddlCitizenship').val() == "4") {
            analyticsTag = GetPageNameTag() + ":NonresidentAlien";
            TagKycDdlInfo(analyticsTag);
        }
        else if ($("#divRemediationStep3").is(':visible')) {
            analyticsTag = GetPageNameTag() + ":Continue";
            TagKycInfoOnContinue(analyticsTag);
        }
    });

    //Tag the Campaign ad clicks in dynamically generated page
    $(document).on("click", ".ad-campaign-manager", function () {
        TagCampaignAd();
    });

    $(document).on("click", ".js-mci-analytics", function () {
        var customLink = $(this).data("analytics");
        s.linkTrackVars =
            "pageName,channel,eVar27,eVar39,eVar41,eVar53,eVar54,prop30,prop41,event67,event95,event120";
        s.pageName = "OLB:Alerts:VerifyPrimaryPhone";
        s.channel = GetChannel();

        switch (customLink) {
            case "PrimaryMobilePhone":
                s.linkTrackEvents = s.events = "event67,event95";
                s.eVar54 = customLink;
                s.eVar53 = customLink;
                break;
            case "MobilePhone2":
            case "MobilePhone3":
            case "AddNewMobilePhone":
            case "YesAlertMe":
                s.linkTrackEvents = s.events = "event120";
                break;
            case "RemindMeLater":
            case "Ok":
            case "XToExit":
                s.linkTrackEvents = s.events = "event67";
                break;
        }

        s.eVar27 = customLink;
        s.eVar39 = s.prop30 = customLink;
        s.eVar41 = s.prop41 = APPID;
        s.tl(this, "o", s.pageName);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    });

});

//Tag Page Name for Mobile Capture Interstitial
function TagMciPageName() {
    var page = "OLB:Alerts:VerifyPrimaryPhone";
    s.linkTrackVars = "eVar36,prop36,eVar41,eVar53,prop41,channel,eVar27,prop27,event63";
    s.linkTrackEvents = s.events = "event63";
    s.eVar36 = s.eVar53 = s.prop36 = page;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.eVar27 = s.pageName;
    s.tl(this, "o", page);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//Light box function for AccountSummary::Mirador:ApplyforLoan
function TagMiradorLightBox(analyticsTag) {
    s.linkTrackVars = "pageName,channel,eVar36,eVar41,prop36,prop41,event63";
    s.linkTrackEvents = s.events = "event63";
    s.eVar36 = s.prop36 = analyticsTag;
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagMiradorSpeedBump(analyticsTag) {
    var pageTag = "OLB:AccountSummary:ApplyForLoan";
    s.linkTrackVars = "pageName,channel,eVar41,eVar53,prop30,prop41,event67";
    s.linkTrackEvents = s.events = "event67";
    s.prop30 = pageTag;
    s.pageName = "OLB:AccountSummary";
    s.eVar53 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagMiradorSpeedBumpBtns(analyticsTag) {
    var pageTag = "OLB:AccountSummary:ApplyForLoan";
    s.linkTrackVars = "pageName,channel,eVar41,eVar53,prop30,prop41,event67";
    s.linkTrackEvents = s.events = "event67";
    s.prop30 = pageTag;
    s.pageName = pageTag;
    s.eVar53 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle EnrollSelect Lightbox
function TagZelleEnrollSelectLightBox() {
    var urlAddress = window.location.pathname.split('/');
    var modeValue = window.location.href.split('=');
    if (modeValue[1] == "TEXT") {
        TagP2PLightBox("OLB:Payments:" + urlAddress[1] + ":Enrollment:SomeoneSentMeMoneyMobile:Step1:ValidateAccountLightBox");
    }
    else if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
        TagP2PLightBox("OLB:Payments:" + urlAddress[1] + ":Enrollment:SomeoneSentMeMoneyEmail:Step1:ValidateAccountLightBox");
    }
    else {
        TagP2PLightBox("OLB:Payments:" + urlAddress[1] + ":Enrollment:IJustWantToEnrollOrSendMoney:Step1:ValidateAccountLightBox");
    }
}
// Pay Now Link 
function TagPayNow() {
    var pageTag = "OLB:Accounts:AccountsSummary";
    s.linkTrackVars = "pageName,channel,eVar41,eVar53,sProp53,prop30,prop41,event67";
    s.linkTrackEvents = s.events = "event67";
    s.prop30 = pageTag;
    s.pageName = pageTag;
    s.eVar53 = s.prop53 = "SCCPayNow";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

// Transfer To Link Tag
function TagToSCC() {
    var pageTag = "OLB:Transfers:AccountAndLoanPayments:Step1";
    s.linkTrackVars = "pageName,channel,event67,evar27,sProp27,eVar54,sProp30,eVar39,eVar41,sProp41,event95,eVar53,sProp53,evar63";
    s.linkTrackEvents = s.events = "event95,event67";
    s.pageName = pageTag;
    s.eVar53 = s.prop53 = "ToSecuredCreditCard";
    s.eVar54 = s.prop54 = "ToSecuredCreditCard";
    s.eVar39 = s.prop39 = "ToSecuredCreditCard";
    s.eVar27 = s.prop27 = "ToSecuredCreditCard";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
//Transfer From SCC Link
function TagSCCFrom() {
    var pageTag = "OLB:Transfers:AccountAndLoanPayments:Step1";
    s.linkTrackVars = "pageName,channel,event67,evar27,sProp27,eVar54,sProp30,eVar39,eVar41,sProp41,event95,eVar53,sProp53,evar63";
    s.linkTrackEvents = s.events = "event95,event67";
    s.pageName = pageTag;
    s.eVar53 = s.prop53 = "FromSecuredCreditCard";
    s.eVar54 = s.prop54 = "FromSecuredCreditCard";
    s.eVar39 = s.prop39 = "FromSecuredCreditCard";
    s.eVar27 = s.prop27 = "FromSecuredCreditCard";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
// Tag Next Button 
function TagAccLoanPaymentNextButton() {
    var pageTag = GetPageNameTag();
    s.linkTrackVars = "pageName,channel,eVar41,sProp41,eVar53,event67";
    s.linkTrackEvents = s.events = "event67";
    s.pageName = pageTag;
    s.eVar53 = "Next";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
//Tag Submit button
function TagAccLoanPaymentSubmitButton() {
    var pageTag = "OLB:Transfers:AccountAndLoanPayments:Step2";
    s.linkTrackVars = "pageName,channel,eVar41,sProp41,eVar53,event67";
    s.pageName = pageTag;
    s.eVar53 = "Submit";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
//Tagging Account and Loan Payment Error scenerios
function TagAccLoanPaymentStep2Error() {
    var pageTag = "OLB:Transfers:AccountAndLoanPayments:Step2";
    s.linkTrackVars = "eVar41,prop41,eVar27,eVar16,channel,event188";
    s.pageName = pageTag;
    s.linkTrackEvents = s.events = "event188";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.eVar27 = pageTag;
    s.eVar16 = "UnableToCompleteRequest";
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagBillPayStep4Error() {
    var pageTag = GetPageNameTag();
    console.log("pagename", pageTag);
    s.linkTrackVars = "eVar41,prop41,eVar27,eVar16,channel,event188";
    s.pageName = pageTag;
    s.linkTrackEvents = s.events = "event188";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.eVar27 = pageTag;
    s.eVar16 = "UnableToCompleteRequest";
    s.tl(this, "o", pageTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle Lightbox
function TagZelleLightBox(refID) {
    var stepNum = $("#divIntroBoxLayout h2 span").text(); //Extracting the step number
    var modeValue = window.location.href.split('=');
    switch (refID) {
        case "SecurityConfirmationLightbox":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                TagP2PLightBox("OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoneyEmail:Step" + stepNum + ":SecurityConfirmationLightBox");
            }
            else if (modeValue[1] == "TEXT") {
                TagP2PLightBox("OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoneyMobile:Step" + stepNum + ":SecurityConfirmationLightBox");
            }
            else {
                TagP2PLightBox("OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step" + stepNum + ":SecurityConfirmationLightBox");
            }
            break;
        case "EmailMobileAlreadyInUseSecConLightBox":
            TagP2PLightBox("OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step" + stepNum + ":TokenInUseLightBox");
            break;

        case "EnrollSelectSecConLightBox":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                TagP2PLightBox("OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step" + stepNum + ":SecurityConfirmationLightBox");
            }
            else {
                TagP2PLightBox("OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoney:Step" + stepNum + ":SecurityConfirmationLightBox");
            }
            break;

        default:
            TagP2PLightBox("OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step" + stepNum + ":ValidateAccountLightBox");
    }
}

//custom light box function for Zelle inorder to include eVar39
function TagP2PLightBox(analyticsTag) {
    s.linkTrackVars = "eVar36,eVar39,prop36,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event63";
    s.eVar36 = s.prop36 = analyticsTag;
    s.eVar39 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

// custom light box function for E-statement 
function TagEstatementLightBox(analyticsTag) {
    var analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.linkTrackVars = "eVar27,eVar41,prop41,channel";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEstatementConfirmationBox() {
    var analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment:Confirmation";
    s.linkTrackVars = "eVar27,eVar41,prop41,channel";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment:Confirmation";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEstatementSuccessBox() {
    var analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment:SuccessLightBox";
    s.linkTrackVars = "eVar27,eVar41,prop41,channel";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEstatementErrorBox(analyticsTag) {
    var analyticsTag = "OLB:Estatement:Enrollment:Error";
    s.linkTrackVars = "eVar27,eVar36,prop36,eVar41,prop41,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar36 = s.prop36 = analyticsTag;
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = "OLB:Estatement:Enrollment:Error";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagSaveError(analyticsTag) {
    var analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment:SystemError";
    s.linkTrackVars = "eVar41,prop41,eVar27,eVar16,channel";
    s.eVar16 = "SystemError";
    s.linkTrackEvents = s.events = "event89";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment:SystemError";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle EnrollSelect Links
function TagZelleEnrollmentLnkAndBtn(btnID) {
    var modeValue = window.location.href.split('=');

    if (modeValue[1] == "TEXT") {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyMobile:Step1";
    }
    else if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step1";
    }
    else {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step1";
    }

    switch (btnID) {

        case "lnkAgreement":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step1:DigitalServicesAgreementLink";
            }
            else {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step1:DigitalServicesAgreementLink";
            }
            break;

        case "ManageSettingEnrollBtn":
            analyticsTag = "OLB:CustomerService:Zelle:ManageSettings"
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:EnrollButton";
            break;

        case "ManageSettingAddEmail":
            analyticsTag = "OLB:CustomerService:Zelle:ManageSettings"
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:AddEmailButton";
            break;

        case "ManageSettingAddMobile":
            analyticsTag = "OLB:CustomerService:Zelle:ManageSettings"
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:AddMobileButton";
            break;

        case "btnManageContactSettingsRemove":
            analyticsTag = "OLB:CustomerService:Zelle:ManageContactSettings";
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:RemoveFromZelleButton";
            s.eVar36 = s.prop36 = analyticsTag;
            break;

        case "lnkPrivacy":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step1:PrivacyPolicyLink";
            }
            else {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step1:PrivacyPolicyLink";
            }
            break;

        case "lnkResendVerificationCode":
            if (modeValue[1] == "TEXT") {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyMobile:Step1:ResendVerificationCodeLink";
                s.eVar36 = s.prop36 = analyticsTag;
            }
            else if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step1:ResendVerificationCodeLink";
                s.eVar36 = s.prop36 = analyticsTag;
            }
            else {
                s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step1:ResendVerificationCodeLink";
                s.eVar36 = s.prop36 = analyticsTag;
            }
            break;

        case "btnBlockRequest":
            analyticsTag = "OLB:CustomerService:Zelle:ManageSettings";
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:BlockUnblockLightbox:BlockButton";
            break;

        case "btnUnBlockRequest":
            analyticsTag = "OLB:CustomerService:Zelle:ManageSettings";
            s.eVar39 = s.prop30 = "OLB:CustomerService:Zelle:ManageSettings:BlockUnblockLightbox:UnblockButton";
            break;

        case "add-more-contact":
            analyticsTag = "OLB:Payments:Zelle:Enrollment:SendMoney:Step4";
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:Enrollment:SendMoney:Step4:AddThemNowButton";
            break;
    }

    s.linkTrackVars = "eVar27,eVar36,prop36,eVar39,prop30,eVar41,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event 67";
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle EnrollSelect Radio button
function TagZelleEnrollSelectRadioBtn() {
    var modeValue = window.location.href.split('=');
    if (modeValue[1] == "TEXT") {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyMobile:Step1";
    }
    else if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:SomeoneSentMeMoneyEmail:Step1";
    }
    else {
        analyticsTag = "OLB:Payments:Zelle:Enrollment:IJustWantToEnrollOrSendMoney:Step1";
    }
    s.linkTrackVars = "eVar39,eVar41,prop41,prop30,events,channel";
    s.eVar39 = s.prop30 = analyticsTag + ":RadioButton";
    s.eVar27 = analyticsTag;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event120";
    s.prop30 = analyticsTag + ":RadioButton";
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle Marketing page buttons
function TagZelleMarketingBtn(btnID) {
    analyticsTag = "OLB:Payments:Zelle:MarketingPage";

    switch (btnID) {
        case "btnSendMoneyZelle":
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:MarketingPage:SendMoneyWithZelleButton";
            break;

        case "btnSomeoneSentMoney":
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:MarketingPage:SomeoneSentMeMoneyButton";
            break;

        case "btnJustEnroll":
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:MarketingPage:IJustWantToEnrollButton";
            break;

        case "Text":
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:MarketingPage:SomeoneSentMeMoneyTextButton";
            break;

        case "Email":
            s.eVar39 = s.prop30 = "OLB:Payments:Zelle:MarketingPage:SomeoneSentMeMoneyEmailButton";
            break;
    }

    s.linkTrackVars = "eVar27,eVar39,prop30,eVar41,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event 67";
    s.eVar27 = analyticsTag;
    //s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//---Zelle pages
function TagZellePageName(urlAddress) {
    var urlAddress = window.location.pathname.split('/');
    var modeValue = window.location.href.split('=');
    var stepNum = $("#divIntroBoxLayout h2 span").text(); //Extracting the step number
    var analyticsTag;

    switch (urlAddress[2]) {
        case "ZelleEligibility":
            analyticsTag = "OLB:CustomerService:" + urlAddress[2];
            break;

        case "ZelleInformation":
            if (modeValue[1] == "SendMoney") {
                analyticsTag = "OLB:Payments:Zelle:MarketingPage:SendMoney";
            }
            else if (modeValue[1] == "ViewActivity") {
                analyticsTag = "OLB:Payments:Zelle:MarketingPage:ViewActivity";
            }
            else if (modeValue[1] == "ManageSettings") {
                analyticsTag = "OLB:Payments:Zelle:MarketingPage:ManageSettings";
            }
            else {
                analyticsTag = "OLB:Payments:Zelle:MarketingPage";
            }
            break;

        case "EnrollSelect":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#") {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":Enrollment:SomeoneSentMeMoneyEmail:Step" + stepNum;
            }
            else if (modeValue[1] == "TEXT") {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":Enrollment:SomeoneSentMeMoneyMobile:Step" + stepNum;
            }
            else {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":Enrollment:IJustWantToEnrollOrSendMoney:Step" + stepNum;
            }
            break;

        case "EnrollAccount":
        case "EnrollReview":
        case "EnrollConfirmation":
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":Enrollment:Step" + stepNum;
            break;

        case "SendMoneyDetails":
        case "SendMoneyReview":
        case "SendMoneyConfirmation":
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":SendMoney:Step" + stepNum;
            break;

        case "RequestMoneyDetails":
        case "RequestMoneyReview":
        case "RequestMoneyConfirmation":
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":RequestMoney:Step" + stepNum;
            break;

        case "Activity":
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":" + urlAddress[2] + "Page";
            break;

        case "ZelleActivityDetails":
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":ActivityDetails";
            break;

        case "ManageSettings":
            analyticsTag = "OLB:CustomerService:" + urlAddress[1] + ":" + urlAddress[2];
            break;

        case "ManageContactSettings":
            analyticsTag = "OLB:CustomerService:" + urlAddress[1] + ":" + urlAddress[2];
            break;

        case "DigitalServiceAgreement":
            if (modeValue[1] == "EMAIL" || modeValue[1] == "EMAIL#" || modeValue[1] == "EMAIL#ZELLE") {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":SomeoneSentMeMoneyEmail:" + urlAddress[2];
            }
            else if (modeValue[1] == "TEXT" || modeValue[1] == "TEXT#ZELLE") {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":SomeoneSentMeMoneyMobile:" + urlAddress[2];
            }
            else {
                analyticsTag = "OLB:Payments:" + urlAddress[1] + ":IJustWantToEnrollOrSendMoney:" + urlAddress[2];
            }
            break;

        default:
            analyticsTag = "OLB:Payments:" + urlAddress[1] + ":" + urlAddress[2] + ":Step" + stepNum;
    }

    var channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.prop41 = s.eVar41 = APPID;
    s.pageName = analyticsTag;
    s.channel = channel;
    var s_code = s.t();
    if (s_code) document.write(s_code);
    return analyticsTag;
}

//tagging function for CSS pages
//Page Name, Channel, eVar 39, evar 27, Event 67, eVar 41, s.Prop 41, s.Prop 30, eVar53, event 186
function TagIncorrectAddressLink(LinkID) {
    var analyticsTag;
    var customAnalyticsTag;
    var moduleName = window.location.pathname.split('/');
    switch (moduleName[2]) {
        case "LostOrStolenCard":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:ReportCardLostorStolen:Step2:Incorrect Address";
            s.linkTrackEvents = s.events = "event186";
            break;
    }
    s.linkTrackVars = "eVar27,eVar39,eVar41,eVar53,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar39 = customAnalyticsTag;
    s.eVar53 = "Incorrect Mailing Address?";
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//tagging function for CSS pages
//Page Name, Channel, eVar 27, eVar 41, Prop 41, Event 163, Event 164, Event 165, Event 166
function TagCSSPageName(visibleSection) {
    analyticsTag = GetPageNameTag();
    var hash = location.hash;
    switch (visibleSection) {
        case "AddAuthorizedUser":
            analyticsTag = analyticsTag + ":AddUserInformation:Step1";
            s.linkTrackEvents = s.events = "event163";
            break;
        case "divOrderCard":
            analyticsTag = analyticsTag + ":OrderCard:Step2";
            s.linkTrackEvents = s.events = "event164";
            break;
        case "divReview":
            analyticsTag = analyticsTag + ":Review:Step3";
            s.linkTrackEvents = s.events = "event165";
            break;
        case "divConfirmation":
            analyticsTag = analyticsTag + ":Confirmation:Step4";
            s.linkTrackEvents = s.events = "event166";
            break;
        case "OrderReplacementCard":
            if (hash == "#Step2") {
                analyticsTag = analyticsTag + ":OrderCard:Step2";
                s.linkTrackEvents = s.events = "event175";
            }
            else {
                analyticsTag = analyticsTag + ":SelectReason:Step1";
                s.linkTrackEvents = s.events = "event174";
            }
            break;
        case "divReplaceCardStep2":
            analyticsTag = analyticsTag + ":OrderCard:Step2";
            s.linkTrackEvents = s.events = "event175";
            break;
        case "divReplaceCardStep3":
            analyticsTag = analyticsTag + ":Review:Step3";
            s.linkTrackEvents = s.events = "event176";
            break;
        case "divReplaceCardStep4":
            analyticsTag = analyticsTag + ":Confirmation:Step4";
            s.linkTrackEvents = s.events = "event177";
            break;
        case "LostOrStolenCard":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1";
            s.linkTrackEvents = s.events = "event182";
            break;
        case "LostOrStolenCard2":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            s.linkTrackEvents = s.events = "event183";
            break;
        case "LostOrStolenCard3":
            var cardType = $("#divLostOrStolenCardStep3 .cardType").text();
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:Review:Step3";
            s.linkTrackEvents = s.events = "event184";
            s.eVar78 = cardType;
            break;
    }

    var channel = GetChannel();
    s.pageName = analyticsTag;
    s.channel = channel;
    s.eVar27 = analyticsTag;
    s.prop41 = s.eVar41 = APPID;
    //this is included to avoid previously captured eVar54(Dropdown selected value) tagging within this context of page tagging function
    s.eVar54 = undefined;
    var s_code = s.t();
    if (s_code)
        document.write("j" + s_code);
    return analyticsTag;
}

//tagging function for spend limit contextual help button, show link and select reasons link in CSS screens
//Page Name, Channel, eVar 39, evar 27, eVar 41, s.Prop 41, Event 63, eVar53
function TagCSSBackandShowBtnsandLinks(btnRefName) {
    var analyticsTag;
    var customAnalyticsTag;
    switch (btnRefName) {
        case "spendLimitsContextualHelp":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:AddUserInformation:Step1";
            customAnalyticsTag = "OLB:CardSelfService:AddUserInformation:Step1:SpendLimitContextualHelp";
            s.eVar53 = "SpendLimitContextualHelp";
            break;

        case "showSSNStep3":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:ShowLink";
            s.eVar53 = "Show";
            break;
        case "ReplaceDamagedCard":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:SelectReason:Step1:ReplaceDamagedCard"
            s.eVar53 = "Replace a Damaged Card";
            break;
        //On click of Report a Damaged Card in LostOrStolenCard screen
        case "LOSC-ReplaceDamagedCard":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:SelectReason:Step1:ReplaceDamagedCard"
            s.eVar53 = "Replace a Damaged Card";
            break;
        //On click of Report a Lost or Stolen Card in OrderReplacement screen
        case "ReportLostCard":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:SelectReason:Step1:ReportLostStolenCard"
            s.eVar53 = "Report a Lost or Stolen Card";
            break;
        //On click of Report a Lost or Stolen Card in LostOrStolenCard screen
        case "LostOrStolenCard":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1:LostorStolen"
            s.eVar53 = "Report a Lost or Stolen Card";
            break;
    }
    s.linkTrackVars = "eVar27,eVar39,eVar41,eVar53,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event 63";
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar39 = customAnalyticsTag;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//tagging function for all buttons in CSS screens
//Page Name, Channel, eVar 39, evar 27, eVar 41, s.Prop 41, s.Prop 30, Event 67, eVar53
function TagCSSBtns(btnRefName) {
    var analyticsTag;
    var customAnalyticsTag;
    switch (btnRefName) {
        case "ContinueInStep1":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:AddUserInformation:Step1";
            customAnalyticsTag = "OLB:CardSelfService:AddUserInformation:Step1:ContinueButton";
            s.eVar53 = "Continue";
            break;

        case "ContinueInStep2":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:ContinueButton";
            s.eVar53 = "Continue";
            break;

        case "SubmitInStep3":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:SubmitButton";
            s.eVar53 = "Submit";
            break;

        case "AddAnotherAuthUser":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Confirmation:Step4";
            customAnalyticsTag = "OLB:CardSelfService:Confirmation:Step4:AddAnotherAuthorizedUserButton";
            s.eVar53 = "AddAnotherAuthorizedUser";
            break;

        case "AAUStep4GoToAccountSummary":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Confirmation:Step4";
            customAnalyticsTag = "OLB:CardSelfService:Confirmation:Step4:BackToAccountSummaryButton";
            s.eVar53 = "BackToAccountSummary";
            break;

        case "CancelStep1":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:AddUserInformation:Step1";
            customAnalyticsTag = "OLB:CardSelfService:AddUserInformation:Step1:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "CancelStep2":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "CancelStep3":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "backBtnStep2":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:BackButton";
            s.eVar53 = "Back";
            break;

        case "backBtnStep3":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:BackButton";
            s.eVar53 = "Back";
            break;

        case "YesCancelModalBtnStep1":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:AddUserInformation:Step1";
            customAnalyticsTag = "OLB:CardSelfService:AddUserInformation:Step1:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "YesCancelModalBtnStep2":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "YesCancelModalBtnStep3":
            analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "ORCStep1Cancel":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:SelectReason:Step1:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "ORCStep1YesCancelModalBtn":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:SelectReason:Step1:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "ORCStep2Continue":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:ContinueButton";
            s.eVar53 = "Continue";
            break;

        case "ORCStep2Cancel":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "ORCStep2YesCancelModalBtn":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "ORCStep2Back":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:Step2:BackButton";
            s.eVar53 = "Back";
            break;

        case "ORCStep3Submit":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:SubmitButton";
            s.eVar53 = "Submit";
            break;

        case "ORCStep3Cancel":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "ORCStep3YesCancelModalBtn":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:YesCancelButton";
            s.eVar53 = "YesCancel";
            break;

        case "ORCStep3Back":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:Review:Step3:BackButton";
            s.eVar53 = "Back";
            break;

        case "ORCReplaceAnotherCard":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Confirmation:Step4";
            customAnalyticsTag = "OLB:CardSelfService:Confirmation:Step4:ReplaceAnotherCard";
            s.eVar53 = "ReplaceAnotherCard";
            break;

        case "btnStep4BacktoAcctSummary":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:Confirmation:Step4";
            customAnalyticsTag = "OLB:CardSelfService:Confirmation:Step4:BackToAccountSummaryButton";
            s.eVar53 = "BackToAccountSummary";
            break;

        case "LOSCStep1Cancel":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:SelectReason:Step1:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "LOSCStep1YesCancelMyOrderModalBtn":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:SelectReason:Step1";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:SelectReason:Step1:YesCancelButton";
            s.eVar53 = "Cancel My Order";
            break;

        case "LOSCBack":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:LostStolenCardInfo";
            customAnalyticsTag = "OLB:CardSelfService:LostStolenCardInfo:BackButton";
            s.eVar53 = "Back";
            break;

        case "btnStolenCardAccountSummary":
            analyticsTag = "OLB:CardSelfService:OrderReplacementCard:LostStolenCardInfo";
            customAnalyticsTag = "OLB:CardSelfService:LostStolenCardInfo:BackToAccountSummaryButton";
            s.eVar53 = "BackToAccountSummary";
            break;
        case "LOSCStep2Back":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:ReportCardLostorStolen:Step2:BackButton";
            s.eVar53 = "Back";
            break;

        case "LOSCStep2Continue":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:OrderCard:Step2:ContinueButton";
            s.eVar53 = "Continue";
            break;

        case "LOSCStep2Cancel":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:OrderCard:Step2:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "LOSCStep2YesCancelMyOrderModalBtn":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
            customAnalyticsTag = "OLB:CardSelfService:OrderCard:ReportCardLostorStolen:Step2:YesCancelButton";
            s.eVar53 = "Cancel My Order";
            break;
        case "LOSCStep3Submit":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:Review:Step3:SubmitButton";
            s.eVar53 = "Submit";
            break;

        case "LOSCStep3Cancel":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:Review:Step3:CancelButton";
            s.eVar53 = "Cancel";
            break;

        case "LOSCStep3YesCancelMyOrderModalBtn":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:Review:Step3:YesCancelButton";
            s.eVar53 = "Cancel My Order";
            break;

        case "LOSCStep3Back":
            analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:Review:Step3";
            customAnalyticsTag = "OLB:CardSelfService:ReportCardLostorStolen:Review:Step3:BackButton";
            s.eVar53 = "Back";
            break;
    }


    s.linkTrackVars = "eVar27,eVar39,prop30,eVar41,eVar53,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event 67";
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar39 = s.prop30 = customAnalyticsTag;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//tagging function for credit card drop down field in CSS screen
//"Page Name, Channel, Event 95, event 67, eVar53,  evar 27, eVar54, s.Prop 30, e.Var 39, e.Var 41, s.Prop 41, "

function TagAddUserInfoCreditCardDDL(SelectedCC) {
    var CCName = SelectedCC;
    var analyticsTag = "OLB:CardSelfService:AddAuthorizedUser:AddUserInformation:Step1";
    var analyticsTag1 = "OLB:CardSelfService:AddUserInformation:Step1:CreditCardDropdown";
    s.linkTrackVars = "eVar39,prop30,eVar41,eVar53,eVar54,prop41,events,event95, channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event67, event95";
    s.eVar27 = analyticsTag;
    s.eVar39 = s.prop30 = analyticsTag1;
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "CreditCardDropdown";
    s.eVar54 = CCName;
    s.tl(this, "o", analyticsTag1);
    s.manageVars('clearVars', s.linkTrackVars, s.linkTrackEvents, 1);
}

//tagging function for card drop down field in Order or Replacement Card Screen Step2
//"Page Name, Channel, Event 95, event 67, eVar53,  evar 27, eVar54, s.Prop 30, e.Var 39, e.Var 41, s.Prop 41, "
function TagOrderorReplacementCardDDL(SelectedCard) {
    var selCard = SelectedCard;
    var analyticsTag = "OLB:CardSelfService:OrderReplacementCard:OrderCard:Step2";
    var analyticsTag1 = "OLB:CardSelfService:OrderCard:Step2:CardDropdown";
    s.linkTrackVars = "eVar39,prop30,eVar41,eVar53,eVar54,prop41,events,event95, channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event67, event95";
    s.eVar27 = analyticsTag;
    s.eVar39 = s.prop30 = analyticsTag1;
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "CardDropdown";
    s.eVar54 = selCard;
    s.tl(this, "o", analyticsTag1);
    s.manageVars('clearVars', s.linkTrackVars, s.linkTrackEvents, 1);
}

//tagging function for card drop down field in Lost or Stolen Card Screen Step2
//"Page Name, Channel, Event 95, event 67, eVar53,  evar 27, eVar54, s.Prop 30, e.Var 39, e.Var 41, s.Prop 41, "
function TagLostOrStolenCardDDL(SelectedCard) {
    var selCard = SelectedCard;
    var analyticsTag = "OLB:CardSelfService:ReportLostOrStolen:OrderCard:Step2";
    var analyticsTag1 = "OLB:CardSelfService:ReportCardLostorStolen:OrderCard:Step2:CardDropdown";
    s.linkTrackVars = "eVar39,prop30,eVar41,eVar53,eVar54,prop41,events,event95, channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event67, event95";
    s.eVar27 = analyticsTag;
    s.eVar39 = s.prop30 = analyticsTag1;
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "CardDropdown";
    s.eVar54 = selCard;
    s.tl(this, "o", analyticsTag1);
    s.manageVars('clearVars', s.linkTrackVars, s.linkTrackEvents, 1);
}

function TagPageName() {
    var analyticsTag;
    if (HasSpecialRequirement("PageName"))
        analyticsTag = GetPageNameTagForSpecialRequirement();
    else
        analyticsTag = GetPageNameTag();
    var toLowerAnalyticsTag = analyticsTag.toLowerCase();
    if (toLowerAnalyticsTag.indexOf("signon") > 0) {
        analyticsTag = "OLB:Login:Index";
    }
    if (analyticsTag != "OLB:Accounts:ClearedChecksPDF" && analyticsTag.indexOf(".aspx") < 0) {
        if (analyticsTag != null && $.inArray(analyticsTag, List) == -1) {
            var channel = GetChannel();
            if (analyticsTag == "OLB:Payments:PayBill:Step1") {
                if (($("#hdnIsPilotUser").length > 0) && ($("#hdnIsPilotUser").val() == "True")) {
                    analyticsTag = analyticsTag + "a";
                }
            }

            s.eVar27 = analyticsTag;
            s.prop41 = s.eVar41 = APPID;
            if ((analyticsTag == "OLB:Accounts:AccountSummary")) {
                if (channel == "Retail") {
                    var webID = $("#WebIDR").val();
                }
                else if (channel == "Business" || channel == "Business-SubUser") {
                    var webID = $("#WebIDB").val();
                }
                var authID = $("#AuthID").val();
                s.eVar81 = authID;
                s.eVar82 = webID;
            }
            s.pageName = analyticsTag;
            s.channel = channel;
            var s_code = s.t();
            if (s_code) document.write(s_code);
        }
    }
}

function GetPageNameTag() {
    var analyticsTag;
    if ($("#divIntroBoxLayout h2").html() == null) {
        //Create the tag from page url
        var urlPathArray = window.location.pathname.split('/');
        if (urlPathArray[1] != null && urlPathArray[1] != "" && urlPathArray[2] != "" && urlPathArray[2] != null && urlPathArray[2] != undefined) {
            if (urlPathArray[1].toLowerCase() == "login") {
                urlPathArray[1] = "Login";
            }
            if (urlPathArray[2].toLowerCase() == "index" || urlPathArray[2] == "undefined") {
                urlPathArray[2] = "Index";
            }
            analyticsTag = "OLB:" + urlPathArray[1] + ":" + urlPathArray[2];
        }
        else {
            analyticsTag = "OLB:Login:Index"; //For the login page
        }
    }
    else {
        //The page has a multi step wizard. So tag the first step in the wizard.
        analyticsTag = GetWizardStepTag();
    }
    if ($("#hdnSSOError").val() != null && $("#hdnSSOError").val() == "True") {
        analyticsTag = $("#hdnProductCode").val() != null && $("#hdnProductCode").val() == "MTG" ? "OLB:MortgageSSOEnrollment" : "OLB:SSOEnrollment";
        urlPathArray[2] = (urlPathArray[2] == "SSOEnroll") ? "Enroll" : urlPathArray[2];
        analyticsTag = analyticsTag + ":" + urlPathArray[2] + ":Step 1";
    }
    console.log(analyticsTag);
    if (analyticsTag.indexOf("AccountAndLoanPayments") > 0) {
        $('#pageName').attr('value', analyticsTag);
    }
    return analyticsTag;
}

function TagCampaignAd() {
    var analyticsTag;
    if (HasSpecialRequirement("PageName"))
        analyticsTag = GetPageNameTagForSpecialRequirement();
    else
        analyticsTag = GetPageNameTag();

    if (analyticsTag != null) {
        analyticsTag = analyticsTag + ":CM";
        s.linkTrackVars = "eVar1,eVar30,eVar41,eVar72,prop41,channel";
        s.eVar1 = analyticsTag;
        s.eVar72 = analyticsTag;
        s.eVar30 = analyticsTag;
        s.eVar41 = s.prop41 = APPID;
        s.channel = GetChannel();
        s.tl(this, "o", analyticsTag);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    }
}

function TagWizardStep(stepNumber) {
    var urlPathArray = window.location.pathname.split('/'); //Splitting the url to get the controller and action
    var analyticsTag = "OLB:" + urlPathArray[1] + ":" + urlPathArray[2] + ":Step" + stepNumber;
    var channel = GetChannel();
    s.pageName = analyticsTag;
    s.eVar27 = analyticsTag;
    s.prop41 = s.eVar41 = APPID;
    s.channel = channel;
    var s_code = s.t(); if (s_code) document.write(s_code);
}


function GetChannel() {
    var userType = $('#UserType').val();
    var channel = (userType != null) ? userType : "Anonymous";
    switch (channel) {
        case "R":
            return "Retail";
        case "B":
            var userRole = $('#userRole').val();
            if (userRole == "S") {
                return "Business-SubUser";
            }
            else {
                return "Business";
            }
        case "C":
            return "Commercial";
        case "A":
        default:
            return "Anonymous";
    }
}
function GetWizardStepTag() {
    var isAddAPayeePage = GetCurrentPage() == "Payments:AddAPayee" ? true : false;
    var isEditAPayeePage = GetCurrentPage() == "Payments:EditAPayee" ? true : false;
    if (isAddAPayeePage || isEditAPayeePage) {
        GetTagList();
    }
    var urlPathArray = window.location.pathname.split('/'); //Splitting the url to get the controller and action
    var stepNum = $("#divIntroBoxLayout h2 span").text(); //Extracting the step number

    // Special handling for self enrollment 3rd and 4th steps
    var analyticsTag = ""
    if (urlPathArray[1] == "Enrollment") {
        if (stepNum == "1")
            urlPathArray[2] = "Select";
        else if (stepNum == "2")
            urlPathArray[2] = "Agreement";
        else if (stepNum == "3")
            urlPathArray[2] = "Details";
        else if (stepNum == "4")
            urlPathArray[2] = "Review";
        else if (stepNum == "5")
            urlPathArray[2] = "Confirmation";

        analyticsTag = urlPathArray[1] + "/" + urlPathArray[2]
    }
    else {
        analyticsTag = "OLB:" + urlPathArray[1] + ":" + urlPathArray[2] + ":Step" + stepNum;
    }

    if ($("#hdnIsSsoEnrollment").val() != null && $("#hdnIsSsoEnrollment").val() == "True") {
        analyticsTag = $("#hdnProductCode").val() != null && $("#hdnProductCode").val() == "MTG" ? "OLB:MortgageSSOEnrollment" : "OLB:SSOEnrollment";
        urlPathArray[2] = (urlPathArray[2] == "SSOEnroll") ? "Enroll" : urlPathArray[2];
        analyticsTag = analyticsTag + ":" + urlPathArray[2] + ":Step" + stepNum;
    }

    if (isAddAPayeePage || isEditAPayeePage) {
        AddTagList(analyticsTag);
    }
    return analyticsTag;
}


//Tag the tab click
function TagTabClick(tabName) {
    var analyticsTag;
    if (HasSpecialRequirement("TabClick")) {
        analyticsTag = GetTabClickTagForSpecialRequirement(tabName);
    }
    else {
        analyticsTag = GetPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(tabName);
    }

    if (analyticsTag != null) {
        var isAccDetailsPage = GetCurrentPage() == "Accounts:AccountDetails" ? true : false;
        if (isAccDetailsPage) {
            s.pageName = analyticsTag;
        }
        s.linkTrackVars = "eVar34,prop34,eVar41,prop41,events,channel";
        s.linkTrackEvents = s.events = "event61";
        s.eVar34 = s.prop34 = analyticsTag;
        s.eVar41 = s.prop41 = APPID;
        s.channel = GetChannel();
        s.tl(this, 'o', analyticsTag);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    }
}

function TagView(viewName) {
    var analyticsTag;
    if (HasSpecialRequirement("View"))
        analyticsTag = GetAcctSummaryViewTagForBiz(viewName);
    else
        analyticsTag = GetPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(viewName);

    if (analyticsTag != null) {
        s.linkTrackVars = "eVar35,prop35,eVar41,prop41,events,channel";
        s.linkTrackEvents = s.events = "event62";
        s.eVar35 = s.prop35 = analyticsTag;
        s.eVar41 = s.prop41 = APPID;
        s.channel = GetChannel();
        s.tl(this, "o", analyticsTag);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    }
}

function TagLightBox(analyticsTag) {
    s.linkTrackVars = "eVar27,eVar41,sprop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar1 = s.prop1 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagCloseLightBox(analyticsTag) {
    s.linkTrackVars = "eVar27,eVar53,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "CloseLightBox";
    s.eVar27 = s.prop41 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = analyticsTag;
    s.tl(this, "o", 'CloseLightbox');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagCloseErrorLightBox(analyticsTag) {
    var analyticsTag;
    s.linkTrackVars = "eVar27,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Estatement:Enrollment:Error";
    s.linkTrackEvents = s.events = "event67";
    s.eVar27 = s.prop41 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Estatement:Enrollment:Error";
    s.tl(this, "o", 'CloseLightbox');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagRemindMeLater(analyticsTag) {
    var analyticsTag;
    s.linkTrackVars = "prop30,eVar53,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "RemindMeLater";
    s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.tl(this, "o", 'RemindMeLater');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagGoElectronicCheckbox(analyticsTag) {
    var analyticsTag;
    s.linkTrackVars = "eVar27,eVar53,prop30,eVar39,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.eVar53 = "GoElectronic";
    s.eVar27 = s.prop41 = analyticsTag;
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.tl(this, "o", 'GoElectronic');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagDSACheckBox(analytics) {
    var analyticsTag;
    s.linkTrackVars = "eVar27,prop30,eVar39,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Estatement:Enrollment:LightBox";
    s.linkTrackEvents = s.events = "event194";
    s.eVar27 = s.prop41 = analyticsTag;
    s.prop30 = analyticsTag;
    s.eVar39 = "DSA";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Estatement:Enrollment:LightBox";
    s.tl(this, "o", 'DSA');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function SaveandContinueButtonAnalytics(analyticsTag) {
    s.linkTrackVars = "prop30,eVar53,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "SaveAndContinue";
    s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Campaign:LoginIntercept:EstatementEnrollment";
    s.tl(this, "o", 'SaveAndContinue');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

// Confirm Model function
function TagAccountbtn(analyticsTag) {
    s.linkTrackVars = "prop30,eVar53,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "ConfirmationAccountSummary";
    s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = analyticsTag;
    s.tl(this, "o", 'ConfirmationAccountSummary');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//Error Model function
function TagAccountBtnErr(analyticsTag) {
    s.linkTrackVars = "prop30,eVar53,eVar41,prop41,events,channel";
    analyticsTag = "OLB:Estatement:Enrollment:Error";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "AccountSummary";
    s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = "OLB:Estatement:Enrollment:Error";
    s.tl(this, "o", 'AccountSummary');
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
//Tag the UpdateDelivery Settings Button in the Confirmation modal

function TagUpdatebtn(analyticsTag) {
    s.linkTrackVars = "prop30,eVar53,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "ConfirmationUpdateDeliverySettings";
    s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = analyticsTag;
    s.tl(this, "o", "ConfirmationUpdateDeliverySettings");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagNasLinks(analyticsTag) {
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagHelpActiveView() {
    s.linkTrackVars = "events,eVar41,prop41,channel";
    s.linkTrackEvents = s.events = "event64";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", "OLB Help Active View"); //The current page will be in eVar27.
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagSuccessSearchTerm(searchTerm) {
    s.linkTrackVars = "events,eVar41,prop41,prop4,eVar4,prop5,channel";
    s.linkTrackEvents = s.events = "event18";
    s.prop4 = s.eVar4 = searchTerm;
    s.prop5 = "successful";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, 'o', "Search");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagFailedSearchTerm(searchTerm) {
    s.linkTrackVars = "events,eVar41,prop41,prop4,eVar4,prop5,channel";
    s.linkTrackEvents = s.events = "event18,event19";
    s.prop4 = s.eVar4 = searchTerm;
    s.prop5 = "failed";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, 'o', "Search");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

//Send the event tag to Sitecatalyst
function TagEvent(eventTag) {
    //alert(eventTag);
    s.linkTrackVars = 'events,eVar34,channel'; //New
    s.linkTrackEvents = s.events = 'event61';
    s.eVar34 = eventTag;
    s.channel = GetChannel();
    s.tl(this, 'o', eventTag);
}

function TagTimeOutReminder() {
    s.linkTrackVars = "eVar37,prop28,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event65";
    s.eVar37 = s.prop28 = "OLB:LogOut:usertimedout";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", "OLB User TimedOut");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagPDFView(analyticsTag) {
    s.linkTrackVars = "eVar38,prop29,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event66";
    s.eVar38 = s.prop29 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagClearedChecks(pageName) {
    GetTagList();
    var analyticsTag = GetPageNameTag() + ":" + pageName;
    AddTagList(analyticsTag);
    if ($.inArray(analyticsTag, List) == -1) {
        s.pageName = "OLB:Accounts:" + pageName;
        s.linkTrackVars = "eVar38,prop29,eVar41,prop41,events,channel";
        s.linkTrackEvents = s.events = "event66";
        s.eVar38 = s.prop29 = analyticsTag;
        s.eVar41 = s.prop41 = APPID;
        s.channel = GetChannel();
        s.tl(this, "o", analyticsTag);
        s.manageVars('clearVars', s.linkTrackVars, 1);
    }
}

function TagPDFViewStatements(analyticsTag) {
    s.linkTrackVars = "eVar39,eVar41,prop30,prop41,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagKycRadioInfo(analyticsTag) {
    s.linkTrackVars = "eVar45,prop71,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event75";
    s.eVar45 = s.prop71 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
    analyticsTag = GetPageNameTag() + ":Continue";
    TagKycInfoOnContinue(analyticsTag);
}

function TagKycDdlInfo(analyticsTag) {
    s.linkTrackVars = "eVar47,prop54,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event95";
    s.eVar47 = s.prop54 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
    analyticsTag = GetPageNameTag() + ":Continue";
    TagKycInfoOnContinue(analyticsTag);
}

function TagKycInfoOnContinue(analyticsTag) {
    s.linkTrackVars = "eVar39,prop30,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function HasSpecialRequirement(tagType) {
    switch (GetCurrentPage()) {
        case "Accounts:AccountDetails":
            switch (tagType) {
                case "PageName":
                    return true;
                    break;
                case "TabClick":
                    return true;
                    break;
            }
            break;
        case "Accounts:AccountSummary":
            switch (tagType) {
                case "View":
                case "TabClick":
                    var channel = GetChannel();
                    if (channel == "Business") return true;
                    break;
            }
            break;
        case "ExternalAccountLoan:MakeLoanPayment":
            return true;
            break;
        case "Payments:AddAPayee":
            GetTagList();
            return false;
            break;
    }
    return false;
}
function GetTagList() {
    $.ajax({
        url: "/payments/GetTagList",
        type: "POST",
        cache: true,
        async: false,
        success: function (tags) {
            if (tags == "") {
                AddTagList('AddAPayee');
            } else {
                List = tags;
            }
        }
    });
}

function AddTagList(tagName) {
    $.ajax({
        url: "/payments/AddTagList",
        type: "POST",
        cache: true,
        async: false,
        data: {
            tagName: tagName
        },
        success: function () {
        }
    });
}
function GetPageNameTagForSpecialRequirement() {
    var pageTag;
    switch (GetCurrentPage()) {
        case "Accounts:AccountDetails":
            pageTag = GetAcctDetailsPageNameTag();
            break;
        case "ExternalAccountLoan:MakeLoanPayment":
            pageTag = GetPageNameTag() + ":Step1";
            break;
    }
    return pageTag;
}

function GetTabClickTagForSpecialRequirement(tabName) {
    var eventTag;
    switch (GetCurrentPage()) {
        case "Accounts:AccountDetails":
            eventTag = GetAcctDetailTabClickTag(tabName);
            break;
        case "Accounts:AccountSummary":
            eventTag = GetAcctSummaryTabClickTagForBiz(tabName);
            break;
    }
    return eventTag;
}

function GetViewTagForSpecialRequirement(viewName) {
    var viewTag;
    switch (GetCurrentPage()) {
        case "Accounts:AccountSummary":
            viewTag = GetAcctSummaryViewTagForBiz(viewName);
            break;
    }
    return viewTag;
}

function GetCurrentPage() {
    var urlPathArray = window.location.pathname.split('/'); //Splitting the url to get the controller and action
    var currentPage = urlPathArray[1] + ":" + urlPathArray[2];
    return currentPage;
}

function RemoveNewLinesAndWhiteSpaces(text) {
    var currentstr = "";
    if (text != null) {
        text = text.replace(/[\n\r]+/g, ''); //removes carriage returns/line breaks
        var str = text.split(' ');
        for (var i = 0; i < str.length; i++) {
            currentstr = currentstr + ToCamelCase(str[i]);
        }
        return currentstr;
    }
    else {
        return "";
    }
}

function GetStepTagAfterSubmit() {
    var urlPathArray = window.location.pathname.split('/'); //Splitting the url to get the controller and action
    var stepNum = $("#divIntroBoxLayout h2 span").text(); //Extracting the step number
    var nextStep = parseInt(stepNum) + 1;
    var analyticsTag = "OLB:" + urlPathArray[1] + ":" + urlPathArray[2] + ":Step" + nextStep;
    return analyticsTag;
}

function TagAfterSubmit() {
    var analyticsTag = GetStepTagAfterSubmit();
    if (analyticsTag != null) {
        var channel = GetChannel();
        s.pageName = analyticsTag;
        s.eVar27 = analyticsTag;
        s.prop41 = s.eVar41 = APPID;
        s.channel = channel;
        var s_code = s.t(); if (s_code) document.write(s_code);
    }
}

/**********************Special requirement for AccountDetail*************************/
//Appending the product code to the tag
function GetAcctDetailsPageNameTag() {
    var acctDetailPageTag = GetPageNameTag() + ":" + GetAccountProductCode();
    return acctDetailPageTag;
}

//Tab click should have the product name in the tag
function GetAcctDetailTabClickTag(tabName) {
    var acctDetailTabClickTag = GetAcctDetailsPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(tabName);
    return acctDetailTabClickTag;
}

//Get the product code from the accounts drop down list in the account detail page
function GetAccountProductCode() {
    var selValue = $('#ddlAccountNames').val();
    var startIndex = selValue.indexOf(',') + 1;
    var prodCode = selValue.substr(startIndex, 3);
    return prodCode;
}

function closeParent() {
    $("#divLightBoxMyShortcuts").dialog("close");
}

/**********************Special requirement for AccountDetail End*********************/

/**********************Special requirement for AccountSummary*************************/

function GetAcctSummaryViewTagForBiz(viewName) {
    var activeTabText = $('.ui-tabs > ul > li.ui-tabs-active > a').text();
    var acctSummaryViewTag = GetPageNameTag() + ":" + (activeTabText ? RemoveNewLinesAndWhiteSpaces(activeTabText) + ":" : "") + RemoveNewLinesAndWhiteSpaces(viewName);
    return acctSummaryViewTag;
}

function GetAcctSummaryTabClickTagForBiz(tabName) {
    var acctSummaryTabClickTag = GetPageNameTag() + ":" + RemoveNewLinesAndWhiteSpaces(tabName) + ":" + RemoveNewLinesAndWhiteSpaces($('.view-option >a.view-options-selected').text());
    return acctSummaryTabClickTag;
}

function SetFocusOnError() {
    var errField = $('.input-validation-error:first').get(0);
    if (errField)
        errField.focus();
}


/**********************Special requirement for AccountSummary End*********************/
/**********************String to CamelCase*****************************************/
function ToCamelCase(tabName) {
    return tabName.replace(tabName.charAt(0), tabName.charAt(0).toUpperCase());
}

/**************************String to CamelCase End***********************************/

function MTBEnterButtonClick(buttonName, divName, preventDefault) {
    var ctrlType1 = "#" + divName + " input[type='text']";
    var ctrlType2 = "#" + divName + " input[type='password']";
    var ctrlType3 = "#" + divName + " select";
    var ctrlType4 = "#" + divName + " input[type='radio']";
    var ctrlType5 = "#" + divName + " input[type='checkbox']";

    /*  commented keydown and Attached Keypress to support FF and Opera also Defect# 2324
    $(ctrlType1).keydown(function (event) {
    SimulateClick(buttonName, event,preventDefault);
    });
   
    $(ctrlType2).keydown(function (event) {
    SimulateClick(buttonName, event,preventDefault);
    });
   
    $(ctrlType3).keydown(function (event) {
    SimulateClick(buttonName, event,preventDefault);
    });
   
    $(ctrlType4).keydown(function (event) {
    SimulateClick(buttonName, event,preventDefault);
    });
   
    $(ctrlType5).keydown(function (event) {
    SimulateClick(buttonName, event,preventDefault);
    });
    */
    $(ctrlType1).keypress(function (event) {
        SimulateClick(buttonName, event, preventDefault);
    });
    $(ctrlType2).keypress(function (event) {
        SimulateClick(buttonName, event, preventDefault);
    });
    $(ctrlType3).keypress(function (event) {
        SimulateClick(buttonName, event, preventDefault);
    });
    $(ctrlType4).keypress(function (event) {
        SimulateClick(buttonName, event, preventDefault);
    });
    $(ctrlType5).keypress(function (event) {
        SimulateClick(buttonName, event, preventDefault);
    });
}

function SimulateClick(buttonName, event, preventDefault) {
    var key;
    if (window.event)
        key = window.event.keyCode;     //IE
    else
        key = event.which; //firefox
    if (key == 13) {
        var btn = document.getElementById(buttonName);
        if (btn != null) { //If we find the button click it
            btn.click();
            event.keyCode = 0;
            event.stopImmediatePropagation();
            if (preventDefault) {
                event.preventDefault();
                event.stopPropagation();
            }
            //            if (typeof event.preventDefault() != "undefined") {
            //                event.preventDefault();
            //            }
            //            else {
            //                event.cancelBubble = true;
            //            }
        }
    }
}


function PayBillShowHideButton() {
    var analyticsTag = "OLB:Payments:PayBill:Step1:ShowHidePayeeCart";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event 67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function PayBillClearCartAnalytics() {
    var analyticsTag = "OLB:Payments:PayBill:Step1:ClearCart";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function PayBillSearchButtonAnalytics() {
    var analyticsTag = "OLB:Payments:PayBill:Step1:Search";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function PayBillSuccessSearchTerm(searchTerm) {
    s.linkTrackVars = "events,eVar41,prop41,prop4,eVar4,prop5,channel";
    s.linkTrackEvents = s.events = "event18";
    s.prop4 = s.eVar4 = searchTerm;
    s.prop5 = "Pass";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, 'o', "Search");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function PayBillTagFailedSearchTerm(searchTerm) {
    s.linkTrackVars = "events,eVar41,prop41,prop4,eVar4,prop5,channel";
    s.linkTrackEvents = s.events = "event18,event19";
    s.prop4 = s.eVar4 = searchTerm;
    s.prop5 = "Fail";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, 'o', "Search");
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function PayBillsPayeeDetailsIcon() {
    var analyticsTag = "OLB:Payments:PayBill:Step1:PayeeDetail";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.pageName = analyticsTag;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function AddAPayeSearchButtonAnalytics() {
    var analyticsTag = "OLB:Payments:AddAPayee:Step1:Search";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function MortgageInfoAnalytics(TagName) {
    var analyticsTag = GetPageNameTag();
    if (TagName == null || TagName == "" || TagName == undefined) {
        switch (analyticsTag) {
            case "OLB:CustomerService:SiteMap":
                analyticsTag = "OLB:CustomerService:SiteMap:MyMortgageInfo";
                break;
            case "OLB:Statements:DeliverySettings":
                analyticsTag = "OLB:Statements:DeliverySettings:MyMortgageInfo";
                break;
            default:
                analyticsTag = "OLB:MyShortcuts:LoginToMyMortgageInfo";
        }
    }
    else {
        analyticsTag = TagName;
    }
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEstatementCheckBoxSelection(isOpted) {
    var analyticsTag = $("#hdnProductCode").val() != null && $("#hdnProductCode").val() == "MTG" ? "OLB:MortgageSSOEnrollment:Step2"
        : "OLB:SSOEnrollment:Step2"
    analyticsTag = analyticsTag + (isOpted ? ":EstatementCheckbox" : "");
    s.linkTrackVars = "eVar45,prop71,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event75";
    s.eVar45 = s.prop71 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEstatementSubmitSelection(isOpted) {
    var analyticsTag = $("#hdnProductCode").val() != null && $("#hdnProductCode").val() == "MTG" ? "OLB:MortgageSSOEnrollment:Confirmation"
        : "OLB:SSOEnrollment:Confirmation"
    analyticsTag = analyticsTag + (isOpted ? "withESDD:Step4" : ":Step4");
    s.linkTrackVars = "eVar27,eVar41, prop41, events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    //s.linkTrackEvents = s.events = "event67";
    s.eVar27 = analyticsTag;
    s.prop41 = s.eVar41 = APPID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}


//*********************************Analytics for Remediation screen*******************************
function TagbtnNext(analyticsTag) {
    var analyticsTag1 = "OLB:CustomerIdentification:Next";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag1;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag1);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagCustAddressRadBtn(analyticsTag) {
    var analyticsTag2 = "OLB:CustomerIdentification:Step1:NameDOBAddressEmployerIncorrect";
    s.linkTrackVars = "eVar45,prop71,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event75";
    s.eVar45 = s.prop71 = analyticsTag2;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag2);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagNonresidentAlienInfo(analyticsTag) {
    var analyticsTag3 = "OLB:CustomerIdentification:Step2:NonresidentAlien";
    s.linkTrackVars = "eVar41,eVar54,prop41,prop47,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event95";
    //s.eVar47 = s.prop54 = analyticsTag3;
    s.eVar54 = s.prop54 = analyticsTag3;
    s.eVar47 = s.prop47 = analyticsTag3;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsTag3);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagbtnRemindMeLater(analyticsTag) {
    var analyticsTag4 = "OLB:CustomerIdentification:Step1:RemindMeLater";
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsTag4;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag4);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}



//****************************************************************************************************

//*********************************Analytics for Account Details & Manage Credit Card Spend Limits *******************************
function dropdownAnalytics(analyticsCustomTag) {
    var analyticsTag = GetPageNameTag();
    s.linkTrackVars = "eVar41,eVar54,prop41,prop47,events,channel";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.linkTrackEvents = s.events = "event95";
    s.eVar54 = s.prop54 = analyticsCustomTag;
    s.eVar47 = s.prop47 = analyticsCustomTag;
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, "o", analyticsCustomTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function SaveButtonAnalytics(analyticsCustomTag) {
    var analyticsTag = GetPageNameTag();
    s.linkTrackVars = "eVar39,prop30,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event67";
    s.eVar39 = s.prop30 = analyticsCustomTag;
    s.eVar41 = s.prop41 = APPID;
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsCustomTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagSaveChangesButton(analyticsTag) {
    var analyticsCustomTag = "OLB:Accounts:AccountDetails:SpendLimitsTab:SaveChanges";
    SaveButtonAnalytics(analyticsCustomTag);
}

function TagManageCreditCardSaveChangesButton(analyticsTag) {
    var analyticsCustomTag = "OLB:CustomerService:ManageCreditCardSpendLimits:SaveChanges";
    SaveButtonAnalytics(analyticsCustomTag);
}

function TagBCCCardDropDown(analyticsTag) {
    var analyticsCustomTag = "OLB:Accounts:AccountDetails:FilterCardsDropdown";
    dropdownAnalytics(analyticsCustomTag);
}

//****************************************************************************************************

/*************************Web Analytics End*****************************************/



function TagDSALightBox(ElementName) {
    var analyticsTag = "OLB:PFM:EnrollPFMTAndCLightBox";
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = ElementName;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagPFMServiceTile(ElementName) {
    var analyticsTag = "OLB:Services:ServicesHome";
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = ElementName;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagUnenrollLightBoxVisit() {
    var analyticsTag = "OLB:PFM:UnenrollmentConfirmationLightBox";
    s.linkTrackVars = "pageName,eVar36,eVar27,prop36,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event63";
    s.pageName = analyticsTag;
    s.eVar27 = analyticsTag;
    s.eVar36 = s.prop36 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagPFMUnEnrollBtns(ElementName) {
    var analyticsTag = "OLB:PFM:UnenrollmentConfirmationLightBox";
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = ElementName;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagResponsiveLogOut(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "LogOut";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagResponsiveBack(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "Back";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagPFMMegaMenu() {
    var analyticsTag = "";
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event102";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "PFMMegaMenu";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagPFMSnakeBar(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event52";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "PFMSnakebar";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagEnrollPageVisit(analyticsTag) {
    s.linkTrackVars = "pageName,eVar27,eVar41,prop41,eVar81,eVar82,channel";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    var channel = GetChannel();
    s.channel = channel;
    if (channel == "Retail") {
        var webID = $("#WebIDR").val();
    }
    else if (channel == "Business" || channel == "Business-SubUser") {
        var webID = $("#WebIDB").val();
    }
    var authID = $("#AuthID").val();
    s.eVar81 = authID;
    s.eVar82 = webID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagDSALightBoxVisit(analyticsTag) {
    s.linkTrackVars = "pageName,eVar36,eVar27,prop36,eVar41,prop41,events,channel";
    s.linkTrackEvents = s.events = "event63";
    s.pageName = analyticsTag;
    s.eVar27 = s.prop41 = analyticsTag;
    s.eVar36 = s.prop36 = "OLB:PFM:EnrollPFMTAndCLightBox";
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagMyMoneyDashboard(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "MyMoneyDashboard";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagNonMnTAgreementLink(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "NonMandTAccessAgreementLink";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagLaunchDashboard(analyticsTag) {
    s.linkTrackVars = "pageName,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.linkTrackEvents = s.events = "event67";
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = "LaunchDashboard";
    s.channel = GetChannel();
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagLearnMorePageVisit(analyticsTag) {
    s.linkTrackVars = "pageName,eVar27,eVar81,eVar82,eVar41,prop41,channel";
    s.eVar27 = s.prop41 = analyticsTag;
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    var channel = GetChannel();
    s.channel = channel;
    if (channel == "Retail") {
        var webID = $("#WebIDR").val();
    }
    else if (channel == "Business" || channel == "Business-SubUser") {
        var webID = $("#WebIDB").val();
    }
    var authID = $("#AuthID").val();
    s.eVar81 = authID;
    s.eVar82 = webID;

    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}

function TagMasterWidgetPageVisit(analyticsTag) {
    s.linkTrackVars = "pageName,eVar27,eVar81,eVar82,eVar41,prop41,channel";
    s.eVar27 = analyticsTag;
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    var channel = GetChannel();
    s.channel = channel;
    if (channel == "Retail") {
        var webID = $("#WebIDR").val();
    }
    else if (channel == "Business" || channel == "Business-SubUser") {
        var webID = $("#WebIDB").val();
    }
    var authID = $("#AuthID").val();
    s.eVar81 = authID;
    s.eVar82 = webID;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagActionUnavailable() {
    var analyticsTag = "OLB:PFM:ActionUnavailable:SystemError";
    s.linkTrackVars = "pageName,eVar27,prop30,eVar41,prop41,events,channel,eVar53";
    s.pageName = analyticsTag;
    s.channel = GetChannel();
    s.eVar41 = s.prop41 = APPID;
    s.linkTrackEvents = s.events = "event189";
    s.eVar27 = s.prop30 = analyticsTag;
    s.tl(this, "o", analyticsTag);
    s.manageVars('clearVars', s.linkTrackVars, 1);
}
function TagCCRewardsButtonClick(analyticsTag, customLink) {
    s.linkTrackVars = 'pageName,channel,eVar41,prop41,event67,eVar53';
    s.linkTrackEvents = s.events = 'event67';
    s.pageName = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar53 = customLink;
    s.channel = GetChannel();
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
}

function TagCCRewardsError(analyticsTag, errorType) {
    s.linkTrackVars = 'pageName,channel,eVar27,event188,prop30,eVar41,prop41,eVar16';
    s.pageName = s.eVar27 = s.prop30 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar16 = errorType;
    s.linkTrackEvents = s.events = 'event188';
    s.channel = GetChannel();
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
}

function TagAlertsBtn(customLink) {
    s.linkTrackVars = "pageName,channel,eVar39,eVar27,eVar41,prop41,prop30,event67,eVar53";
    analyticsTag = GetPageNameTag();
    s.linkTrackEvents = s.events = "event67";
    s.channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.eVar39 = analyticsTag;
    s.prop30 = analyticsTag;
    s.eVar53 = customLink;
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
}

$(document).on('click', '.js-radioPrimaryBtn', function () {
    s.linkTrackVars = "pageName,channel,eVar27,eVar41,prop41,eVar53,eVar71";
    analyticsTag = GetPageNameTag();
    s.eVar41 = s.prop41 = APPID;
    s.channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.eVar53 = "PrimaryMobileDeviceYes";
    s.eVar71 = "PrimaryMobileDeviceYes";
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
});

$(document).on('click', '[data_analyticshook="dndcancel"]', function () {
    s.linkTrackVars = "pageName,channel,eVar27,eVar41,prop41,eVar67,eVar53";
    analyticsTag = GetPageNameTag();
    s.channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "CancelChanges";
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
});

$(document).on('click', '[data_analyticshook="dndsave"]', function () {
    s.linkTrackVars = "pageName,channel,eVar27,eVar41,prop41,eVar67,eVar53";
    analyticsTag = GetPageNameTag();
    s.channel = GetChannel();
    s.eVar27 = analyticsTag;
    s.eVar41 = s.prop41 = APPID;
    s.linkTrackEvents = s.events = "event67";
    s.eVar53 = "SaveChanges";
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
});


//due to requirements confusion, we now fire a nav event for every link in megamenu
$(document).on('click', '#mMenu a', function (e) {
    //force the analytics callback to prevent navigation until the analytics call returns as hard as possible.
    e.preventDefault();
    s.useForcedLinkTracking = false;
    s.forcedLinkTrackingTimeout = 500;

    var analyticsTag = GetPageNameTag();
    s.linkTrackVars = 'pageName,channel,eVar41,eVar53,eVar113,prop30,prop41,Event190';
    s.linkTrackEvents = s.events = "event190";
    s.channel = GetChannel();
    s.eVar41 = s.prop41 = APPID;
    s.prop30 = s.pageName = s.eVar27 = analyticsTag;

    //use the link text to form the analytics label
    var customlabel = capitalizeWords(e.target.textContent.replace('&', ' and '))
        .replace('$', 's')
        .replace(/[^\w]/gi, '')
        .replace('Atm', 'ATM')
        .replace('Reorder', 'ReOrder');
    s.eVar113 = s.eVar53 = customlabel;

    //if there is a wizard on the screen, the wizard wants to display a speedbump before 
    //the user navigates away. Since we've gone nuclear on the megamenu, we need to specifically
    //test for a wizard and, if there is one, defer the analytics ajax event(which contains the  
    //navigation event in the callback) to the "yes, cancel" button in the speedbump modal
    //using .one() to hopefully prevent weird binding bugs later

    if ($('.workflow-bar').length) {

        //if there is a wizard, wait a moment and see if a popup loads. 
        //if a popup loads, defer the navigation.
        //if a popup doesn't load, fire the navigation event. 
        //I'm very sorry I had to do this. 
        setTimeout(function () {
            if ($('.ui-dialog').is(':visible')) {
                $(document).on('click.wizardspeedbump', '#btnYesCancel', function () {
                    s.tl(this, 'o', analyticsTag, null, navigate(e.target.href));
                    s.manageVars('clearVars', s.linkTrackEvents, 1);
                });
                //if you hit cancel or X out, you have to unbind the above click event, otherwise weird things start happening
                $(document).one('click', '#btnNoCancel,.ui-dialog-titlebar-close', function () {
                    $(document).off('click.wizardspeedbump');
                });
                //also unbinds the event with the ESC key
                $(document).keyup(function (e) {
                    if (e.keyCode === 27) $(document).off('click.wizardspeedbump');
                });
            } else {
                s.tl(this, 'o', analyticsTag, null, navigate(e.target.href));
                s.manageVars('clearVars', s.linkTrackEvents, 1);
            }
        }, 100);

    } else {
        //s.tl has a callback and we should be using it
        s.tl(this, 'o', analyticsTag, null, navigate(e.target.href));
        s.manageVars('clearVars', s.linkTrackEvents, 1);
    }

    function navigate(url) {
        location.href = url;
    }
});

function TagSnakeBar(buttonRef) {
    var customLink;
    switch (buttonRef) {
        case "bundle":
            customLink = "BundleBusiness";
            break;
        case "eStatements":
            customLink = "StatementsAndNotices";
            break;
        case "bill-pay":
            customLink = "OnlineAndMobileBillPay";
            break;
        case "transfers":
            customLink = "TransfersAndMAndTLoanPayments";
            break;
        case "lnkRewards":
            customLink = "MAndTRewards";
            break;
        case "alerts":
            customLink = "MAndTBankAlerts";
            break;
        case "mobile-web":
            customLink = "MobileBanking";
            break;
        case "zelle":
            customLink = "Zelle";
            break;
        case "lnkCustomCard":
            customLink = "CustomCard";
            break;
        case "lnkOverdraftChoice":
            customLink = "ATMAndDebitCardOverdraftChoice";
            break;
        case "lnkOverdraftProtection":
            customLink = "OverdraftProtectionPlans";
            break;
        case "direct-connect":
            customLink = "DirectConnect";
            break;
        case "authorize":
            customLink = "AddManageUser";
            break;
        case "personal-accounts":
            customLink = "PersonalAccountView";
            break;
        case "MyMessages":
        case "MyServices":
            customLink = buttonRef;
            break;
        default:
            return false;
    }
    var analyticsTag = GetPageNameTag();
    s.linkTrackVars = "pageName,channel,eVar41,eVar53,eVar113,prop30,prop41,event52";
    s.linkTrackEvents = s.events = "event52";
    s.pageName = s.prop30 = analyticsTag;
    s.eVar53 = s.eVar113 = customLink;
    s.channel = GetChannel();
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
}

$(document).on('click', ".js-shortcut-analytics, .add-shortcut, .edit-link", function () {
    var customLink;
    if ($(this).hasClass("js-shortcut-analytics")) {
        if ($(this).text() == "Log In to Web Trading for My Portfolio Management Account") {
            customLink = "LogIntoWebTradingForMyPMA";
        } else {
            customLink = capitalizeWords($(this).text()).replace(/\s/g, "");
        }
    }
    else if ($(this).hasClass("edit-link")) {
        customLink = "Edit";
    }
    else if ($(this).hasClass("add-shortcut")) {
        customLink = "AddShortcut";
    }
    var analyticsTag = GetPageNameTag();
    s.linkTrackVars = "pageName,channel,eVar41,eVar53,eVar113,prop30,prop41,event200";
    s.linkTrackEvents = s.events = "event200";
    s.pageName = s.prop30 = analyticsTag;
    s.eVar53 = s.eVar113 = customLink;
    s.channel = GetChannel();
    s.eVar41 = s.prop41 = APPID;
    s.tl(this, 'o', analyticsTag);
    s.manageVars('clearVars', s.linkTrackEvents, 1);
});

function capitalizeWords(word) {
    return word.replace(/\w\S*/g, function (text) {
        return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();
    });
}

$(function () {

    var loggedInUserType = $("#UserType").val();

    //caching selectors.
    var selector_main_nav = $(".main-nav");
    var selector_secondary_nav = $(".secondary-nav");
    var selector_help_tab = $(".helpTab");
    var selector_search_results = $("#searchResults");
    var selector_results = $("#results");
    var selector_help_right = $(".help-right");
    var selector_help_left = $(".help-left");
    var selector_help_wrapper = $("#help-wrapper");
    var selector_help_area = $("#helpArea");
    var selector_help = $("#help");
    var selector_help_content = $(".help-content");
    var search_results_displayed = false;

    var tabindxstart = 8000;

    selector_help_wrapper.resizable({
        handles: "n",
        minHeight: 360,
        maxHeight: getmaxH(),
        alsoResize: "#help , #helpArea, .help-left, .help-right, .help-content ",
        stop: function () {
            selector_help_wrapper.css("top", "");
        }
    });

    $("#search-value").click(function () {
        $(this).val('').attr('placeholder', '');
    });

    $("#search-value").keyup(function (e) {
        if (e.keyCode == 13) {
            $("#help-search").click();
        }
    });

    //Help tab click - show/hide panel and determine if there is any associated content with this page
    selector_help_tab.find("a").mousedown(function (e) {
        e.preventDefault();
        $(".help-full-screen").text("View Full Screen");

        if (selector_help_area.css('display') == "none") {
            //tag help click for analytics
            TagHelpActiveView();
            if (search_results_displayed == false) {
                selector_help_left.css({ width: "220px" });
                selector_help_right.removeClass("right-narrow").addClass("right-wide");
                selector_help_wrapper.css("height", "");
                selector_help.css("height", "");
                selector_help_area.css("height", "");
                selector_help_content.css("height", "");
                selector_help_left.css("height", "");
                selector_help_right.css("height", "");
                selector_secondary_nav.hide();
                selector_main_nav.empty();

                var mainNavString = "";
                $.ajax({
                    type: "GET",
                    url: "/Common/GetHelpCategories",
                    data: { pageUrl: location.pathname,
                        userType: loggedInUserType
                    },
                    cache: false,
                    success: function (response) {
                        if (response.HelpContent == null)
                            mainNavString += "<li id='0' class='selected'><a href='#' tabindex='" + (tabindxstart++) + "'>Contact Us</a></li>";
                        else {
                            mainNavString += ("<li id='0'><a href='#' tabindex='" + (tabindxstart++) + "'>Contact Us</a></li>");
                        }
                        for (var j = 0; j < response.Categories.length; j++) {
                            //Does not display Contact Us from XML source.
                            if (response.Categories[j].Id != "50") {
                                mainNavString += "<li id='" + response.Categories[j].Id + "'><a href='#' tabindex='" + (tabindxstart++) + "'>" + response.Categories[j].Name + "</a></li>";
                            }
                        }
                        selector_main_nav.append(mainNavString);
                        selector_main_nav.show();

                        if (response.HelpContent != null) {
                            selector_help_right.find("h3").empty();
                            selector_help_right.removeClass("right-wide").addClass("right-narrow");
                            selector_help_left.css({ width: "455px" });

                            renderSecondaryNav(response.SubCategories);
                            populateResults(response.HelpContent);
                        }
                        else {
                            populateContactUs();
                        }
                    }
                });
            }

            $(this).addClass("open");
            selector_help_area.show().css('display', 'inline-block');

        } else {

            $(this).removeClass("open");
            selector_help_area.hide();
            selector_help_wrapper.css({ height: "" });
            selector_help.css({ height: "" });
            $(".helpImage").css("z-index", "400");
        }
    });

    //Primary Nav Click
    selector_main_nav.on("click", "li", function (e) {

        e.preventDefault();
        var categoryId = $(this).attr('id');

        if (categoryId != 0) {
            selector_help_right.removeClass("right-wide").addClass("right-narrow");
            selector_help_left.css({ width: "455px" });
            selector_secondary_nav.empty();
            selector_help_right.find("h2").empty();

            $.ajax({
                type: "GET",
                url: "/Common/GetSubContentByCategoryId",
                data: { categoryId: categoryId },
                success: function (response) {
                    renderSecondaryNav(response.SubCategories);
                    populateResults(response.HelpContent);
                }
            });
        }
        else {
            populateContactUs();
        }

        selector_main_nav.find("li").removeClass("selected");
        $(this).addClass("selected");

    });

    //Secondary Nav Click
    selector_secondary_nav.on("click", "li", function (e) {
        e.preventDefault();

        var categoryId = selector_main_nav.find("li.selected").attr("id");
        var subCategoryId = $(this).attr('id');

        $.ajax({
            type: "GET",
            url: "/Common/GetContentByCategoryId",
            data: { categoryId: categoryId, subCategoryId: subCategoryId },
            success: function (response) {
                populateResults(response.HelpContent);
            }
        });

        $(".secondary-nav li").removeClass("selected");
        $(this).addClass("selected");

    });

    //Search button for new 
    $("#help-search").click(function (e) {
        e.preventDefault();

        var searchTerm = $("#search-value").val();
        if (searchTerm.length == 0) {
            return false;
        }

        selector_secondary_nav.hide();
        selector_help_left.css({ width: "220px" });
        selector_help_right.removeClass("right-narrow").addClass("right-wide");
        selector_main_nav.find("li").removeClass("selected");

        selector_help_right.find("p").remove();
        selector_results.empty().hide();
        selector_search_results.empty();

        $.ajax({
            type: "GET",
            url: "/Common/GetContentBySearchTerm",
            data: { searchTerm: searchTerm },
            success: function (response) {

                var searchDisplayResults = "";
                selector_search_results.empty();

                if (response.HelpContent.length > 0) {
                    var curCategoryHeader = "";
                    searchDisplayResults = "<h2>Search Results for \"" + searchTerm + "\"</h2>";
                    if (response.HelpContent.length == 30) {
                        searchDisplayResults += "<p class='resultCount'>Displaying first 30 results. You may want to narrow your search to further limit results.</p>";
                    } else {
                        searchDisplayResults += "<p class='resultCount'>Displaying " + response.HelpContent.length + " results.</p>";
                    }

                    for (var j = 0; j < response.HelpContent.length; j++) {
                        if (response.HelpContent[j].SubCategory.Name != curCategoryHeader)
                            searchDisplayResults += "<h2>" + response.HelpContent[j].SubCategory.Name + "</h2>";

                        // Special handling of any matches on MetaData in Contact Us section (since it was originally hardcoded)
                        if (response.HelpContent[j].SubCategory.Name == "Contact Us") {
                            searchDisplayResults += "<a class='searchResultHeader' href='/HelpTab/ContactUs'>" + response.HelpContent[j].Heading + "</a>";
                            searchDisplayResults += "<p class='searchResultDetail'>" + response.HelpContent[j].Body + "</p>";

                        } else {
                            //comma delimited string (categoryId, subCategoryId, helpContentId)
                            var link = response.HelpContent[j].Category.Id + "," + response.HelpContent[j].SubCategory.Id + "," + response.HelpContent[j].Id;
                            var displaySentence = displaySearchFirstSentence(response.HelpContent[j].Body, searchTerm);
                            searchDisplayResults += "<a class='searchResultHeader' href='" + link + "'>" + response.HelpContent[j].Heading + "</a>";
                            searchDisplayResults += "<p class='searchResultDetail'>" + displaySentence + "</p>";
                        }

                        curCategoryHeader = response.HelpContent[j].SubCategory.Name;
                    }
                    selector_search_results.append(searchDisplayResults);
                    search_results_displayed = true;
                    TagSuccessSearchTerm(searchTerm);
                } else {
                    searchDisplayResults = "<h2>Search Results for \"" + searchTerm + "\"</h2><p class='resultCount'>No results were found for your search.</p>";
                    var outputString = searchDisplayResults + "<h2>Suggestions</h2>";
                    outputString += "<ul><li>Make sure all words are spelled correctly</li>";
                    outputString += "<li>Try different keywords</li>";
                    outputString += "<li>Try more general keywords</li></ul>";
                    selector_search_results.append(outputString);
                    TagFailedSearchTerm(searchTerm);
                }
            }
        });
    });

    $(document).on("keydown", "#help .main-nav [tabindex], #help .secondary-nav [tabindex]", function (e) {
        tbindex = Number($(this).attr("tabindex"));

        if (e.keyCode == 37 && $(this).parents(".secondary-nav").length) {
            $(".main-nav .selected > a").focus();
        }

        if (e.keyCode == 38) {
            e.preventDefault();
            $("[tabindex='" + (tbindex - 1) + "']").focus();
        }

        if (e.keyCode == 39 && $(this).parent("li").hasClass("selected")) {
            $(".secondary-nav a:eq(0)").focus();
        }

        if (e.keyCode == 40) {
            e.preventDefault();
            $("[tabindex='" + (tbindex + 1) + "']").focus();
        }
    });

    $(document).on("keydown", "#help #results [tabindex]", function (e) {
        if (e.keyCode == 40 || e.keyCode == 38) {
            e.preventDefault();
        }

    });

    // Show/Hide All help topics
    $(document).on("click", ".ViewHideAll", function () {

        if ($('.ViewHideAll').text() == "View All Topics") {
            $('.ViewHideAll').text("Hide All Topics");
            $(".dlClass dt").each(function () {
                $(this).removeClass("inactive-result").addClass("active-result");
                $(this).children("img:first-child").attr("alt", "Hide Detail");
            });
            $(".dlClass dd .help-def").each(function () {
                $(this).css({ display: "block" });
            });

        } else {
            $('.ViewHideAll').text("View All Topics");
            $(".dlClass dt").each(function () {
                $(this).removeClass("active-result").addClass("inactive-result");
                $(this).children("img:first-child").attr("alt", "Show Detail");
            });
            $(".dlClass dd .help-def").each(function () {
                $(this).css({ display: "none" });
            });
        }
    });

    // Search Item Result click
    $(document).on("click", ".searchResultHeader, .help-def a, .helplink", function (e) {

        if ($(this).attr("class") == "helplink" || $(this).attr("class") == "searchResultHeader") {
            e.preventDefault();
            var param = $(this).attr("href");

            if (param != "/HelpTab/ContactUs") {
                $.ajax({
                    type: "GET",
                    url: "/Common/GetSearchResultDetails",
                    data: { parameters: param },
                    success: function (response) {
                        selector_help_right.find("h2").empty();
                        selector_help_right.removeClass("right-wide").addClass("right-narrow");
                        selector_help_left.css({ width: "455px" });

                        renderSecondaryNav(response.SubCategories);
                        populateResults(response.HelpContent, param);
                    }
                });
            } else {
                populateContactUs();
                selector_main_nav.find("li").removeClass("selected");
                selector_main_nav.find("li[id=0]").addClass("selected");
            }
        }
    });


    // Draws secondary nav categories.
    function renderSecondaryNav(SubCategories) {
        var outputString = "";
        selector_secondary_nav.empty();
        for (var i = 0; i < SubCategories.length; i++) {
            outputString += "<li id='" + SubCategories[i].Id + "'><a href='#' tabindex='" + (tabindxstart++) + "'>" + SubCategories[i].Name + "</a></li>";
        }
        selector_secondary_nav.append(outputString);
        selector_secondary_nav.show();
    }

    //Populates results of right pane.
    function populateResults(items, param) {
        selector_help_right.hide();
        selector_help_right.find("p").remove().hide();

        selector_results.empty().show();
        selector_search_results.empty();

        var paramCategoryId = null;
        var paramSubCategoryId = null;
        var paramHelpContentId = null;

        //optional parameter with csv for Ids.
        if (typeof param != 'undefined') {
            var helpContentList = param.split(",");
            paramCategoryId = helpContentList[0];
            paramSubCategoryId = helpContentList[1];
            paramHelpContentId = helpContentList[2];
        }

        var outputString = "";
        if (items.length > 0) {

            outputString += "<h2>" + items[0].SubCategory.SubIntroTitle + "</h2>";
            outputString += "<p>" + items[0].SubCategory.SubIntroOverView + "</p>";

            for (var itemIndex = 0; itemIndex < items[0].SubCategory.SubLinkList.length; itemIndex++) {
                switch (items[0].SubCategory.SubLinkList[itemIndex].LinkType) {
                    case "help":
                        outputString += ("<a class='helplink' href='" + items[0].SubCategory.SubLinkList[itemIndex].Value + "'>" + items[0].SubCategory.SubLinkList[itemIndex].Name + "</a>");
                        break;
                    case "external":
                        outputString += ("<a class='verticalLinks' href='" + items[0].SubCategory.SubLinkList[itemIndex].Value + "' target='_blank'>" + items[0].SubCategory.SubLinkList[itemIndex].Name + "</a>");
                        break;
                    default:
                        outputString += ("<a class='verticalLinks' href='" + items[0].SubCategory.SubLinkList[itemIndex].Value + "'>" + items[0].SubCategory.SubLinkList[itemIndex].Name + "</a>");
                        break;
                }
            }

            if ((items.length == 1) || (items.length > 1 && trimString(items[1].Body) != "")) {

                outputString += "<div class='horizontal_dotted_line'></div>";

                // show view all link if there is more then one expandable section.
                if (items.length > 1) {
                    outputString += ("<p class='viewAll'><span title='View all help topics'></span><a class='ViewHideAll' href='#'>View All Topics</a></p>");
                }


                // Check the location pathname to get the /controller/action. 
                //  For example:
                //      /Transfers/CancelMmfTransaction/66334342  will be
                //      /Transfers/CancelMmfTransaction
                var pathnameURL = location.pathname.toUpperCase();
                var urlList = (pathnameURL.split("/"));
                if (urlList.length > 3) {
                    pathnameURL = "/" + urlList[1] + "/" + urlList[2];
                }

                if (items.length != 1) {
                    outputString += "<dl class='dlClass'>";

                    var startIndex = 1;
                    if (items.length == 1) {
                        startIndex = 0;
                    }

                    for (var j = startIndex; j < items.length; j++) {
                        // String comparer to open up default section in help.                 
                        var isInList = searchStringInArray(items[j].URLList, pathnameURL);

                        // Check URL to open default section OR
                        // Check CategoryId/SubCategoryId/HelpContentId to open default section.                    
                        if (items[j].IntroText != "True") {
                            if (isInList > -1 || (items[j].Category.Id == paramCategoryId && items[j].SubCategory.Id == paramSubCategoryId && items[j].Id == paramHelpContentId)) {
                                outputString += "<dt class='active-result'><img src='/Assets/images/img_trans.gif' alt='Hide Detail'>" + items[j].Heading + "</dt>";
                            } else {
                                outputString += "<dt class='inactive-result'><img src='/Assets/images/img_trans.gif' alt='Show Detail'>" + items[j].Heading + "</dt>";
                            }
                        }

                        outputString += "<dd>";
                        if (items[j].IntroLine != "") {
                            outputString += "<div class='help-intro'>" + items[j].IntroLine + "</div>";
                        }
                        if (items[j].IntroText == "True") {
                            outputString += "<div>" + items[j].Body;
                        } else {
                            if (isInList > -1 || (items[j].Category.Id == paramCategoryId && items[j].SubCategory.Id == paramSubCategoryId && items[j].Id == paramHelpContentId)) {
                                outputString += "<div class='help-def' style='display:block'>" + items[j].Body;
                            } else {
                                outputString += "<div class='help-def'>" + items[j].Body;
                            }
                        }

                        // Does the content have links...if so, display them
                        if (items[j].Link.length > 0) {
                            for (var linkItem = 0; linkItem < items[j].Link.length; linkItem++) {
                                switch (items[j].Link[linkItem].LinkType) {
                                    case "help":
                                        outputString += ("<p><a class='helplink' href='" + items[j].Link[linkItem].Value + "'>" + items[j].Link[linkItem].Name + "</a></p>");
                                        break;
                                    case "external":
                                        outputString += ("<p><a class='verticalLinks' href='" + items[j].Link[linkItem].Value + "' target='_blank'>" + items[j].Link[linkItem].Name + "</a></p>");
                                        break;
                                    default:
                                        outputString += ("<p><a class='verticalLinks' href='" + items[j].Link[linkItem].Value + "'>" + items[j].Link[linkItem].Name + "</a></p>");
                                        break;
                                }
                            }
                        }
                        outputString += "</div></dd>";
                    }
                    outputString += "</dl>";
                }

            }

            selector_main_nav.find("li").removeClass("selected");
            selector_main_nav.find("li[id=" + items[0].Category.Id + "]").addClass("selected");
            selector_secondary_nav.find("li").removeClass("selected");
            selector_secondary_nav.find("li[id=" + items[0].SubCategory.Id + "]").addClass("selected");
        }
        else {
            // No matching help means we need to load the default, Contact Us content
            populateContactUs();
        }

        search_results_displayed = false;
        selector_results.append(outputString);
        selector_help_right.show();

        //First focus
        $("#results a:first").focus();
        $("#search-value").attr('placeholder', 'Search Help');
    }

    //Search string array of URLs
    function searchStringInArray(strArray, str) {
        for (var j = 0; j < strArray.length; j++) {
            if (strArray[j].toUpperCase().match(str)) return j;
        }
        return -1;
    }

    function populateContactUs() {

        selector_help_left.css({ width: "220px" });
        selector_help_right.removeClass("right-narrow").addClass("right-wide");
        selector_help_right.find("h2").empty();
        selector_help_right.find("p").remove();
        selector_results.empty().show();
        selector_search_results.empty();
        selector_secondary_nav.hide();

        search_results_displayed = false;

        var outputstring = "";

        switch ($("#UserType").val()) {
            case "C":
                outputstring += "<div class='help-contact-us''>";
                outputstring += "<div class='colLeft'>";
                outputstring += "<h2 class='helpCall'><span></span>Call Us</h2>";
                outputstring += "<h3>M&T Commercial Service Team</h3>";
                outputstring += "<p>1-800-724-2240 (Mon-Fri, 8am-6pm ET)";
                outputstring += "<h3>User Guide</h3>";
                outputstring += "<p><a href='https://www.mtb.com/Documents/commercial-statements-guide.pdf' target='_blank'>Go to Commercial eStatements User Guide</a></p></div>";
                outputstring += "<div class='colRight'>";
                outputstring += "<h2 class='helpBranch'><span></span>Visit Us</h2><p><a href='https://mtb.com/branches'>Find a Branch or ATM</a></p></div></div>";
                break;
            case "B":
                outputstring += "<div class='help-contact-us''>";
                outputstring += "<div class='colLeft'>";
                outputstring += "<h2 class='helpCall'><span></span>Call Us</h2>";
                outputstring += "<h3>M&T Business Telephone Banking Center</h3>";
                outputstring += "<p>1-800-724-6070 (Mon-Fri 6am-9pm, Sat 9am-5pm ET)";
                outputstring += "<p><a class='additional_number' href='https://mtb.com/customerservice'>View Additional Phone Numbers</a></p>";
                outputstring += "<p><a href='/CustomerService/SendMessage'>Send a Secure Message</a></p></div>";
                outputstring += "<div class='colRight'>";
                outputstring += "<h2 class='helpBranch'><span></span>Visit Us</h2><p><a href='https://mtb.com/branches'>Find a Branch or ATM</a></p></div></div>";
                break;
            default:
                outputstring += "<div class='help-contact-us''>";
                outputstring += "<div class='colLeft'>";
                outputstring += "<h2 class='helpCall'><span></span>Call Us</h2>";
                outputstring += "<h3>M&T Online Customer Service</h3>";
                outputstring += "<p>1-800-790-9130 (Mon-Fri 8am-9pm, Sat-Sun 9am-5pm ET)</p>";
                outputstring += "<h3>Personal Account Customer Service</h3>";
                outputstring += "<p>1-800-790-9130 (Mon-Fri 8am-9pm, Sat-Sun 9am-5pm ET)</p>";
                outputstring += "<h3>M&T Mortgage Customer Service</h3><p>1-800-790-9130 (Mon-Fri 8am-9pm)</p>";
                outputstring += "<p><a class='additional_number' href='https://mtb.com/customerservice'>View Additional Phone Numbers</a></p>";
                outputstring += "<p><a href='/CustomerService/SendMessage'>Send a Secure Message</a></p></div>";
                outputstring += "<div class='colRight'>";
                outputstring += "<h2 class='helpBranch'><span></span>Visit Us</h2><p><a href='https://mtb.com/branches'>Find a Branch or ATM</a></p></div></div>";
                break;
        }

        selector_results.append(outputstring);
        $(".additional_number").focus();
        $("#search-value").attr('placeholder', 'Search Help');
    };

    // Returns first sentence containing search term.
    function displaySearchFirstSentence(body, searchTerm) {
        var temp = strip(body);
        var result = temp.match(/[^\.!\?]+[\.!\?]+/g);
        var firstSentence = "";
        if (result && result.length > 0) {
            firstSentence = result[0];
            for (var i = 0; i < result.length; i++) {
                if (result[i].indexOf(searchTerm) != -1) {
                    firstSentence = result[i].replace(searchTerm, "<b>" + searchTerm + "</b>");
                    break;
                }
            }
        }

        //handle Character count of 160 to show consistent 
        if (firstSentence.length >= 160) {
            if (firstSentence.indexOf(searchTerm) != 1) {
                if (firstSentence.indexOf(searchTerm) <= 160) {
                    firstSentence = firstSentence.substring(0, 160);
                }
            } else {
                firstSentence = firstSentence.substring(0, 160);
            }
        }
        return firstSentence;
    }

    // Toggle the elements in the results area
    $(document).on("click", ".active-result", function (e) {
        $(this).next().children('.help-def').slideToggle(300);
        $(this).removeClass("active-result").addClass("inactive-result");
        $(this).children("img:first-child").attr("alt", "Show Detail");
    });

    $(document).on("click", ".inactive-result", function (e) {
        $(this).next().children('.help-def').slideToggle(300);
        $(this).removeClass("inactive-result").addClass("active-result");
        $(this).children("img:first-child").attr("alt", "Hide Detail");
    });

    $(".help-Print-screen").click(function (e) {
        e.preventDefault();

        // Print the DIV.
        selector_help_right.printThis({
            loadCSS: resourceServer + "/Styles/help.css"
        });

    });

    //Help Full screen functionality, there are a lot of height modifications. Please be careful in testing this throuroughly if any modifications are done to this.
    $(".help-full-screen").click(function (e) {
        e.preventDefault();
        selector_help_wrapper.css("height", "");
        selector_help_left.css("height", "");
        selector_help_right.css("height", "");
        //Extend the help tab Full screen
        if ($(this).text() == "Exit Full Screen") {
            selector_help_wrapper.css("height", "auto");
            selector_help.css("height", "auto");
            $(this).text("View Full Screen");
        }
        else {
            //var height = window.innerHeight;
            var height = document.documentElement.clientHeight;
            selector_help_wrapper.css("height", height - 105 + "px");
            selector_help.css("height", height - 105 + "px");
            $(this).text("Exit Full Screen");
        }

        var leftHeight = selector_help_wrapper.height();
        selector_help_left.height(leftHeight - 40);
        selector_help_right.height(leftHeight - 36);
    });

    //strip html from given text.
    function strip(html) {
        var tempString = document.createElement("div");
        tempString.innerHTML = html;
        return tempString.textContent || tempString.innerText || "";
    }

    function getmaxH() {
        return Number(($(window).height() - ($("#mMenu").height() + $(".app-banner").height())));
    }

    function trimString(x) {
        if (x == null) return "";
        return x.replace(/^\s+|\s+$/gm, '');
    }
});


$(".help-right").ajaxComplete(function () {
    $(".help-right").jScrollPane(
        {
            showArrows: true,
            verticalArrowPositions: 'after',
            horizontalArrowPositions: 'after',
            verticalDragMinWidth: 9,
            verticalDragMaxWidth: 9,
            verticalDragMinHeight: 25,
            autoReinitialise: true,
            hijackInternalLinks: true
        }
    );


    var api = $(".help-right").data('jsp');
    if (api.getContentHeight() > 0) {
        var elementToScrollTo = $("#results").find($(".dlClass")).find($(".active-result"));
        try {
            api.scrollToElement(elementToScrollTo, { stickToTop: true });
        } catch (e) {
            return;
        }
    }
});
  

/*everything is based on LI*/
var userType;
var viewname = window.location.pathname;

var nonemnufocusEle = null;
var sub_menu_open = false;
var keycode = null;

/*
    tab = 9
    enter = 13    
    spacebar = 32
    escape = 27
    arrow up = 38
    arrow right = 39
    arrow down = 40
    arrow left = 37
*/

$(document).ready(function () {
    var loggedInUserType = $("#UserType").attr("value"); //USERTYPE-LABEL
    $(".nav-item:last-child > a").addClass("last-menu-item");
    $(".mMenu_sub_menu ul.subMenu>li>a").click(function (event) {
        if ($(this).attr("href") !== "#") {
            event.stopPropagation();
        }
    });

    // Mitigate IE/Edge bug showing bullets on lists which are hidden when loading the page
    if (document.documentMode || /Edge/.test(navigator.userAgent)) {
        $('ul:hidden').each(function () {
            $(this).parent().append($(this).detach());
        });
    }
    $(".b-ach").closest("ul").css("display","block");
    $("ul.subMenu").each(function () {
        if ($(this).html() == "") {
            $(this).remove();
        }
    });

    $("div.RowContainer div").each(function () {
        if ($.trim($(this).html()) == "") {
            $(this).remove();
        }
    });

    $("div.RowContainer").each(function () {
        if ($.trim($(this).html()) == "") {
            $(this).remove();
        }
    });

    $("div.mMenu_sub_menu").each(function () {
        if ($.trim($(this).html()) == "") {
            $(this).remove();
        }
    });

    $(".mMenu_sub_menu > hr:last-child").remove();

    // Hightlights the selected item in the submenu 
    // Need to compare submenu link to url pathname and account for products controller
    switch (viewname) {
        case "/Transfers/AccountAndLoanPayments":
            viewname = "/Products/Transfers";
            break;
        case "/Payments/PayBill":
            viewname = "/Products/BillPay";
            break;
        case "/Statements/DeliverySettings":
            viewname = "/Products/Statements";
            break;
        case "/Marketing/ZelleInformation":
        case "/Zelle/DigitalServiceAgreement":
        case "/Zelle/EnrollSelect":
        case "/Zelle/EnrollAccount":        
        case "/Zelle/EnrollReview":
        case "/Zelle/EnrollConfirmation":
            viewname = "/Zelle/ManageSettings";
            if ($("#ZelleActionMode").length > 0)
            {
                var zelleActionMode = $("#ZelleActionMode").val().toLowerCase();
                if (zelleActionMode == "sendmoney") {
                    viewname = "/Zelle/SendMoney";
                }
                else if (zelleActionMode == "requestmoney") {
                    viewname = "/Zelle/RequestMoney";
                }
                else if (zelleActionMode == "viewactivity") {
                    viewname = "/Zelle/Activity";
                }
            }
            break;
        case "/Zelle/SendMoneyDetails":
        case "/Zelle/SendMoneyReview":
        case "/Zelle/SendMoneyConfirmation":
            viewname = "/Zelle/SendMoney";
            break;
        case "/Zelle/RequestMoneyDetails":
        case "/Zelle/RequestMoneyReview":
        case "/Zelle/RequestMoneyConfirmation":
            viewname = "/Zelle/RequestMoney";
            break;
        case "/Zelle/ZelleActivityDetails":
            viewname = "/Zelle/Activity";
            break;
        default:
            // use the default viewname
    }

    if(viewname.indexOf("/Zelle/ManageContactSettings") != -1)
    {
        viewname = "/Zelle/ManageSettings";
    }
    $(".subMenu a[href='" + viewname + "']:eq(0)").closest("li").addClass("sel-mItem");
    if (viewname.indexOf("/PFM/") == 0) {
        $(".subMenu a[href='" + viewname + "']:eq(0)").closest("li").removeClass("sel-mItem");
    }
    // logic for new Mega Menu indicator
    var menuItems = $('#mMenu > li');
    jQuery.each(menuItems, function (index, item) {
        if ($(item).has("a[href='" + viewname + "']").length > 0) {
                $(item).addClass("sel-mItem");
                $(item).children('a').children('span').addClass("menu-indicator");
            return false;
        }
        // some pages are not in the list of menu items
        // these require special logic to show the Mega Menu indicator
        else if (index == 2 && (viewname.indexOf("Marketing") > -1 || viewname.indexOf("Services") > -1 || viewname.indexOf("Alerts") > -1 || viewname.indexOf("Mobile") > -1 || viewname.indexOf("/Email/") > -1)) {
            $(item).addClass("sel-mItem");
            $(item).children('a').children('span').addClass("menu-indicator");
        }
        else if (index == 1 && ((viewname.indexOf("Payments") > -1) || (viewname.indexOf("Transfers") > -1) || (viewname.indexOf("Statements") > -1))) {
            $(item).addClass("sel-mItem");
            $(item).children('a').children('span').addClass("menu-indicator");
        }
        if (loggedInUserType == "B" || loggedInUserType == "R") {
            if (index == 0 && (viewname.indexOf("Statements") > -1)) {
                $(item).addClass("sel-mItem");
                $(item).children('a').children('span').addClass("menu-indicator");
                return false;
            }
        }

    });

    veryfirstmenuEle = $("#mMenu").find("a").first();
    verylastmenuEle = $("#mMenu").find("a").last();

    $(".nav-item").mouseenter(function () { nav_item_Hover(this); });
    $(".nav-item").mouseleave(function () { nav_item_Blur(); });


    //logic for messages menu indicator
    if (/Message/i.test(viewname)) {
        $(".utilityMenu > li > a[href*='MessageSummary']").closest("li").addClass("messages-utility-menu-selected");
    }
    //logic for bundles menu indicator
    if (/Bundles/i.test(viewname)) {
        $(".utilityMenu > li > a[href*='Bundles']").closest("li").addClass("bundle-utility-menu-selected");
    }

    //this is to close the mega when a click happens outside of mega | question if this will affect performance
    $("*").mouseup(function (e) {
        if (sub_menu_open && ($(this).parent("#mMenu").length < 1)) {
            hide_all_mMenu_sub_menu();
        }
    });

    $(".nav-item").keydown(function (e) {
        keycode = e.keyCode;

        n = 0;
        theltrpresed = String.fromCharCode(keycode)
        if (/[A-Z]/.test(theltrpresed)) { //makes sure its a letter key

            ltrpiked = theltrpresed.toUpperCase();
            alllinks = $(this).find(".subMenu a:contains('" + ltrpiked + "')");

            $(alllinks).each(function (i, v) {
                if ($(this).html().substring(0, 1) == ltrpiked) { //ignore if not first letter

                    if ($(this).is(":focus") && (i) < $(alllinks).length) {
                        n = i + 1;
                    }

                }
            });

            make_obj_in_focus($(alllinks).get(n));

        }
    });


    $(".mMenu_sub_menu a").keydown(function (e) {
        keycode = e.keyCode;
        mytabindx = Number($(this).attr("tabindex"));
        nxt_tabindx = Number(mytabindx) + 1;
        prev_tabindx = Number(mytabindx) - 1;

        myfirstlnktabndx = Number($(this).closest(".subMenu").children().first().children("a").attr("tabindex"));
        mylastlnktabndx = Number($(this).closest(".subMenu").children().last().children("a").attr("tabindex"));
        prevfirstlnktabndx = Number($("[tabindex='" + (myfirstlnktabndx - 1) + "']").closest(".subMenu").children().first().children("a").attr("tabindex"));
        nxtfirstlnktabndx = Number($("[tabindex='" + (mylastlnktabndx + 1) + "']").closest(".subMenu").children().first().children("a").attr("tabindex"));

        mylistpos = Number($(this).closest("li").index());

        prevcolindx = prevfirstlnktabndx + mylistpos;
        preindexobj = $("[tabindex='" + prevcolindx + "']");

        nexcolindx = nxtfirstlnktabndx + mylistpos;
        nxindexobj = $("[tabindex='" + nexcolindx + "']");

        if (keycode == 9 || keycode == 13 || keycode == 32 || keycode >= 37 && keycode <= 40) {
            prevent_def_kb_action(e);
        }

        if (keycode == 13) {
            gotoLink(this);
        }

        if (keycode == 37) {
            if ($(this).closest(".nav-item").index() == $(preindexobj).closest(".nav-item").index()) {
                make_obj_in_focus($(preindexobj));
            }
        }

        if (keycode == 38) {
            make_obj_in_focus($("[tabindex='" + prev_tabindx + "']"));
        }


        if (keycode == 39) {
            if ($(this).closest(".nav-item").index() == $(nxindexobj).closest(".nav-item").index()) {
                make_obj_in_focus($(nxindexobj));
            }
        }

        if (keycode == 9 || keycode == 40) {

            if ($("[tabindex='" + nxt_tabindx + "']").attr("id") == "main-content") {
                hide_all_mMenu_sub_menu();
                nxt_tabindx = nxt_tabindx + 1;
            }

            make_obj_in_focus($("[tabindex='" + nxt_tabindx + "']"));
        }

        if (e.shiftKey && keycode == 9) {
            make_obj_in_focus($("[tabindex='" + prev_tabindx + "']"));
        }

    });


    $(".nav-item > a").keyup(function (e) {
        navitem = $(this).closest(".nav-item");
        navitm_subnav = $(navitem).children(".mMenu_sub_menu");
        prev_navitem = $(navitem).prev();
        nxt_navitem = $(navitem).next();
        keycode = e.keyCode;

        if (sub_menu_open) {
            //main nav keydown submenu open
            if (keycode == 9 || keycode == 40) {
                show_nav_item_mMenu_sub_menu($(navitem));
            }
            //main nav keydown submenu open
        }
    });

    $(".nav-item > a").keydown(function (e) {
        navitem = $(this).closest(".nav-item");
        navitm_subnav = $(navitem).children(".mMenu_sub_menu");
        prev_navitem = $(navitem).prev();
        nxt_navitem = $(navitem).next();
        keycode = e.keyCode;


        if (keycode == 13 || keycode == 32 || keycode >= 37 && keycode <= 40) {

            prevent_def_kb_action(e);
        }


        if (sub_menu_open) {
            //main nav keydown submenu open
            if (keycode == 13) { //enter|spacebar|down open submenu
                gotoLink(this);
            }

            if (keycode == 37) {
                make_obj_in_focus($(prev_navitem).children("a:eq(0)"));
                show_nav_item_mMenu_sub_menu($(prev_navitem));
            }

            if (keycode == 38) {
                hide_all_mMenu_sub_menu();
            }

            if (keycode == 39) {
                make_obj_in_focus($(nxt_navitem).children("a:eq(0)"));
                show_nav_item_mMenu_sub_menu($(nxt_navitem));
            }

            if (keycode == 40) {
                make_obj_in_focus($(navitm_subnav).find("a:eq(0)"));
            }

            //main nav keydown submenu open
        } else if (!sub_menu_open) {
            //main nav keydown submenu closed

            if (keycode == 13 || keycode == 32 || keycode == 40) { //enter|spacebar|down open submenu
                show_nav_item_mMenu_sub_menu(navitem);
            }

            if (keycode == 37) {
                make_obj_in_focus($(prev_navitem).children("a:eq(0)"));
            }

            if (keycode == 39) {
                make_obj_in_focus($(nxt_navitem).children("a:eq(0)"));
            }

            //main nav keydown submenu closed
        }

    });

    //end of ready
});

function nav_item_Hover(li) {
    if ($(li).length > 0) {
        ($("*:focus").parents("#mMenu").length == 0) ? nonemnufocusEle = $("*:focus") : ""; //set non menu focus element    
        show_nav_item_mMenu_sub_menu(li);
        make_obj_in_focus($(li).children("a:eq(0)")); //set focus to (a) of nav-item (li)
    }
}

function nav_item_Blur() {
    hide_all_mMenu_sub_menu();
   // nonemnufocusEle != null ? make_obj_in_focus(nonemnufocusEle) : "";
    $(".nav-item > a").is(":focus") ? $(".nav-item > a").blur() : "";
}

function hide_all_mMenu_sub_menu() {
    $(".mMenu_sub_menu").hide();
    $(".nav-item > a").removeClass("submenuopen");
    sub_menu_open = false;
}

function show_nav_item_mMenu_sub_menu(li) {
    if( $(li).length > 0 ){
        hide_all_mMenu_sub_menu();
        $(li).children(".mMenu_sub_menu").show();
        sub_menu_open = true;
        $(li).children("a:eq(0)").addClass("submenuopen");
    }
}

function make_obj_in_focus(obj) {
    if ($(obj).length > 0) {
        $(obj).focus();
    }
}

function prevent_def_kb_action(e) {
    e.preventDefault();    
}

function gotoLink(a) {
    hide_all_mMenu_sub_menu();
   if (!(($(a).hasClass('ext-link-4')) || $(a).hasClass('ext-link-2'))) {
        window.location = $(a).attr("href");
    }
}
